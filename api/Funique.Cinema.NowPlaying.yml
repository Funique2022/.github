### YamlMime:ManagedReference
items:
- uid: Funique.Cinema.NowPlaying
  commentId: T:Funique.Cinema.NowPlaying
  id: NowPlaying
  parent: Funique.Cinema
  children:
  - Funique.Cinema.NowPlaying.#ctor(Funique.Cinema.PlayableType,System.String,Funique.InfoBase)
  - Funique.Cinema.NowPlaying.reference
  - Funique.Cinema.NowPlaying.text
  - Funique.Cinema.NowPlaying.ToString
  - Funique.Cinema.NowPlaying.type
  langs:
  - csharp
  - vb
  name: NowPlaying
  nameWithType: NowPlaying
  fullName: Funique.Cinema.NowPlaying
  type: Struct
  source:
    remote:
      path: Struct/NowPlaying.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: NowPlaying
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Struct/NowPlaying.cs
    startLine: 9
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nCurrently playing mark <br />\nThe temp structure represent the playing media <br />\n------------------------------------------------ <br />\n目前播放的媒體標示 <br />\n暫時存取使用的結構, 用於表示當前播放的媒體\n"
  example: []
  syntax:
    content: public struct NowPlaying
    content.vb: Public Structure NowPlaying
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Funique.Cinema.NowPlaying.type
  commentId: F:Funique.Cinema.NowPlaying.type
  id: type
  parent: Funique.Cinema.NowPlaying
  langs:
  - csharp
  - vb
  name: type
  nameWithType: NowPlaying.type
  fullName: Funique.Cinema.NowPlaying.type
  type: Field
  source:
    remote:
      path: Struct/NowPlaying.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: type
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Struct/NowPlaying.cs
    startLine: 11
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  syntax:
    content: public readonly PlayableType type
    return:
      type: Funique.Cinema.PlayableType
    content.vb: Public ReadOnly type As PlayableType
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Funique.Cinema.NowPlaying.text
  commentId: F:Funique.Cinema.NowPlaying.text
  id: text
  parent: Funique.Cinema.NowPlaying
  langs:
  - csharp
  - vb
  name: text
  nameWithType: NowPlaying.text
  fullName: Funique.Cinema.NowPlaying.text
  type: Field
  source:
    remote:
      path: Struct/NowPlaying.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: text
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Struct/NowPlaying.cs
    startLine: 12
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  syntax:
    content: public readonly string text
    return:
      type: System.String
    content.vb: Public ReadOnly text As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Funique.Cinema.NowPlaying.reference
  commentId: F:Funique.Cinema.NowPlaying.reference
  id: reference
  parent: Funique.Cinema.NowPlaying
  langs:
  - csharp
  - vb
  name: reference
  nameWithType: NowPlaying.reference
  fullName: Funique.Cinema.NowPlaying.reference
  type: Field
  source:
    remote:
      path: Struct/NowPlaying.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: reference
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Struct/NowPlaying.cs
    startLine: 13
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  syntax:
    content: public readonly InfoBase reference
    return:
      type: Funique.InfoBase
    content.vb: Public ReadOnly reference As InfoBase
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Funique.Cinema.NowPlaying.#ctor(Funique.Cinema.PlayableType,System.String,Funique.InfoBase)
  commentId: M:Funique.Cinema.NowPlaying.#ctor(Funique.Cinema.PlayableType,System.String,Funique.InfoBase)
  id: '#ctor(Funique.Cinema.PlayableType,System.String,Funique.InfoBase)'
  parent: Funique.Cinema.NowPlaying
  langs:
  - csharp
  - vb
  name: NowPlaying(PlayableType, String, InfoBase)
  nameWithType: NowPlaying.NowPlaying(PlayableType, String, InfoBase)
  fullName: Funique.Cinema.NowPlaying.NowPlaying(Funique.Cinema.PlayableType, System.String, Funique.InfoBase)
  type: Constructor
  source:
    remote:
      path: Struct/NowPlaying.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: .ctor
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Struct/NowPlaying.cs
    startLine: 15
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  syntax:
    content: public NowPlaying(PlayableType type, string text, InfoBase reference)
    parameters:
    - id: type
      type: Funique.Cinema.PlayableType
    - id: text
      type: System.String
    - id: reference
      type: Funique.InfoBase
    content.vb: Public Sub New(type As PlayableType, text As String, reference As InfoBase)
  overload: Funique.Cinema.NowPlaying.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Cinema.NowPlaying.ToString
  commentId: M:Funique.Cinema.NowPlaying.ToString
  id: ToString
  parent: Funique.Cinema.NowPlaying
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: NowPlaying.ToString()
  fullName: Funique.Cinema.NowPlaying.ToString()
  type: Method
  source:
    remote:
      path: Struct/NowPlaying.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: ToString
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Struct/NowPlaying.cs
    startLine: 22
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: Funique.Cinema.NowPlaying.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Funique.Cinema
  commentId: N:Funique.Cinema
  name: Funique.Cinema
  nameWithType: Funique.Cinema
  fullName: Funique.Cinema
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Funique.Cinema.PlayableType
  commentId: T:Funique.Cinema.PlayableType
  parent: Funique.Cinema
  name: PlayableType
  nameWithType: PlayableType
  fullName: Funique.Cinema.PlayableType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Funique.InfoBase
  commentId: T:Funique.InfoBase
  parent: Funique
  name: InfoBase
  nameWithType: InfoBase
  fullName: Funique.InfoBase
- uid: Funique
  commentId: N:Funique
  name: Funique
  nameWithType: Funique
  fullName: Funique
- uid: Funique.Cinema.NowPlaying.#ctor*
  commentId: Overload:Funique.Cinema.NowPlaying.#ctor
  name: NowPlaying
  nameWithType: NowPlaying.NowPlaying
  fullName: Funique.Cinema.NowPlaying.NowPlaying
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Cinema.NowPlaying.ToString*
  commentId: Overload:Funique.Cinema.NowPlaying.ToString
  name: ToString
  nameWithType: NowPlaying.ToString
  fullName: Funique.Cinema.NowPlaying.ToString
