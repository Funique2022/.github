### YamlMime:ManagedReference
items:
- uid: Funique.Manager.NetworkManagerClientUtility
  commentId: T:Funique.Manager.NetworkManagerClientUtility
  id: NetworkManagerClientUtility
  parent: Funique.Manager
  children:
  - Funique.Manager.NetworkManagerClientUtility._dataWriter
  - Funique.Manager.NetworkManagerClientUtility.AnalysisUpdateInformation(System.String[],System.Int32)
  - Funique.Manager.NetworkManagerClientUtility.Client
  - Funique.Manager.NetworkManagerClientUtility.CloseClientNetwork
  - Funique.Manager.NetworkManagerClientUtility.Dispose
  - Funique.Manager.NetworkManagerClientUtility.FrameUpdate
  - Funique.Manager.NetworkManagerClientUtility.Initialization
  - Funique.Manager.NetworkManagerClientUtility.LiteNetInit
  - Funique.Manager.NetworkManagerClientUtility.masterInfomation
  - Funique.Manager.NetworkManagerClientUtility.OnConnected
  - Funique.Manager.NetworkManagerClientUtility.OnConnectionRequest(LiteNetLib.ConnectionRequest)
  - Funique.Manager.NetworkManagerClientUtility.OnDisconnected
  - Funique.Manager.NetworkManagerClientUtility.OnError
  - Funique.Manager.NetworkManagerClientUtility.OnLatency
  - Funique.Manager.NetworkManagerClientUtility.OnNetworkError(System.Net.IPEndPoint,System.Net.Sockets.SocketError)
  - Funique.Manager.NetworkManagerClientUtility.OnNetworkLatencyUpdate(LiteNetLib.NetPeer,System.Int32)
  - Funique.Manager.NetworkManagerClientUtility.OnNetworkReceive(LiteNetLib.NetPeer,LiteNetLib.NetPacketReader,LiteNetLib.DeliveryMethod)
  - Funique.Manager.NetworkManagerClientUtility.OnNetworkReceiveUnconnected(System.Net.IPEndPoint,LiteNetLib.NetPacketReader,LiteNetLib.UnconnectedMessageType)
  - Funique.Manager.NetworkManagerClientUtility.OnPeerConnected(LiteNetLib.NetPeer)
  - Funique.Manager.NetworkManagerClientUtility.OnPeerDisconnected(LiteNetLib.NetPeer,LiteNetLib.DisconnectInfo)
  - Funique.Manager.NetworkManagerClientUtility.OnReceived
  - Funique.Manager.NetworkManagerClientUtility.OpenClientNetwork
  - Funique.Manager.NetworkManagerClientUtility.ReceivedUpdateInformation(System.String[])
  - Funique.Manager.NetworkManagerClientUtility.SendMessageToBoardcast(System.String,LiteNetLib.DeliveryMethod)
  - Funique.Manager.NetworkManagerClientUtility.SendMessageToServer(System.String,LiteNetLib.DeliveryMethod)
  langs:
  - csharp
  - vb
  name: NetworkManagerClientUtility
  nameWithType: NetworkManagerClientUtility
  fullName: Funique.Manager.NetworkManagerClientUtility
  type: Class
  source:
    remote:
      path: NetworkManagerClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: NetworkManagerClientUtility
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/NetworkManagerClientUtility.cs
    startLine: 14
  assemblies:
  - Funique.Network
  namespace: Funique.Manager
  syntax:
    content: 'public class NetworkManagerClientUtility : ManagerBase<NetworkManagerData>, IDisposable, INetEventListener, INetworkClientUtility, INetworkEvent'
    content.vb: >-
      Public Class NetworkManagerClientUtility

          Inherits ManagerBase(Of NetworkManagerData)

          Implements IDisposable, INetEventListener, INetworkClientUtility, INetworkEvent
  inheritance:
  - System.Object
  - Funique.Manager.ManagerBase
  - Funique.Manager.ManagerBase{Funique.Network.NetworkManagerData}
  implements:
  - System.IDisposable
  - LiteNetLib.INetEventListener
  - Funique.Network.INetworkClientUtility
  - Funique.Network.INetworkEvent
  inheritedMembers:
  - Funique.Manager.ManagerBase{Funique.Network.NetworkManagerData}.config
  - Funique.Manager.ManagerBase{Funique.Network.NetworkManagerData}.RegisterConfig(Funique.Network.NetworkManagerData)
  - Funique.Manager.ManagerBase{Funique.Network.NetworkManagerData}.Loaded(Funique.Network.NetworkManagerData)
  - Funique.Manager.ManagerBase.Shutdown
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Funique.Manager.NetworkManagerClientUtility._dataWriter
  commentId: F:Funique.Manager.NetworkManagerClientUtility._dataWriter
  id: _dataWriter
  parent: Funique.Manager.NetworkManagerClientUtility
  langs:
  - csharp
  - vb
  name: _dataWriter
  nameWithType: NetworkManagerClientUtility._dataWriter
  fullName: Funique.Manager.NetworkManagerClientUtility._dataWriter
  type: Field
  source:
    remote:
      path: NetworkManagerClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: _dataWriter
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/NetworkManagerClientUtility.cs
    startLine: 23
  assemblies:
  - Funique.Network
  namespace: Funique.Manager
  summary: "\nData writer instance <br />\n------------------------------------------------ <br />\n資料寫入實體\n"
  example: []
  syntax:
    content: protected NetDataWriter _dataWriter
    return:
      type: LiteNetLib.Utils.NetDataWriter
    content.vb: Protected _dataWriter As NetDataWriter
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Funique.Manager.NetworkManagerClientUtility.masterInfomation
  commentId: F:Funique.Manager.NetworkManagerClientUtility.masterInfomation
  id: masterInfomation
  parent: Funique.Manager.NetworkManagerClientUtility
  langs:
  - csharp
  - vb
  name: masterInfomation
  nameWithType: NetworkManagerClientUtility.masterInfomation
  fullName: Funique.Manager.NetworkManagerClientUtility.masterInfomation
  type: Field
  source:
    remote:
      path: NetworkManagerClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: masterInfomation
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/NetworkManagerClientUtility.cs
    startLine: 24
  assemblies:
  - Funique.Network
  namespace: Funique.Manager
  syntax:
    content: protected MasterInfomation masterInfomation
    return:
      type: Funique.MasterInfomation
    content.vb: Protected masterInfomation As MasterInfomation
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Funique.Manager.NetworkManagerClientUtility.Client
  commentId: P:Funique.Manager.NetworkManagerClientUtility.Client
  id: Client
  parent: Funique.Manager.NetworkManagerClientUtility
  langs:
  - csharp
  - vb
  name: Client
  nameWithType: NetworkManagerClientUtility.Client
  fullName: Funique.Manager.NetworkManagerClientUtility.Client
  type: Property
  source:
    remote:
      path: NetworkManagerClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: Client
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/NetworkManagerClientUtility.cs
    startLine: 30
  assemblies:
  - Funique.Network
  namespace: Funique.Manager
  syntax:
    content: public NetManager Client { get; }
    parameters: []
    return:
      type: LiteNetLib.NetManager
    content.vb: Public ReadOnly Property Client As NetManager
  overload: Funique.Manager.NetworkManagerClientUtility.Client*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Funique.Manager.NetworkManagerClientUtility.OnConnected
  commentId: E:Funique.Manager.NetworkManagerClientUtility.OnConnected
  id: OnConnected
  parent: Funique.Manager.NetworkManagerClientUtility
  langs:
  - csharp
  - vb
  name: OnConnected
  nameWithType: NetworkManagerClientUtility.OnConnected
  fullName: Funique.Manager.NetworkManagerClientUtility.OnConnected
  type: Event
  source:
    remote:
      path: NetworkManagerClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: OnConnected
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/NetworkManagerClientUtility.cs
    startLine: 36
  assemblies:
  - Funique.Network
  namespace: Funique.Manager
  syntax:
    content: public event EventHandler<PeerEventArgs> OnConnected
    return:
      type: System.EventHandler{Funique.Network.PeerEventArgs}
    content.vb: Public Event OnConnected As EventHandler(Of PeerEventArgs)
  implements:
  - Funique.Network.INetworkEvent.OnConnected
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Manager.NetworkManagerClientUtility.OnDisconnected
  commentId: E:Funique.Manager.NetworkManagerClientUtility.OnDisconnected
  id: OnDisconnected
  parent: Funique.Manager.NetworkManagerClientUtility
  langs:
  - csharp
  - vb
  name: OnDisconnected
  nameWithType: NetworkManagerClientUtility.OnDisconnected
  fullName: Funique.Manager.NetworkManagerClientUtility.OnDisconnected
  type: Event
  source:
    remote:
      path: NetworkManagerClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: OnDisconnected
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/NetworkManagerClientUtility.cs
    startLine: 37
  assemblies:
  - Funique.Network
  namespace: Funique.Manager
  syntax:
    content: public event EventHandler<DisconnectEventArgs> OnDisconnected
    return:
      type: System.EventHandler{Funique.Network.DisconnectEventArgs}
    content.vb: Public Event OnDisconnected As EventHandler(Of DisconnectEventArgs)
  implements:
  - Funique.Network.INetworkEvent.OnDisconnected
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Manager.NetworkManagerClientUtility.OnLatency
  commentId: E:Funique.Manager.NetworkManagerClientUtility.OnLatency
  id: OnLatency
  parent: Funique.Manager.NetworkManagerClientUtility
  langs:
  - csharp
  - vb
  name: OnLatency
  nameWithType: NetworkManagerClientUtility.OnLatency
  fullName: Funique.Manager.NetworkManagerClientUtility.OnLatency
  type: Event
  source:
    remote:
      path: NetworkManagerClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: OnLatency
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/NetworkManagerClientUtility.cs
    startLine: 38
  assemblies:
  - Funique.Network
  namespace: Funique.Manager
  syntax:
    content: public event EventHandler<LatencyEventArgs> OnLatency
    return:
      type: System.EventHandler{Funique.Network.LatencyEventArgs}
    content.vb: Public Event OnLatency As EventHandler(Of LatencyEventArgs)
  implements:
  - Funique.Network.INetworkEvent.OnLatency
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Manager.NetworkManagerClientUtility.OnError
  commentId: E:Funique.Manager.NetworkManagerClientUtility.OnError
  id: OnError
  parent: Funique.Manager.NetworkManagerClientUtility
  langs:
  - csharp
  - vb
  name: OnError
  nameWithType: NetworkManagerClientUtility.OnError
  fullName: Funique.Manager.NetworkManagerClientUtility.OnError
  type: Event
  source:
    remote:
      path: NetworkManagerClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: OnError
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/NetworkManagerClientUtility.cs
    startLine: 39
  assemblies:
  - Funique.Network
  namespace: Funique.Manager
  syntax:
    content: public event EventHandler<ErrorEventArgs> OnError
    return:
      type: System.EventHandler{Funique.Network.ErrorEventArgs}
    content.vb: Public Event OnError As EventHandler(Of ErrorEventArgs)
  implements:
  - Funique.Network.INetworkEvent.OnError
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Manager.NetworkManagerClientUtility.OnReceived
  commentId: E:Funique.Manager.NetworkManagerClientUtility.OnReceived
  id: OnReceived
  parent: Funique.Manager.NetworkManagerClientUtility
  langs:
  - csharp
  - vb
  name: OnReceived
  nameWithType: NetworkManagerClientUtility.OnReceived
  fullName: Funique.Manager.NetworkManagerClientUtility.OnReceived
  type: Event
  source:
    remote:
      path: NetworkManagerClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: OnReceived
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/NetworkManagerClientUtility.cs
    startLine: 40
  assemblies:
  - Funique.Network
  namespace: Funique.Manager
  syntax:
    content: public event EventHandler<ReceivedEventArgs> OnReceived
    return:
      type: System.EventHandler{Funique.Network.ReceivedEventArgs}
    content.vb: Public Event OnReceived As EventHandler(Of ReceivedEventArgs)
  implements:
  - Funique.Network.INetworkEvent.OnReceived
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Manager.NetworkManagerClientUtility.Initialization
  commentId: M:Funique.Manager.NetworkManagerClientUtility.Initialization
  id: Initialization
  parent: Funique.Manager.NetworkManagerClientUtility
  langs:
  - csharp
  - vb
  name: Initialization()
  nameWithType: NetworkManagerClientUtility.Initialization()
  fullName: Funique.Manager.NetworkManagerClientUtility.Initialization()
  type: Method
  source:
    remote:
      path: NetworkManagerClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: Initialization
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/NetworkManagerClientUtility.cs
    startLine: 46
  assemblies:
  - Funique.Network
  namespace: Funique.Manager
  syntax:
    content: public override void Initialization()
    content.vb: Public Overrides Sub Initialization
  overridden: Funique.Manager.ManagerBase.Initialization
  overload: Funique.Manager.NetworkManagerClientUtility.Initialization*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Funique.Manager.NetworkManagerClientUtility.FrameUpdate
  commentId: M:Funique.Manager.NetworkManagerClientUtility.FrameUpdate
  id: FrameUpdate
  parent: Funique.Manager.NetworkManagerClientUtility
  langs:
  - csharp
  - vb
  name: FrameUpdate()
  nameWithType: NetworkManagerClientUtility.FrameUpdate()
  fullName: Funique.Manager.NetworkManagerClientUtility.FrameUpdate()
  type: Method
  source:
    remote:
      path: NetworkManagerClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: FrameUpdate
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/NetworkManagerClientUtility.cs
    startLine: 51
  assemblies:
  - Funique.Network
  namespace: Funique.Manager
  syntax:
    content: public override void FrameUpdate()
    content.vb: Public Overrides Sub FrameUpdate
  overridden: Funique.Manager.ManagerBase.FrameUpdate
  overload: Funique.Manager.NetworkManagerClientUtility.FrameUpdate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Funique.Manager.NetworkManagerClientUtility.Dispose
  commentId: M:Funique.Manager.NetworkManagerClientUtility.Dispose
  id: Dispose
  parent: Funique.Manager.NetworkManagerClientUtility
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: NetworkManagerClientUtility.Dispose()
  fullName: Funique.Manager.NetworkManagerClientUtility.Dispose()
  type: Method
  source:
    remote:
      path: NetworkManagerClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: Dispose
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/NetworkManagerClientUtility.cs
    startLine: 63
  assemblies:
  - Funique.Network
  namespace: Funique.Manager
  syntax:
    content: public override void Dispose()
    content.vb: Public Overrides Sub Dispose
  overridden: Funique.Manager.ManagerBase.Dispose
  overload: Funique.Manager.NetworkManagerClientUtility.Dispose*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Funique.Manager.NetworkManagerClientUtility.OnPeerConnected(LiteNetLib.NetPeer)
  commentId: M:Funique.Manager.NetworkManagerClientUtility.OnPeerConnected(LiteNetLib.NetPeer)
  id: OnPeerConnected(LiteNetLib.NetPeer)
  parent: Funique.Manager.NetworkManagerClientUtility
  langs:
  - csharp
  - vb
  name: OnPeerConnected(NetPeer)
  nameWithType: NetworkManagerClientUtility.OnPeerConnected(NetPeer)
  fullName: Funique.Manager.NetworkManagerClientUtility.OnPeerConnected(LiteNetLib.NetPeer)
  type: Method
  source:
    remote:
      path: NetworkManagerClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: OnPeerConnected
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/NetworkManagerClientUtility.cs
    startLine: 78
  assemblies:
  - Funique.Network
  namespace: Funique.Manager
  syntax:
    content: public virtual void OnPeerConnected(NetPeer peer)
    parameters:
    - id: peer
      type: LiteNetLib.NetPeer
    content.vb: Public Overridable Sub OnPeerConnected(peer As NetPeer)
  overload: Funique.Manager.NetworkManagerClientUtility.OnPeerConnected*
  implements:
  - LiteNetLib.INetEventListener.OnPeerConnected(LiteNetLib.NetPeer)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Funique.Manager.NetworkManagerClientUtility.OnPeerDisconnected(LiteNetLib.NetPeer,LiteNetLib.DisconnectInfo)
  commentId: M:Funique.Manager.NetworkManagerClientUtility.OnPeerDisconnected(LiteNetLib.NetPeer,LiteNetLib.DisconnectInfo)
  id: OnPeerDisconnected(LiteNetLib.NetPeer,LiteNetLib.DisconnectInfo)
  parent: Funique.Manager.NetworkManagerClientUtility
  langs:
  - csharp
  - vb
  name: OnPeerDisconnected(NetPeer, DisconnectInfo)
  nameWithType: NetworkManagerClientUtility.OnPeerDisconnected(NetPeer, DisconnectInfo)
  fullName: Funique.Manager.NetworkManagerClientUtility.OnPeerDisconnected(LiteNetLib.NetPeer, LiteNetLib.DisconnectInfo)
  type: Method
  source:
    remote:
      path: NetworkManagerClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: OnPeerDisconnected
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/NetworkManagerClientUtility.cs
    startLine: 83
  assemblies:
  - Funique.Network
  namespace: Funique.Manager
  syntax:
    content: public virtual void OnPeerDisconnected(NetPeer peer, DisconnectInfo disconnectInfo)
    parameters:
    - id: peer
      type: LiteNetLib.NetPeer
    - id: disconnectInfo
      type: LiteNetLib.DisconnectInfo
    content.vb: Public Overridable Sub OnPeerDisconnected(peer As NetPeer, disconnectInfo As DisconnectInfo)
  overload: Funique.Manager.NetworkManagerClientUtility.OnPeerDisconnected*
  implements:
  - LiteNetLib.INetEventListener.OnPeerDisconnected(LiteNetLib.NetPeer,LiteNetLib.DisconnectInfo)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Funique.Manager.NetworkManagerClientUtility.OnNetworkError(System.Net.IPEndPoint,System.Net.Sockets.SocketError)
  commentId: M:Funique.Manager.NetworkManagerClientUtility.OnNetworkError(System.Net.IPEndPoint,System.Net.Sockets.SocketError)
  id: OnNetworkError(System.Net.IPEndPoint,System.Net.Sockets.SocketError)
  parent: Funique.Manager.NetworkManagerClientUtility
  langs:
  - csharp
  - vb
  name: OnNetworkError(IPEndPoint, SocketError)
  nameWithType: NetworkManagerClientUtility.OnNetworkError(IPEndPoint, SocketError)
  fullName: Funique.Manager.NetworkManagerClientUtility.OnNetworkError(System.Net.IPEndPoint, System.Net.Sockets.SocketError)
  type: Method
  source:
    remote:
      path: NetworkManagerClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: OnNetworkError
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/NetworkManagerClientUtility.cs
    startLine: 88
  assemblies:
  - Funique.Network
  namespace: Funique.Manager
  syntax:
    content: public virtual void OnNetworkError(IPEndPoint endPoint, SocketError socketError)
    parameters:
    - id: endPoint
      type: System.Net.IPEndPoint
    - id: socketError
      type: System.Net.Sockets.SocketError
    content.vb: Public Overridable Sub OnNetworkError(endPoint As IPEndPoint, socketError As SocketError)
  overload: Funique.Manager.NetworkManagerClientUtility.OnNetworkError*
  implements:
  - LiteNetLib.INetEventListener.OnNetworkError(System.Net.IPEndPoint,System.Net.Sockets.SocketError)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Funique.Manager.NetworkManagerClientUtility.OnNetworkReceive(LiteNetLib.NetPeer,LiteNetLib.NetPacketReader,LiteNetLib.DeliveryMethod)
  commentId: M:Funique.Manager.NetworkManagerClientUtility.OnNetworkReceive(LiteNetLib.NetPeer,LiteNetLib.NetPacketReader,LiteNetLib.DeliveryMethod)
  id: OnNetworkReceive(LiteNetLib.NetPeer,LiteNetLib.NetPacketReader,LiteNetLib.DeliveryMethod)
  parent: Funique.Manager.NetworkManagerClientUtility
  langs:
  - csharp
  - vb
  name: OnNetworkReceive(NetPeer, NetPacketReader, DeliveryMethod)
  nameWithType: NetworkManagerClientUtility.OnNetworkReceive(NetPeer, NetPacketReader, DeliveryMethod)
  fullName: Funique.Manager.NetworkManagerClientUtility.OnNetworkReceive(LiteNetLib.NetPeer, LiteNetLib.NetPacketReader, LiteNetLib.DeliveryMethod)
  type: Method
  source:
    remote:
      path: NetworkManagerClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: OnNetworkReceive
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/NetworkManagerClientUtility.cs
    startLine: 93
  assemblies:
  - Funique.Network
  namespace: Funique.Manager
  syntax:
    content: public virtual void OnNetworkReceive(NetPeer peer, NetPacketReader reader, DeliveryMethod deliveryMethod)
    parameters:
    - id: peer
      type: LiteNetLib.NetPeer
    - id: reader
      type: LiteNetLib.NetPacketReader
    - id: deliveryMethod
      type: LiteNetLib.DeliveryMethod
    content.vb: Public Overridable Sub OnNetworkReceive(peer As NetPeer, reader As NetPacketReader, deliveryMethod As DeliveryMethod)
  overload: Funique.Manager.NetworkManagerClientUtility.OnNetworkReceive*
  implements:
  - LiteNetLib.INetEventListener.OnNetworkReceive(LiteNetLib.NetPeer,LiteNetLib.NetPacketReader,LiteNetLib.DeliveryMethod)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Funique.Manager.NetworkManagerClientUtility.OnNetworkReceiveUnconnected(System.Net.IPEndPoint,LiteNetLib.NetPacketReader,LiteNetLib.UnconnectedMessageType)
  commentId: M:Funique.Manager.NetworkManagerClientUtility.OnNetworkReceiveUnconnected(System.Net.IPEndPoint,LiteNetLib.NetPacketReader,LiteNetLib.UnconnectedMessageType)
  id: OnNetworkReceiveUnconnected(System.Net.IPEndPoint,LiteNetLib.NetPacketReader,LiteNetLib.UnconnectedMessageType)
  parent: Funique.Manager.NetworkManagerClientUtility
  langs:
  - csharp
  - vb
  name: OnNetworkReceiveUnconnected(IPEndPoint, NetPacketReader, UnconnectedMessageType)
  nameWithType: NetworkManagerClientUtility.OnNetworkReceiveUnconnected(IPEndPoint, NetPacketReader, UnconnectedMessageType)
  fullName: Funique.Manager.NetworkManagerClientUtility.OnNetworkReceiveUnconnected(System.Net.IPEndPoint, LiteNetLib.NetPacketReader, LiteNetLib.UnconnectedMessageType)
  type: Method
  source:
    remote:
      path: NetworkManagerClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: OnNetworkReceiveUnconnected
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/NetworkManagerClientUtility.cs
    startLine: 97
  assemblies:
  - Funique.Network
  namespace: Funique.Manager
  syntax:
    content: public virtual void OnNetworkReceiveUnconnected(IPEndPoint remoteEndPoint, NetPacketReader reader, UnconnectedMessageType messageType)
    parameters:
    - id: remoteEndPoint
      type: System.Net.IPEndPoint
    - id: reader
      type: LiteNetLib.NetPacketReader
    - id: messageType
      type: LiteNetLib.UnconnectedMessageType
    content.vb: Public Overridable Sub OnNetworkReceiveUnconnected(remoteEndPoint As IPEndPoint, reader As NetPacketReader, messageType As UnconnectedMessageType)
  overload: Funique.Manager.NetworkManagerClientUtility.OnNetworkReceiveUnconnected*
  implements:
  - LiteNetLib.INetEventListener.OnNetworkReceiveUnconnected(System.Net.IPEndPoint,LiteNetLib.NetPacketReader,LiteNetLib.UnconnectedMessageType)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Funique.Manager.NetworkManagerClientUtility.OnNetworkLatencyUpdate(LiteNetLib.NetPeer,System.Int32)
  commentId: M:Funique.Manager.NetworkManagerClientUtility.OnNetworkLatencyUpdate(LiteNetLib.NetPeer,System.Int32)
  id: OnNetworkLatencyUpdate(LiteNetLib.NetPeer,System.Int32)
  parent: Funique.Manager.NetworkManagerClientUtility
  langs:
  - csharp
  - vb
  name: OnNetworkLatencyUpdate(NetPeer, Int32)
  nameWithType: NetworkManagerClientUtility.OnNetworkLatencyUpdate(NetPeer, Int32)
  fullName: Funique.Manager.NetworkManagerClientUtility.OnNetworkLatencyUpdate(LiteNetLib.NetPeer, System.Int32)
  type: Method
  source:
    remote:
      path: NetworkManagerClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: OnNetworkLatencyUpdate
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/NetworkManagerClientUtility.cs
    startLine: 101
  assemblies:
  - Funique.Network
  namespace: Funique.Manager
  syntax:
    content: public virtual void OnNetworkLatencyUpdate(NetPeer peer, int latency)
    parameters:
    - id: peer
      type: LiteNetLib.NetPeer
    - id: latency
      type: System.Int32
    content.vb: Public Overridable Sub OnNetworkLatencyUpdate(peer As NetPeer, latency As Integer)
  overload: Funique.Manager.NetworkManagerClientUtility.OnNetworkLatencyUpdate*
  implements:
  - LiteNetLib.INetEventListener.OnNetworkLatencyUpdate(LiteNetLib.NetPeer,System.Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Funique.Manager.NetworkManagerClientUtility.OnConnectionRequest(LiteNetLib.ConnectionRequest)
  commentId: M:Funique.Manager.NetworkManagerClientUtility.OnConnectionRequest(LiteNetLib.ConnectionRequest)
  id: OnConnectionRequest(LiteNetLib.ConnectionRequest)
  parent: Funique.Manager.NetworkManagerClientUtility
  langs:
  - csharp
  - vb
  name: OnConnectionRequest(ConnectionRequest)
  nameWithType: NetworkManagerClientUtility.OnConnectionRequest(ConnectionRequest)
  fullName: Funique.Manager.NetworkManagerClientUtility.OnConnectionRequest(LiteNetLib.ConnectionRequest)
  type: Method
  source:
    remote:
      path: NetworkManagerClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: OnConnectionRequest
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/NetworkManagerClientUtility.cs
    startLine: 105
  assemblies:
  - Funique.Network
  namespace: Funique.Manager
  syntax:
    content: public virtual void OnConnectionRequest(ConnectionRequest request)
    parameters:
    - id: request
      type: LiteNetLib.ConnectionRequest
    content.vb: Public Overridable Sub OnConnectionRequest(request As ConnectionRequest)
  overload: Funique.Manager.NetworkManagerClientUtility.OnConnectionRequest*
  implements:
  - LiteNetLib.INetEventListener.OnConnectionRequest(LiteNetLib.ConnectionRequest)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Funique.Manager.NetworkManagerClientUtility.LiteNetInit
  commentId: M:Funique.Manager.NetworkManagerClientUtility.LiteNetInit
  id: LiteNetInit
  parent: Funique.Manager.NetworkManagerClientUtility
  langs:
  - csharp
  - vb
  name: LiteNetInit()
  nameWithType: NetworkManagerClientUtility.LiteNetInit()
  fullName: Funique.Manager.NetworkManagerClientUtility.LiteNetInit()
  type: Method
  source:
    remote:
      path: NetworkManagerClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: LiteNetInit
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/NetworkManagerClientUtility.cs
    startLine: 120
  assemblies:
  - Funique.Network
  namespace: Funique.Manager
  summary: "\nNetwork instance intialization <br />\n------------------------------------------------ <br />\n初始化客戶端\n"
  example: []
  syntax:
    content: protected void LiteNetInit()
    content.vb: Protected Sub LiteNetInit
  overload: Funique.Manager.NetworkManagerClientUtility.LiteNetInit*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Funique.Manager.NetworkManagerClientUtility.SendMessageToServer(System.String,LiteNetLib.DeliveryMethod)
  commentId: M:Funique.Manager.NetworkManagerClientUtility.SendMessageToServer(System.String,LiteNetLib.DeliveryMethod)
  id: SendMessageToServer(System.String,LiteNetLib.DeliveryMethod)
  parent: Funique.Manager.NetworkManagerClientUtility
  langs:
  - csharp
  - vb
  name: SendMessageToServer(String, DeliveryMethod)
  nameWithType: NetworkManagerClientUtility.SendMessageToServer(String, DeliveryMethod)
  fullName: Funique.Manager.NetworkManagerClientUtility.SendMessageToServer(System.String, LiteNetLib.DeliveryMethod)
  type: Method
  source:
    remote:
      path: NetworkManagerClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: SendMessageToServer
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/NetworkManagerClientUtility.cs
    startLine: 135
  assemblies:
  - Funique.Network
  namespace: Funique.Manager
  syntax:
    content: public virtual void SendMessageToServer(string context, DeliveryMethod method = DeliveryMethod.ReliableUnordered)
    parameters:
    - id: context
      type: System.String
    - id: method
      type: LiteNetLib.DeliveryMethod
    content.vb: Public Overridable Sub SendMessageToServer(context As String, method As DeliveryMethod = DeliveryMethod.ReliableUnordered)
  overload: Funique.Manager.NetworkManagerClientUtility.SendMessageToServer*
  implements:
  - Funique.Network.INetworkClientUtility.SendMessageToServer(System.String,LiteNetLib.DeliveryMethod)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Funique.Manager.NetworkManagerClientUtility.ReceivedUpdateInformation(System.String[])
  commentId: M:Funique.Manager.NetworkManagerClientUtility.ReceivedUpdateInformation(System.String[])
  id: ReceivedUpdateInformation(System.String[])
  parent: Funique.Manager.NetworkManagerClientUtility
  langs:
  - csharp
  - vb
  name: ReceivedUpdateInformation(String[])
  nameWithType: NetworkManagerClientUtility.ReceivedUpdateInformation(String[])
  fullName: Funique.Manager.NetworkManagerClientUtility.ReceivedUpdateInformation(System.String[])
  type: Method
  source:
    remote:
      path: NetworkManagerClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: ReceivedUpdateInformation
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/NetworkManagerClientUtility.cs
    startLine: 142
  assemblies:
  - Funique.Network
  namespace: Funique.Manager
  syntax:
    content: public virtual void ReceivedUpdateInformation(string[] context)
    parameters:
    - id: context
      type: System.String[]
    content.vb: Public Overridable Sub ReceivedUpdateInformation(context As String())
  overload: Funique.Manager.NetworkManagerClientUtility.ReceivedUpdateInformation*
  implements:
  - Funique.Network.INetworkClientUtility.ReceivedUpdateInformation(System.String[])
  nameWithType.vb: NetworkManagerClientUtility.ReceivedUpdateInformation(String())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Funique.Manager.NetworkManagerClientUtility.ReceivedUpdateInformation(System.String())
  name.vb: ReceivedUpdateInformation(String())
- uid: Funique.Manager.NetworkManagerClientUtility.AnalysisUpdateInformation(System.String[],System.Int32)
  commentId: M:Funique.Manager.NetworkManagerClientUtility.AnalysisUpdateInformation(System.String[],System.Int32)
  id: AnalysisUpdateInformation(System.String[],System.Int32)
  parent: Funique.Manager.NetworkManagerClientUtility
  langs:
  - csharp
  - vb
  name: AnalysisUpdateInformation(String[], Int32)
  nameWithType: NetworkManagerClientUtility.AnalysisUpdateInformation(String[], Int32)
  fullName: Funique.Manager.NetworkManagerClientUtility.AnalysisUpdateInformation(System.String[], System.Int32)
  type: Method
  source:
    remote:
      path: NetworkManagerClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: AnalysisUpdateInformation
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/NetworkManagerClientUtility.cs
    startLine: 147
  assemblies:
  - Funique.Network
  namespace: Funique.Manager
  syntax:
    content: public virtual void AnalysisUpdateInformation(string[] context, int i)
    parameters:
    - id: context
      type: System.String[]
    - id: i
      type: System.Int32
    content.vb: Public Overridable Sub AnalysisUpdateInformation(context As String(), i As Integer)
  overload: Funique.Manager.NetworkManagerClientUtility.AnalysisUpdateInformation*
  nameWithType.vb: NetworkManagerClientUtility.AnalysisUpdateInformation(String(), Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Funique.Manager.NetworkManagerClientUtility.AnalysisUpdateInformation(System.String(), System.Int32)
  name.vb: AnalysisUpdateInformation(String(), Int32)
- uid: Funique.Manager.NetworkManagerClientUtility.SendMessageToBoardcast(System.String,LiteNetLib.DeliveryMethod)
  commentId: M:Funique.Manager.NetworkManagerClientUtility.SendMessageToBoardcast(System.String,LiteNetLib.DeliveryMethod)
  id: SendMessageToBoardcast(System.String,LiteNetLib.DeliveryMethod)
  parent: Funique.Manager.NetworkManagerClientUtility
  langs:
  - csharp
  - vb
  name: SendMessageToBoardcast(String, DeliveryMethod)
  nameWithType: NetworkManagerClientUtility.SendMessageToBoardcast(String, DeliveryMethod)
  fullName: Funique.Manager.NetworkManagerClientUtility.SendMessageToBoardcast(System.String, LiteNetLib.DeliveryMethod)
  type: Method
  source:
    remote:
      path: NetworkManagerClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: SendMessageToBoardcast
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/NetworkManagerClientUtility.cs
    startLine: 148
  assemblies:
  - Funique.Network
  namespace: Funique.Manager
  syntax:
    content: public virtual void SendMessageToBoardcast(string context, DeliveryMethod method = DeliveryMethod.ReliableUnordered)
    parameters:
    - id: context
      type: System.String
    - id: method
      type: LiteNetLib.DeliveryMethod
    content.vb: Public Overridable Sub SendMessageToBoardcast(context As String, method As DeliveryMethod = DeliveryMethod.ReliableUnordered)
  overload: Funique.Manager.NetworkManagerClientUtility.SendMessageToBoardcast*
  implements:
  - Funique.Network.INetworkClientUtility.SendMessageToBoardcast(System.String,LiteNetLib.DeliveryMethod)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Funique.Manager.NetworkManagerClientUtility.CloseClientNetwork
  commentId: M:Funique.Manager.NetworkManagerClientUtility.CloseClientNetwork
  id: CloseClientNetwork
  parent: Funique.Manager.NetworkManagerClientUtility
  langs:
  - csharp
  - vb
  name: CloseClientNetwork()
  nameWithType: NetworkManagerClientUtility.CloseClientNetwork()
  fullName: Funique.Manager.NetworkManagerClientUtility.CloseClientNetwork()
  type: Method
  source:
    remote:
      path: NetworkManagerClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: CloseClientNetwork
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/NetworkManagerClientUtility.cs
    startLine: 152
  assemblies:
  - Funique.Network
  namespace: Funique.Manager
  syntax:
    content: public void CloseClientNetwork()
    content.vb: Public Sub CloseClientNetwork
  overload: Funique.Manager.NetworkManagerClientUtility.CloseClientNetwork*
  implements:
  - Funique.Network.INetworkClientUtility.CloseClientNetwork
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Manager.NetworkManagerClientUtility.OpenClientNetwork
  commentId: M:Funique.Manager.NetworkManagerClientUtility.OpenClientNetwork
  id: OpenClientNetwork
  parent: Funique.Manager.NetworkManagerClientUtility
  langs:
  - csharp
  - vb
  name: OpenClientNetwork()
  nameWithType: NetworkManagerClientUtility.OpenClientNetwork()
  fullName: Funique.Manager.NetworkManagerClientUtility.OpenClientNetwork()
  type: Method
  source:
    remote:
      path: NetworkManagerClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: OpenClientNetwork
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/NetworkManagerClientUtility.cs
    startLine: 156
  assemblies:
  - Funique.Network
  namespace: Funique.Manager
  syntax:
    content: public void OpenClientNetwork()
    content.vb: Public Sub OpenClientNetwork
  overload: Funique.Manager.NetworkManagerClientUtility.OpenClientNetwork*
  implements:
  - Funique.Network.INetworkClientUtility.OpenClientNetwork
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Funique.Manager
  commentId: N:Funique.Manager
  name: Funique.Manager
  nameWithType: Funique.Manager
  fullName: Funique.Manager
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Funique.Manager.ManagerBase
  commentId: T:Funique.Manager.ManagerBase
  parent: Funique.Manager
  name: ManagerBase
  nameWithType: ManagerBase
  fullName: Funique.Manager.ManagerBase
- uid: Funique.Manager.ManagerBase{Funique.Network.NetworkManagerData}
  commentId: T:Funique.Manager.ManagerBase{Funique.Network.NetworkManagerData}
  parent: Funique.Manager
  definition: Funique.Manager.ManagerBase`1
  name: ManagerBase<NetworkManagerData>
  nameWithType: ManagerBase<NetworkManagerData>
  fullName: Funique.Manager.ManagerBase<Funique.Network.NetworkManagerData>
  nameWithType.vb: ManagerBase(Of NetworkManagerData)
  fullName.vb: Funique.Manager.ManagerBase(Of Funique.Network.NetworkManagerData)
  name.vb: ManagerBase(Of NetworkManagerData)
  spec.csharp:
  - uid: Funique.Manager.ManagerBase`1
    name: ManagerBase
    nameWithType: ManagerBase
    fullName: Funique.Manager.ManagerBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Funique.Network.NetworkManagerData
    name: NetworkManagerData
    nameWithType: NetworkManagerData
    fullName: Funique.Network.NetworkManagerData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Funique.Manager.ManagerBase`1
    name: ManagerBase
    nameWithType: ManagerBase
    fullName: Funique.Manager.ManagerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Funique.Network.NetworkManagerData
    name: NetworkManagerData
    nameWithType: NetworkManagerData
    fullName: Funique.Network.NetworkManagerData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: LiteNetLib.INetEventListener
  commentId: T:LiteNetLib.INetEventListener
  parent: LiteNetLib
  isExternal: true
  name: INetEventListener
  nameWithType: INetEventListener
  fullName: LiteNetLib.INetEventListener
- uid: Funique.Network.INetworkClientUtility
  commentId: T:Funique.Network.INetworkClientUtility
  parent: Funique.Network
  name: INetworkClientUtility
  nameWithType: INetworkClientUtility
  fullName: Funique.Network.INetworkClientUtility
- uid: Funique.Network.INetworkEvent
  commentId: T:Funique.Network.INetworkEvent
  parent: Funique.Network
  name: INetworkEvent
  nameWithType: INetworkEvent
  fullName: Funique.Network.INetworkEvent
- uid: Funique.Manager.ManagerBase{Funique.Network.NetworkManagerData}.config
  commentId: P:Funique.Manager.ManagerBase{Funique.Network.NetworkManagerData}.config
  parent: Funique.Manager.ManagerBase{Funique.Network.NetworkManagerData}
  definition: Funique.Manager.ManagerBase`1.config
  name: config
  nameWithType: ManagerBase<NetworkManagerData>.config
  fullName: Funique.Manager.ManagerBase<Funique.Network.NetworkManagerData>.config
  nameWithType.vb: ManagerBase(Of NetworkManagerData).config
  fullName.vb: Funique.Manager.ManagerBase(Of Funique.Network.NetworkManagerData).config
- uid: Funique.Manager.ManagerBase{Funique.Network.NetworkManagerData}.RegisterConfig(Funique.Network.NetworkManagerData)
  commentId: M:Funique.Manager.ManagerBase{Funique.Network.NetworkManagerData}.RegisterConfig(Funique.Network.NetworkManagerData)
  parent: Funique.Manager.ManagerBase{Funique.Network.NetworkManagerData}
  definition: Funique.Manager.ManagerBase`1.RegisterConfig(`0)
  name: RegisterConfig(NetworkManagerData)
  nameWithType: ManagerBase<NetworkManagerData>.RegisterConfig(NetworkManagerData)
  fullName: Funique.Manager.ManagerBase<Funique.Network.NetworkManagerData>.RegisterConfig(Funique.Network.NetworkManagerData)
  nameWithType.vb: ManagerBase(Of NetworkManagerData).RegisterConfig(NetworkManagerData)
  fullName.vb: Funique.Manager.ManagerBase(Of Funique.Network.NetworkManagerData).RegisterConfig(Funique.Network.NetworkManagerData)
  spec.csharp:
  - uid: Funique.Manager.ManagerBase`1.RegisterConfig(`0)
    name: RegisterConfig
    nameWithType: ManagerBase<NetworkManagerData>.RegisterConfig
    fullName: Funique.Manager.ManagerBase<Funique.Network.NetworkManagerData>.RegisterConfig
  - name: (
    nameWithType: (
    fullName: (
  - uid: Funique.Network.NetworkManagerData
    name: NetworkManagerData
    nameWithType: NetworkManagerData
    fullName: Funique.Network.NetworkManagerData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase`1.RegisterConfig(`0)
    name: RegisterConfig
    nameWithType: ManagerBase(Of NetworkManagerData).RegisterConfig
    fullName: Funique.Manager.ManagerBase(Of Funique.Network.NetworkManagerData).RegisterConfig
  - name: (
    nameWithType: (
    fullName: (
  - uid: Funique.Network.NetworkManagerData
    name: NetworkManagerData
    nameWithType: NetworkManagerData
    fullName: Funique.Network.NetworkManagerData
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.ManagerBase{Funique.Network.NetworkManagerData}.Loaded(Funique.Network.NetworkManagerData)
  commentId: M:Funique.Manager.ManagerBase{Funique.Network.NetworkManagerData}.Loaded(Funique.Network.NetworkManagerData)
  parent: Funique.Manager.ManagerBase{Funique.Network.NetworkManagerData}
  definition: Funique.Manager.ManagerBase`1.Loaded(`0)
  name: Loaded(NetworkManagerData)
  nameWithType: ManagerBase<NetworkManagerData>.Loaded(NetworkManagerData)
  fullName: Funique.Manager.ManagerBase<Funique.Network.NetworkManagerData>.Loaded(Funique.Network.NetworkManagerData)
  nameWithType.vb: ManagerBase(Of NetworkManagerData).Loaded(NetworkManagerData)
  fullName.vb: Funique.Manager.ManagerBase(Of Funique.Network.NetworkManagerData).Loaded(Funique.Network.NetworkManagerData)
  spec.csharp:
  - uid: Funique.Manager.ManagerBase`1.Loaded(`0)
    name: Loaded
    nameWithType: ManagerBase<NetworkManagerData>.Loaded
    fullName: Funique.Manager.ManagerBase<Funique.Network.NetworkManagerData>.Loaded
  - name: (
    nameWithType: (
    fullName: (
  - uid: Funique.Network.NetworkManagerData
    name: NetworkManagerData
    nameWithType: NetworkManagerData
    fullName: Funique.Network.NetworkManagerData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase`1.Loaded(`0)
    name: Loaded
    nameWithType: ManagerBase(Of NetworkManagerData).Loaded
    fullName: Funique.Manager.ManagerBase(Of Funique.Network.NetworkManagerData).Loaded
  - name: (
    nameWithType: (
    fullName: (
  - uid: Funique.Network.NetworkManagerData
    name: NetworkManagerData
    nameWithType: NetworkManagerData
    fullName: Funique.Network.NetworkManagerData
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.ManagerBase.Shutdown
  commentId: M:Funique.Manager.ManagerBase.Shutdown
  parent: Funique.Manager.ManagerBase
  name: Shutdown()
  nameWithType: ManagerBase.Shutdown()
  fullName: Funique.Manager.ManagerBase.Shutdown()
  spec.csharp:
  - uid: Funique.Manager.ManagerBase.Shutdown
    name: Shutdown
    nameWithType: ManagerBase.Shutdown
    fullName: Funique.Manager.ManagerBase.Shutdown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase.Shutdown
    name: Shutdown
    nameWithType: ManagerBase.Shutdown
    fullName: Funique.Manager.ManagerBase.Shutdown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Funique.Manager.ManagerBase`1
  commentId: T:Funique.Manager.ManagerBase`1
  name: ManagerBase<T>
  nameWithType: ManagerBase<T>
  fullName: Funique.Manager.ManagerBase<T>
  nameWithType.vb: ManagerBase(Of T)
  fullName.vb: Funique.Manager.ManagerBase(Of T)
  name.vb: ManagerBase(Of T)
  spec.csharp:
  - uid: Funique.Manager.ManagerBase`1
    name: ManagerBase
    nameWithType: ManagerBase
    fullName: Funique.Manager.ManagerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Funique.Manager.ManagerBase`1
    name: ManagerBase
    nameWithType: ManagerBase
    fullName: Funique.Manager.ManagerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: LiteNetLib
  commentId: N:LiteNetLib
  isExternal: true
  name: LiteNetLib
  nameWithType: LiteNetLib
  fullName: LiteNetLib
- uid: Funique.Network
  commentId: N:Funique.Network
  name: Funique.Network
  nameWithType: Funique.Network
  fullName: Funique.Network
- uid: Funique.Manager.ManagerBase`1.config
  commentId: P:Funique.Manager.ManagerBase`1.config
  name: config
  nameWithType: ManagerBase<T>.config
  fullName: Funique.Manager.ManagerBase<T>.config
  nameWithType.vb: ManagerBase(Of T).config
  fullName.vb: Funique.Manager.ManagerBase(Of T).config
- uid: Funique.Manager.ManagerBase`1.RegisterConfig(`0)
  commentId: M:Funique.Manager.ManagerBase`1.RegisterConfig(`0)
  name: RegisterConfig(T)
  nameWithType: ManagerBase<T>.RegisterConfig(T)
  fullName: Funique.Manager.ManagerBase<T>.RegisterConfig(T)
  nameWithType.vb: ManagerBase(Of T).RegisterConfig(T)
  fullName.vb: Funique.Manager.ManagerBase(Of T).RegisterConfig(T)
  spec.csharp:
  - uid: Funique.Manager.ManagerBase`1.RegisterConfig(`0)
    name: RegisterConfig
    nameWithType: ManagerBase<T>.RegisterConfig
    fullName: Funique.Manager.ManagerBase<T>.RegisterConfig
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase`1.RegisterConfig(`0)
    name: RegisterConfig
    nameWithType: ManagerBase(Of T).RegisterConfig
    fullName: Funique.Manager.ManagerBase(Of T).RegisterConfig
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.ManagerBase`1.Loaded(`0)
  commentId: M:Funique.Manager.ManagerBase`1.Loaded(`0)
  name: Loaded(T)
  nameWithType: ManagerBase<T>.Loaded(T)
  fullName: Funique.Manager.ManagerBase<T>.Loaded(T)
  nameWithType.vb: ManagerBase(Of T).Loaded(T)
  fullName.vb: Funique.Manager.ManagerBase(Of T).Loaded(T)
  spec.csharp:
  - uid: Funique.Manager.ManagerBase`1.Loaded(`0)
    name: Loaded
    nameWithType: ManagerBase<T>.Loaded
    fullName: Funique.Manager.ManagerBase<T>.Loaded
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase`1.Loaded(`0)
    name: Loaded
    nameWithType: ManagerBase(Of T).Loaded
    fullName: Funique.Manager.ManagerBase(Of T).Loaded
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: LiteNetLib.Utils.NetDataWriter
  commentId: T:LiteNetLib.Utils.NetDataWriter
  parent: LiteNetLib.Utils
  isExternal: true
  name: NetDataWriter
  nameWithType: NetDataWriter
  fullName: LiteNetLib.Utils.NetDataWriter
- uid: LiteNetLib.Utils
  commentId: N:LiteNetLib.Utils
  isExternal: true
  name: LiteNetLib.Utils
  nameWithType: LiteNetLib.Utils
  fullName: LiteNetLib.Utils
- uid: Funique.MasterInfomation
  commentId: T:Funique.MasterInfomation
  parent: Funique
  name: MasterInfomation
  nameWithType: MasterInfomation
  fullName: Funique.MasterInfomation
- uid: Funique
  commentId: N:Funique
  name: Funique
  nameWithType: Funique
  fullName: Funique
- uid: Funique.Manager.NetworkManagerClientUtility.Client*
  commentId: Overload:Funique.Manager.NetworkManagerClientUtility.Client
  name: Client
  nameWithType: NetworkManagerClientUtility.Client
  fullName: Funique.Manager.NetworkManagerClientUtility.Client
- uid: LiteNetLib.NetManager
  commentId: T:LiteNetLib.NetManager
  parent: LiteNetLib
  isExternal: true
  name: NetManager
  nameWithType: NetManager
  fullName: LiteNetLib.NetManager
- uid: Funique.Network.INetworkEvent.OnConnected
  commentId: E:Funique.Network.INetworkEvent.OnConnected
  parent: Funique.Network.INetworkEvent
  name: OnConnected
  nameWithType: INetworkEvent.OnConnected
  fullName: Funique.Network.INetworkEvent.OnConnected
- uid: System.EventHandler{Funique.Network.PeerEventArgs}
  commentId: T:System.EventHandler{Funique.Network.PeerEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<PeerEventArgs>
  nameWithType: EventHandler<PeerEventArgs>
  fullName: System.EventHandler<Funique.Network.PeerEventArgs>
  nameWithType.vb: EventHandler(Of PeerEventArgs)
  fullName.vb: System.EventHandler(Of Funique.Network.PeerEventArgs)
  name.vb: EventHandler(Of PeerEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Funique.Network.PeerEventArgs
    name: PeerEventArgs
    nameWithType: PeerEventArgs
    fullName: Funique.Network.PeerEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Funique.Network.PeerEventArgs
    name: PeerEventArgs
    nameWithType: PeerEventArgs
    fullName: Funique.Network.PeerEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Network.INetworkEvent.OnDisconnected
  commentId: E:Funique.Network.INetworkEvent.OnDisconnected
  parent: Funique.Network.INetworkEvent
  name: OnDisconnected
  nameWithType: INetworkEvent.OnDisconnected
  fullName: Funique.Network.INetworkEvent.OnDisconnected
- uid: System.EventHandler{Funique.Network.DisconnectEventArgs}
  commentId: T:System.EventHandler{Funique.Network.DisconnectEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<DisconnectEventArgs>
  nameWithType: EventHandler<DisconnectEventArgs>
  fullName: System.EventHandler<Funique.Network.DisconnectEventArgs>
  nameWithType.vb: EventHandler(Of DisconnectEventArgs)
  fullName.vb: System.EventHandler(Of Funique.Network.DisconnectEventArgs)
  name.vb: EventHandler(Of DisconnectEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Funique.Network.DisconnectEventArgs
    name: DisconnectEventArgs
    nameWithType: DisconnectEventArgs
    fullName: Funique.Network.DisconnectEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Funique.Network.DisconnectEventArgs
    name: DisconnectEventArgs
    nameWithType: DisconnectEventArgs
    fullName: Funique.Network.DisconnectEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Network.INetworkEvent.OnLatency
  commentId: E:Funique.Network.INetworkEvent.OnLatency
  parent: Funique.Network.INetworkEvent
  name: OnLatency
  nameWithType: INetworkEvent.OnLatency
  fullName: Funique.Network.INetworkEvent.OnLatency
- uid: System.EventHandler{Funique.Network.LatencyEventArgs}
  commentId: T:System.EventHandler{Funique.Network.LatencyEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<LatencyEventArgs>
  nameWithType: EventHandler<LatencyEventArgs>
  fullName: System.EventHandler<Funique.Network.LatencyEventArgs>
  nameWithType.vb: EventHandler(Of LatencyEventArgs)
  fullName.vb: System.EventHandler(Of Funique.Network.LatencyEventArgs)
  name.vb: EventHandler(Of LatencyEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Funique.Network.LatencyEventArgs
    name: LatencyEventArgs
    nameWithType: LatencyEventArgs
    fullName: Funique.Network.LatencyEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Funique.Network.LatencyEventArgs
    name: LatencyEventArgs
    nameWithType: LatencyEventArgs
    fullName: Funique.Network.LatencyEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Network.INetworkEvent.OnError
  commentId: E:Funique.Network.INetworkEvent.OnError
  parent: Funique.Network.INetworkEvent
  name: OnError
  nameWithType: INetworkEvent.OnError
  fullName: Funique.Network.INetworkEvent.OnError
- uid: System.EventHandler{Funique.Network.ErrorEventArgs}
  commentId: T:System.EventHandler{Funique.Network.ErrorEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ErrorEventArgs>
  nameWithType: EventHandler<ErrorEventArgs>
  fullName: System.EventHandler<Funique.Network.ErrorEventArgs>
  nameWithType.vb: EventHandler(Of ErrorEventArgs)
  fullName.vb: System.EventHandler(Of Funique.Network.ErrorEventArgs)
  name.vb: EventHandler(Of ErrorEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Funique.Network.ErrorEventArgs
    name: ErrorEventArgs
    nameWithType: ErrorEventArgs
    fullName: Funique.Network.ErrorEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Funique.Network.ErrorEventArgs
    name: ErrorEventArgs
    nameWithType: ErrorEventArgs
    fullName: Funique.Network.ErrorEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Network.INetworkEvent.OnReceived
  commentId: E:Funique.Network.INetworkEvent.OnReceived
  parent: Funique.Network.INetworkEvent
  name: OnReceived
  nameWithType: INetworkEvent.OnReceived
  fullName: Funique.Network.INetworkEvent.OnReceived
- uid: System.EventHandler{Funique.Network.ReceivedEventArgs}
  commentId: T:System.EventHandler{Funique.Network.ReceivedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ReceivedEventArgs>
  nameWithType: EventHandler<ReceivedEventArgs>
  fullName: System.EventHandler<Funique.Network.ReceivedEventArgs>
  nameWithType.vb: EventHandler(Of ReceivedEventArgs)
  fullName.vb: System.EventHandler(Of Funique.Network.ReceivedEventArgs)
  name.vb: EventHandler(Of ReceivedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Funique.Network.ReceivedEventArgs
    name: ReceivedEventArgs
    nameWithType: ReceivedEventArgs
    fullName: Funique.Network.ReceivedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Funique.Network.ReceivedEventArgs
    name: ReceivedEventArgs
    nameWithType: ReceivedEventArgs
    fullName: Funique.Network.ReceivedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.ManagerBase.Initialization
  commentId: M:Funique.Manager.ManagerBase.Initialization
  parent: Funique.Manager.ManagerBase
  name: Initialization()
  nameWithType: ManagerBase.Initialization()
  fullName: Funique.Manager.ManagerBase.Initialization()
  spec.csharp:
  - uid: Funique.Manager.ManagerBase.Initialization
    name: Initialization
    nameWithType: ManagerBase.Initialization
    fullName: Funique.Manager.ManagerBase.Initialization
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase.Initialization
    name: Initialization
    nameWithType: ManagerBase.Initialization
    fullName: Funique.Manager.ManagerBase.Initialization
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.NetworkManagerClientUtility.Initialization*
  commentId: Overload:Funique.Manager.NetworkManagerClientUtility.Initialization
  name: Initialization
  nameWithType: NetworkManagerClientUtility.Initialization
  fullName: Funique.Manager.NetworkManagerClientUtility.Initialization
- uid: Funique.Manager.ManagerBase.FrameUpdate
  commentId: M:Funique.Manager.ManagerBase.FrameUpdate
  parent: Funique.Manager.ManagerBase
  name: FrameUpdate()
  nameWithType: ManagerBase.FrameUpdate()
  fullName: Funique.Manager.ManagerBase.FrameUpdate()
  spec.csharp:
  - uid: Funique.Manager.ManagerBase.FrameUpdate
    name: FrameUpdate
    nameWithType: ManagerBase.FrameUpdate
    fullName: Funique.Manager.ManagerBase.FrameUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase.FrameUpdate
    name: FrameUpdate
    nameWithType: ManagerBase.FrameUpdate
    fullName: Funique.Manager.ManagerBase.FrameUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.NetworkManagerClientUtility.FrameUpdate*
  commentId: Overload:Funique.Manager.NetworkManagerClientUtility.FrameUpdate
  name: FrameUpdate
  nameWithType: NetworkManagerClientUtility.FrameUpdate
  fullName: Funique.Manager.NetworkManagerClientUtility.FrameUpdate
- uid: Funique.Manager.ManagerBase.Dispose
  commentId: M:Funique.Manager.ManagerBase.Dispose
  parent: Funique.Manager.ManagerBase
  name: Dispose()
  nameWithType: ManagerBase.Dispose()
  fullName: Funique.Manager.ManagerBase.Dispose()
  spec.csharp:
  - uid: Funique.Manager.ManagerBase.Dispose
    name: Dispose
    nameWithType: ManagerBase.Dispose
    fullName: Funique.Manager.ManagerBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase.Dispose
    name: Dispose
    nameWithType: ManagerBase.Dispose
    fullName: Funique.Manager.ManagerBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.NetworkManagerClientUtility.Dispose*
  commentId: Overload:Funique.Manager.NetworkManagerClientUtility.Dispose
  name: Dispose
  nameWithType: NetworkManagerClientUtility.Dispose
  fullName: Funique.Manager.NetworkManagerClientUtility.Dispose
- uid: Funique.Manager.NetworkManagerClientUtility.OnPeerConnected*
  commentId: Overload:Funique.Manager.NetworkManagerClientUtility.OnPeerConnected
  name: OnPeerConnected
  nameWithType: NetworkManagerClientUtility.OnPeerConnected
  fullName: Funique.Manager.NetworkManagerClientUtility.OnPeerConnected
- uid: LiteNetLib.INetEventListener.OnPeerConnected(LiteNetLib.NetPeer)
  commentId: M:LiteNetLib.INetEventListener.OnPeerConnected(LiteNetLib.NetPeer)
  parent: LiteNetLib.INetEventListener
  isExternal: true
  name: OnPeerConnected(NetPeer)
  nameWithType: INetEventListener.OnPeerConnected(NetPeer)
  fullName: LiteNetLib.INetEventListener.OnPeerConnected(LiteNetLib.NetPeer)
  spec.csharp:
  - uid: LiteNetLib.INetEventListener.OnPeerConnected(LiteNetLib.NetPeer)
    name: OnPeerConnected
    nameWithType: INetEventListener.OnPeerConnected
    fullName: LiteNetLib.INetEventListener.OnPeerConnected
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: LiteNetLib.NetPeer
    name: NetPeer
    nameWithType: NetPeer
    fullName: LiteNetLib.NetPeer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: LiteNetLib.INetEventListener.OnPeerConnected(LiteNetLib.NetPeer)
    name: OnPeerConnected
    nameWithType: INetEventListener.OnPeerConnected
    fullName: LiteNetLib.INetEventListener.OnPeerConnected
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: LiteNetLib.NetPeer
    name: NetPeer
    nameWithType: NetPeer
    fullName: LiteNetLib.NetPeer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: LiteNetLib.NetPeer
  commentId: T:LiteNetLib.NetPeer
  parent: LiteNetLib
  isExternal: true
  name: NetPeer
  nameWithType: NetPeer
  fullName: LiteNetLib.NetPeer
- uid: Funique.Manager.NetworkManagerClientUtility.OnPeerDisconnected*
  commentId: Overload:Funique.Manager.NetworkManagerClientUtility.OnPeerDisconnected
  name: OnPeerDisconnected
  nameWithType: NetworkManagerClientUtility.OnPeerDisconnected
  fullName: Funique.Manager.NetworkManagerClientUtility.OnPeerDisconnected
- uid: LiteNetLib.INetEventListener.OnPeerDisconnected(LiteNetLib.NetPeer,LiteNetLib.DisconnectInfo)
  commentId: M:LiteNetLib.INetEventListener.OnPeerDisconnected(LiteNetLib.NetPeer,LiteNetLib.DisconnectInfo)
  parent: LiteNetLib.INetEventListener
  isExternal: true
  name: OnPeerDisconnected(NetPeer, DisconnectInfo)
  nameWithType: INetEventListener.OnPeerDisconnected(NetPeer, DisconnectInfo)
  fullName: LiteNetLib.INetEventListener.OnPeerDisconnected(LiteNetLib.NetPeer, LiteNetLib.DisconnectInfo)
  spec.csharp:
  - uid: LiteNetLib.INetEventListener.OnPeerDisconnected(LiteNetLib.NetPeer,LiteNetLib.DisconnectInfo)
    name: OnPeerDisconnected
    nameWithType: INetEventListener.OnPeerDisconnected
    fullName: LiteNetLib.INetEventListener.OnPeerDisconnected
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: LiteNetLib.NetPeer
    name: NetPeer
    nameWithType: NetPeer
    fullName: LiteNetLib.NetPeer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: LiteNetLib.DisconnectInfo
    name: DisconnectInfo
    nameWithType: DisconnectInfo
    fullName: LiteNetLib.DisconnectInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: LiteNetLib.INetEventListener.OnPeerDisconnected(LiteNetLib.NetPeer,LiteNetLib.DisconnectInfo)
    name: OnPeerDisconnected
    nameWithType: INetEventListener.OnPeerDisconnected
    fullName: LiteNetLib.INetEventListener.OnPeerDisconnected
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: LiteNetLib.NetPeer
    name: NetPeer
    nameWithType: NetPeer
    fullName: LiteNetLib.NetPeer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: LiteNetLib.DisconnectInfo
    name: DisconnectInfo
    nameWithType: DisconnectInfo
    fullName: LiteNetLib.DisconnectInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: LiteNetLib.DisconnectInfo
  commentId: T:LiteNetLib.DisconnectInfo
  parent: LiteNetLib
  isExternal: true
  name: DisconnectInfo
  nameWithType: DisconnectInfo
  fullName: LiteNetLib.DisconnectInfo
- uid: Funique.Manager.NetworkManagerClientUtility.OnNetworkError*
  commentId: Overload:Funique.Manager.NetworkManagerClientUtility.OnNetworkError
  name: OnNetworkError
  nameWithType: NetworkManagerClientUtility.OnNetworkError
  fullName: Funique.Manager.NetworkManagerClientUtility.OnNetworkError
- uid: LiteNetLib.INetEventListener.OnNetworkError(System.Net.IPEndPoint,System.Net.Sockets.SocketError)
  commentId: M:LiteNetLib.INetEventListener.OnNetworkError(System.Net.IPEndPoint,System.Net.Sockets.SocketError)
  parent: LiteNetLib.INetEventListener
  isExternal: true
  name: OnNetworkError(IPEndPoint, SocketError)
  nameWithType: INetEventListener.OnNetworkError(IPEndPoint, SocketError)
  fullName: LiteNetLib.INetEventListener.OnNetworkError(System.Net.IPEndPoint, System.Net.Sockets.SocketError)
  spec.csharp:
  - uid: LiteNetLib.INetEventListener.OnNetworkError(System.Net.IPEndPoint,System.Net.Sockets.SocketError)
    name: OnNetworkError
    nameWithType: INetEventListener.OnNetworkError
    fullName: LiteNetLib.INetEventListener.OnNetworkError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.IPEndPoint
    name: IPEndPoint
    nameWithType: IPEndPoint
    fullName: System.Net.IPEndPoint
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Sockets.SocketError
    name: SocketError
    nameWithType: SocketError
    fullName: System.Net.Sockets.SocketError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: LiteNetLib.INetEventListener.OnNetworkError(System.Net.IPEndPoint,System.Net.Sockets.SocketError)
    name: OnNetworkError
    nameWithType: INetEventListener.OnNetworkError
    fullName: LiteNetLib.INetEventListener.OnNetworkError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.IPEndPoint
    name: IPEndPoint
    nameWithType: IPEndPoint
    fullName: System.Net.IPEndPoint
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Sockets.SocketError
    name: SocketError
    nameWithType: SocketError
    fullName: System.Net.Sockets.SocketError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.IPEndPoint
  commentId: T:System.Net.IPEndPoint
  parent: System.Net
  isExternal: true
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: System.Net.IPEndPoint
- uid: System.Net.Sockets.SocketError
  commentId: T:System.Net.Sockets.SocketError
  parent: System.Net.Sockets
  isExternal: true
  name: SocketError
  nameWithType: SocketError
  fullName: System.Net.Sockets.SocketError
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: System.Net.Sockets
  commentId: N:System.Net.Sockets
  isExternal: true
  name: System.Net.Sockets
  nameWithType: System.Net.Sockets
  fullName: System.Net.Sockets
- uid: Funique.Manager.NetworkManagerClientUtility.OnNetworkReceive*
  commentId: Overload:Funique.Manager.NetworkManagerClientUtility.OnNetworkReceive
  name: OnNetworkReceive
  nameWithType: NetworkManagerClientUtility.OnNetworkReceive
  fullName: Funique.Manager.NetworkManagerClientUtility.OnNetworkReceive
- uid: LiteNetLib.INetEventListener.OnNetworkReceive(LiteNetLib.NetPeer,LiteNetLib.NetPacketReader,LiteNetLib.DeliveryMethod)
  commentId: M:LiteNetLib.INetEventListener.OnNetworkReceive(LiteNetLib.NetPeer,LiteNetLib.NetPacketReader,LiteNetLib.DeliveryMethod)
  parent: LiteNetLib.INetEventListener
  isExternal: true
  name: OnNetworkReceive(NetPeer, NetPacketReader, DeliveryMethod)
  nameWithType: INetEventListener.OnNetworkReceive(NetPeer, NetPacketReader, DeliveryMethod)
  fullName: LiteNetLib.INetEventListener.OnNetworkReceive(LiteNetLib.NetPeer, LiteNetLib.NetPacketReader, LiteNetLib.DeliveryMethod)
  spec.csharp:
  - uid: LiteNetLib.INetEventListener.OnNetworkReceive(LiteNetLib.NetPeer,LiteNetLib.NetPacketReader,LiteNetLib.DeliveryMethod)
    name: OnNetworkReceive
    nameWithType: INetEventListener.OnNetworkReceive
    fullName: LiteNetLib.INetEventListener.OnNetworkReceive
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: LiteNetLib.NetPeer
    name: NetPeer
    nameWithType: NetPeer
    fullName: LiteNetLib.NetPeer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: LiteNetLib.NetPacketReader
    name: NetPacketReader
    nameWithType: NetPacketReader
    fullName: LiteNetLib.NetPacketReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: LiteNetLib.DeliveryMethod
    name: DeliveryMethod
    nameWithType: DeliveryMethod
    fullName: LiteNetLib.DeliveryMethod
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: LiteNetLib.INetEventListener.OnNetworkReceive(LiteNetLib.NetPeer,LiteNetLib.NetPacketReader,LiteNetLib.DeliveryMethod)
    name: OnNetworkReceive
    nameWithType: INetEventListener.OnNetworkReceive
    fullName: LiteNetLib.INetEventListener.OnNetworkReceive
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: LiteNetLib.NetPeer
    name: NetPeer
    nameWithType: NetPeer
    fullName: LiteNetLib.NetPeer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: LiteNetLib.NetPacketReader
    name: NetPacketReader
    nameWithType: NetPacketReader
    fullName: LiteNetLib.NetPacketReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: LiteNetLib.DeliveryMethod
    name: DeliveryMethod
    nameWithType: DeliveryMethod
    fullName: LiteNetLib.DeliveryMethod
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: LiteNetLib.NetPacketReader
  commentId: T:LiteNetLib.NetPacketReader
  parent: LiteNetLib
  isExternal: true
  name: NetPacketReader
  nameWithType: NetPacketReader
  fullName: LiteNetLib.NetPacketReader
- uid: LiteNetLib.DeliveryMethod
  commentId: T:LiteNetLib.DeliveryMethod
  parent: LiteNetLib
  isExternal: true
  name: DeliveryMethod
  nameWithType: DeliveryMethod
  fullName: LiteNetLib.DeliveryMethod
- uid: Funique.Manager.NetworkManagerClientUtility.OnNetworkReceiveUnconnected*
  commentId: Overload:Funique.Manager.NetworkManagerClientUtility.OnNetworkReceiveUnconnected
  name: OnNetworkReceiveUnconnected
  nameWithType: NetworkManagerClientUtility.OnNetworkReceiveUnconnected
  fullName: Funique.Manager.NetworkManagerClientUtility.OnNetworkReceiveUnconnected
- uid: LiteNetLib.INetEventListener.OnNetworkReceiveUnconnected(System.Net.IPEndPoint,LiteNetLib.NetPacketReader,LiteNetLib.UnconnectedMessageType)
  commentId: M:LiteNetLib.INetEventListener.OnNetworkReceiveUnconnected(System.Net.IPEndPoint,LiteNetLib.NetPacketReader,LiteNetLib.UnconnectedMessageType)
  parent: LiteNetLib.INetEventListener
  isExternal: true
  name: OnNetworkReceiveUnconnected(IPEndPoint, NetPacketReader, UnconnectedMessageType)
  nameWithType: INetEventListener.OnNetworkReceiveUnconnected(IPEndPoint, NetPacketReader, UnconnectedMessageType)
  fullName: LiteNetLib.INetEventListener.OnNetworkReceiveUnconnected(System.Net.IPEndPoint, LiteNetLib.NetPacketReader, LiteNetLib.UnconnectedMessageType)
  spec.csharp:
  - uid: LiteNetLib.INetEventListener.OnNetworkReceiveUnconnected(System.Net.IPEndPoint,LiteNetLib.NetPacketReader,LiteNetLib.UnconnectedMessageType)
    name: OnNetworkReceiveUnconnected
    nameWithType: INetEventListener.OnNetworkReceiveUnconnected
    fullName: LiteNetLib.INetEventListener.OnNetworkReceiveUnconnected
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.IPEndPoint
    name: IPEndPoint
    nameWithType: IPEndPoint
    fullName: System.Net.IPEndPoint
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: LiteNetLib.NetPacketReader
    name: NetPacketReader
    nameWithType: NetPacketReader
    fullName: LiteNetLib.NetPacketReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: LiteNetLib.UnconnectedMessageType
    name: UnconnectedMessageType
    nameWithType: UnconnectedMessageType
    fullName: LiteNetLib.UnconnectedMessageType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: LiteNetLib.INetEventListener.OnNetworkReceiveUnconnected(System.Net.IPEndPoint,LiteNetLib.NetPacketReader,LiteNetLib.UnconnectedMessageType)
    name: OnNetworkReceiveUnconnected
    nameWithType: INetEventListener.OnNetworkReceiveUnconnected
    fullName: LiteNetLib.INetEventListener.OnNetworkReceiveUnconnected
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.IPEndPoint
    name: IPEndPoint
    nameWithType: IPEndPoint
    fullName: System.Net.IPEndPoint
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: LiteNetLib.NetPacketReader
    name: NetPacketReader
    nameWithType: NetPacketReader
    fullName: LiteNetLib.NetPacketReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: LiteNetLib.UnconnectedMessageType
    name: UnconnectedMessageType
    nameWithType: UnconnectedMessageType
    fullName: LiteNetLib.UnconnectedMessageType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: LiteNetLib.UnconnectedMessageType
  commentId: T:LiteNetLib.UnconnectedMessageType
  parent: LiteNetLib
  isExternal: true
  name: UnconnectedMessageType
  nameWithType: UnconnectedMessageType
  fullName: LiteNetLib.UnconnectedMessageType
- uid: Funique.Manager.NetworkManagerClientUtility.OnNetworkLatencyUpdate*
  commentId: Overload:Funique.Manager.NetworkManagerClientUtility.OnNetworkLatencyUpdate
  name: OnNetworkLatencyUpdate
  nameWithType: NetworkManagerClientUtility.OnNetworkLatencyUpdate
  fullName: Funique.Manager.NetworkManagerClientUtility.OnNetworkLatencyUpdate
- uid: LiteNetLib.INetEventListener.OnNetworkLatencyUpdate(LiteNetLib.NetPeer,System.Int32)
  commentId: M:LiteNetLib.INetEventListener.OnNetworkLatencyUpdate(LiteNetLib.NetPeer,System.Int32)
  parent: LiteNetLib.INetEventListener
  isExternal: true
  name: OnNetworkLatencyUpdate(NetPeer, Int32)
  nameWithType: INetEventListener.OnNetworkLatencyUpdate(NetPeer, Int32)
  fullName: LiteNetLib.INetEventListener.OnNetworkLatencyUpdate(LiteNetLib.NetPeer, System.Int32)
  spec.csharp:
  - uid: LiteNetLib.INetEventListener.OnNetworkLatencyUpdate(LiteNetLib.NetPeer,System.Int32)
    name: OnNetworkLatencyUpdate
    nameWithType: INetEventListener.OnNetworkLatencyUpdate
    fullName: LiteNetLib.INetEventListener.OnNetworkLatencyUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: LiteNetLib.NetPeer
    name: NetPeer
    nameWithType: NetPeer
    fullName: LiteNetLib.NetPeer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: LiteNetLib.INetEventListener.OnNetworkLatencyUpdate(LiteNetLib.NetPeer,System.Int32)
    name: OnNetworkLatencyUpdate
    nameWithType: INetEventListener.OnNetworkLatencyUpdate
    fullName: LiteNetLib.INetEventListener.OnNetworkLatencyUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: LiteNetLib.NetPeer
    name: NetPeer
    nameWithType: NetPeer
    fullName: LiteNetLib.NetPeer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Funique.Manager.NetworkManagerClientUtility.OnConnectionRequest*
  commentId: Overload:Funique.Manager.NetworkManagerClientUtility.OnConnectionRequest
  name: OnConnectionRequest
  nameWithType: NetworkManagerClientUtility.OnConnectionRequest
  fullName: Funique.Manager.NetworkManagerClientUtility.OnConnectionRequest
- uid: LiteNetLib.INetEventListener.OnConnectionRequest(LiteNetLib.ConnectionRequest)
  commentId: M:LiteNetLib.INetEventListener.OnConnectionRequest(LiteNetLib.ConnectionRequest)
  parent: LiteNetLib.INetEventListener
  isExternal: true
  name: OnConnectionRequest(ConnectionRequest)
  nameWithType: INetEventListener.OnConnectionRequest(ConnectionRequest)
  fullName: LiteNetLib.INetEventListener.OnConnectionRequest(LiteNetLib.ConnectionRequest)
  spec.csharp:
  - uid: LiteNetLib.INetEventListener.OnConnectionRequest(LiteNetLib.ConnectionRequest)
    name: OnConnectionRequest
    nameWithType: INetEventListener.OnConnectionRequest
    fullName: LiteNetLib.INetEventListener.OnConnectionRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: LiteNetLib.ConnectionRequest
    name: ConnectionRequest
    nameWithType: ConnectionRequest
    fullName: LiteNetLib.ConnectionRequest
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: LiteNetLib.INetEventListener.OnConnectionRequest(LiteNetLib.ConnectionRequest)
    name: OnConnectionRequest
    nameWithType: INetEventListener.OnConnectionRequest
    fullName: LiteNetLib.INetEventListener.OnConnectionRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: LiteNetLib.ConnectionRequest
    name: ConnectionRequest
    nameWithType: ConnectionRequest
    fullName: LiteNetLib.ConnectionRequest
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: LiteNetLib.ConnectionRequest
  commentId: T:LiteNetLib.ConnectionRequest
  parent: LiteNetLib
  isExternal: true
  name: ConnectionRequest
  nameWithType: ConnectionRequest
  fullName: LiteNetLib.ConnectionRequest
- uid: Funique.Manager.NetworkManagerClientUtility.LiteNetInit*
  commentId: Overload:Funique.Manager.NetworkManagerClientUtility.LiteNetInit
  name: LiteNetInit
  nameWithType: NetworkManagerClientUtility.LiteNetInit
  fullName: Funique.Manager.NetworkManagerClientUtility.LiteNetInit
- uid: Funique.Manager.NetworkManagerClientUtility.SendMessageToServer*
  commentId: Overload:Funique.Manager.NetworkManagerClientUtility.SendMessageToServer
  name: SendMessageToServer
  nameWithType: NetworkManagerClientUtility.SendMessageToServer
  fullName: Funique.Manager.NetworkManagerClientUtility.SendMessageToServer
- uid: Funique.Network.INetworkClientUtility.SendMessageToServer(System.String,LiteNetLib.DeliveryMethod)
  commentId: M:Funique.Network.INetworkClientUtility.SendMessageToServer(System.String,LiteNetLib.DeliveryMethod)
  parent: Funique.Network.INetworkClientUtility
  isExternal: true
  name: SendMessageToServer(String, DeliveryMethod)
  nameWithType: INetworkClientUtility.SendMessageToServer(String, DeliveryMethod)
  fullName: Funique.Network.INetworkClientUtility.SendMessageToServer(System.String, LiteNetLib.DeliveryMethod)
  spec.csharp:
  - uid: Funique.Network.INetworkClientUtility.SendMessageToServer(System.String,LiteNetLib.DeliveryMethod)
    name: SendMessageToServer
    nameWithType: INetworkClientUtility.SendMessageToServer
    fullName: Funique.Network.INetworkClientUtility.SendMessageToServer
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: LiteNetLib.DeliveryMethod
    name: DeliveryMethod
    nameWithType: DeliveryMethod
    fullName: LiteNetLib.DeliveryMethod
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Network.INetworkClientUtility.SendMessageToServer(System.String,LiteNetLib.DeliveryMethod)
    name: SendMessageToServer
    nameWithType: INetworkClientUtility.SendMessageToServer
    fullName: Funique.Network.INetworkClientUtility.SendMessageToServer
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: LiteNetLib.DeliveryMethod
    name: DeliveryMethod
    nameWithType: DeliveryMethod
    fullName: LiteNetLib.DeliveryMethod
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Funique.Manager.NetworkManagerClientUtility.ReceivedUpdateInformation*
  commentId: Overload:Funique.Manager.NetworkManagerClientUtility.ReceivedUpdateInformation
  name: ReceivedUpdateInformation
  nameWithType: NetworkManagerClientUtility.ReceivedUpdateInformation
  fullName: Funique.Manager.NetworkManagerClientUtility.ReceivedUpdateInformation
- uid: Funique.Network.INetworkClientUtility.ReceivedUpdateInformation(System.String[])
  commentId: M:Funique.Network.INetworkClientUtility.ReceivedUpdateInformation(System.String[])
  parent: Funique.Network.INetworkClientUtility
  isExternal: true
  name: ReceivedUpdateInformation(String[])
  nameWithType: INetworkClientUtility.ReceivedUpdateInformation(String[])
  fullName: Funique.Network.INetworkClientUtility.ReceivedUpdateInformation(System.String[])
  nameWithType.vb: INetworkClientUtility.ReceivedUpdateInformation(String())
  fullName.vb: Funique.Network.INetworkClientUtility.ReceivedUpdateInformation(System.String())
  name.vb: ReceivedUpdateInformation(String())
  spec.csharp:
  - uid: Funique.Network.INetworkClientUtility.ReceivedUpdateInformation(System.String[])
    name: ReceivedUpdateInformation
    nameWithType: INetworkClientUtility.ReceivedUpdateInformation
    fullName: Funique.Network.INetworkClientUtility.ReceivedUpdateInformation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Network.INetworkClientUtility.ReceivedUpdateInformation(System.String[])
    name: ReceivedUpdateInformation
    nameWithType: INetworkClientUtility.ReceivedUpdateInformation
    fullName: Funique.Network.INetworkClientUtility.ReceivedUpdateInformation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Funique.Manager.NetworkManagerClientUtility.AnalysisUpdateInformation*
  commentId: Overload:Funique.Manager.NetworkManagerClientUtility.AnalysisUpdateInformation
  name: AnalysisUpdateInformation
  nameWithType: NetworkManagerClientUtility.AnalysisUpdateInformation
  fullName: Funique.Manager.NetworkManagerClientUtility.AnalysisUpdateInformation
- uid: Funique.Manager.NetworkManagerClientUtility.SendMessageToBoardcast*
  commentId: Overload:Funique.Manager.NetworkManagerClientUtility.SendMessageToBoardcast
  name: SendMessageToBoardcast
  nameWithType: NetworkManagerClientUtility.SendMessageToBoardcast
  fullName: Funique.Manager.NetworkManagerClientUtility.SendMessageToBoardcast
- uid: Funique.Network.INetworkClientUtility.SendMessageToBoardcast(System.String,LiteNetLib.DeliveryMethod)
  commentId: M:Funique.Network.INetworkClientUtility.SendMessageToBoardcast(System.String,LiteNetLib.DeliveryMethod)
  parent: Funique.Network.INetworkClientUtility
  isExternal: true
  name: SendMessageToBoardcast(String, DeliveryMethod)
  nameWithType: INetworkClientUtility.SendMessageToBoardcast(String, DeliveryMethod)
  fullName: Funique.Network.INetworkClientUtility.SendMessageToBoardcast(System.String, LiteNetLib.DeliveryMethod)
  spec.csharp:
  - uid: Funique.Network.INetworkClientUtility.SendMessageToBoardcast(System.String,LiteNetLib.DeliveryMethod)
    name: SendMessageToBoardcast
    nameWithType: INetworkClientUtility.SendMessageToBoardcast
    fullName: Funique.Network.INetworkClientUtility.SendMessageToBoardcast
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: LiteNetLib.DeliveryMethod
    name: DeliveryMethod
    nameWithType: DeliveryMethod
    fullName: LiteNetLib.DeliveryMethod
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Network.INetworkClientUtility.SendMessageToBoardcast(System.String,LiteNetLib.DeliveryMethod)
    name: SendMessageToBoardcast
    nameWithType: INetworkClientUtility.SendMessageToBoardcast
    fullName: Funique.Network.INetworkClientUtility.SendMessageToBoardcast
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: LiteNetLib.DeliveryMethod
    name: DeliveryMethod
    nameWithType: DeliveryMethod
    fullName: LiteNetLib.DeliveryMethod
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.NetworkManagerClientUtility.CloseClientNetwork*
  commentId: Overload:Funique.Manager.NetworkManagerClientUtility.CloseClientNetwork
  name: CloseClientNetwork
  nameWithType: NetworkManagerClientUtility.CloseClientNetwork
  fullName: Funique.Manager.NetworkManagerClientUtility.CloseClientNetwork
- uid: Funique.Network.INetworkClientUtility.CloseClientNetwork
  commentId: M:Funique.Network.INetworkClientUtility.CloseClientNetwork
  parent: Funique.Network.INetworkClientUtility
  name: CloseClientNetwork()
  nameWithType: INetworkClientUtility.CloseClientNetwork()
  fullName: Funique.Network.INetworkClientUtility.CloseClientNetwork()
  spec.csharp:
  - uid: Funique.Network.INetworkClientUtility.CloseClientNetwork
    name: CloseClientNetwork
    nameWithType: INetworkClientUtility.CloseClientNetwork
    fullName: Funique.Network.INetworkClientUtility.CloseClientNetwork
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Network.INetworkClientUtility.CloseClientNetwork
    name: CloseClientNetwork
    nameWithType: INetworkClientUtility.CloseClientNetwork
    fullName: Funique.Network.INetworkClientUtility.CloseClientNetwork
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.NetworkManagerClientUtility.OpenClientNetwork*
  commentId: Overload:Funique.Manager.NetworkManagerClientUtility.OpenClientNetwork
  name: OpenClientNetwork
  nameWithType: NetworkManagerClientUtility.OpenClientNetwork
  fullName: Funique.Manager.NetworkManagerClientUtility.OpenClientNetwork
- uid: Funique.Network.INetworkClientUtility.OpenClientNetwork
  commentId: M:Funique.Network.INetworkClientUtility.OpenClientNetwork
  parent: Funique.Network.INetworkClientUtility
  name: OpenClientNetwork()
  nameWithType: INetworkClientUtility.OpenClientNetwork()
  fullName: Funique.Network.INetworkClientUtility.OpenClientNetwork()
  spec.csharp:
  - uid: Funique.Network.INetworkClientUtility.OpenClientNetwork
    name: OpenClientNetwork
    nameWithType: INetworkClientUtility.OpenClientNetwork
    fullName: Funique.Network.INetworkClientUtility.OpenClientNetwork
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Network.INetworkClientUtility.OpenClientNetwork
    name: OpenClientNetwork
    nameWithType: INetworkClientUtility.OpenClientNetwork
    fullName: Funique.Network.INetworkClientUtility.OpenClientNetwork
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
