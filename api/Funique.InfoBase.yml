### YamlMime:ManagedReference
items:
- uid: Funique.InfoBase
  commentId: T:Funique.InfoBase
  id: InfoBase
  parent: Funique
  children:
  - Funique.InfoBase.BtnName
  - Funique.InfoBase.BtnObj
  - Funique.InfoBase.FilterName
  - Funique.InfoBase.Meta
  - Funique.InfoBase.PlayableType
  - Funique.InfoBase.SourceName
  langs:
  - csharp
  - vb
  name: InfoBase
  nameWithType: InfoBase
  fullName: Funique.InfoBase
  type: Class
  source:
    remote:
      path: Struct/InfoBase.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: InfoBase
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Struct/InfoBase.cs
    startLine: 11
  assemblies:
  - Funique.Core
  namespace: Funique
  summary: "\nPlayable object data structure <br />\nWhen assign without any inheritance, This could be use as hyperlink <br />\n------------------------------------------------ <br />\n可被播放物件的資料結構 <br />\n不被繼承的情況下, 通常可以用於連結使用 \n"
  example: []
  syntax:
    content: public class InfoBase
    content.vb: Public Class InfoBase
  inheritance:
  - System.Object
  derivedClasses:
  - Funique.PhotoInfo
  - Funique.VideoInfo
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Funique.InfoBase.BtnObj
  commentId: P:Funique.InfoBase.BtnObj
  id: BtnObj
  parent: Funique.InfoBase
  langs:
  - csharp
  - vb
  name: BtnObj
  nameWithType: InfoBase.BtnObj
  fullName: Funique.InfoBase.BtnObj
  type: Property
  source:
    remote:
      path: Struct/InfoBase.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: BtnObj
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Struct/InfoBase.cs
    startLine: 18
  assemblies:
  - Funique.Core
  namespace: Funique
  summary: "\nBinding button gameobject instance in the scene <br />\n------------------------------------------------ <br />\n選單綁定按鈕\n"
  example: []
  syntax:
    content: public GameObject BtnObj { get; set; }
    parameters: []
    return:
      type: UnityEngine.GameObject
    content.vb: Public Property BtnObj As GameObject
  overload: Funique.InfoBase.BtnObj*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Funique.InfoBase.Meta
  commentId: F:Funique.InfoBase.Meta
  id: Meta
  parent: Funique.InfoBase
  langs:
  - csharp
  - vb
  name: Meta
  nameWithType: InfoBase.Meta
  fullName: Funique.InfoBase.Meta
  type: Field
  source:
    remote:
      path: Struct/InfoBase.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: Meta
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Struct/InfoBase.cs
    startLine: 24
  assemblies:
  - Funique.Core
  namespace: Funique
  summary: "\nExtra information, depend on need, it could use for condition <br />\n------------------------------------------------ <br />\n額外資訊, 根據需求, 可以用於判斷\n"
  example: []
  syntax:
    content: public string Meta
    return:
      type: System.String
    content.vb: Public Meta As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.InfoBase.SourceName
  commentId: F:Funique.InfoBase.SourceName
  id: SourceName
  parent: Funique.InfoBase
  langs:
  - csharp
  - vb
  name: SourceName
  nameWithType: InfoBase.SourceName
  fullName: Funique.InfoBase.SourceName
  type: Field
  source:
    remote:
      path: Struct/InfoBase.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: SourceName
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Struct/InfoBase.cs
    startLine: 30
  assemblies:
  - Funique.Core
  namespace: Funique
  summary: "\nThe full source file name <br />\n------------------------------------------------ <br />\n檔案全名\n"
  example: []
  syntax:
    content: public string SourceName
    return:
      type: System.String
    content.vb: Public SourceName As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.InfoBase.FilterName
  commentId: F:Funique.InfoBase.FilterName
  id: FilterName
  parent: Funique.InfoBase
  langs:
  - csharp
  - vb
  name: FilterName
  nameWithType: InfoBase.FilterName
  fullName: Funique.InfoBase.FilterName
  type: Field
  source:
    remote:
      path: Struct/InfoBase.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: FilterName
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Struct/InfoBase.cs
    startLine: 36
  assemblies:
  - Funique.Core
  namespace: Funique
  summary: "\nFiltered file name (Without timecode) <br />\n------------------------------------------------ <br />\n過濾名稱 (過濾 時間字串)\n"
  example: []
  syntax:
    content: public string FilterName
    return:
      type: System.String
    content.vb: Public FilterName As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.InfoBase.BtnName
  commentId: F:Funique.InfoBase.BtnName
  id: BtnName
  parent: Funique.InfoBase
  langs:
  - csharp
  - vb
  name: BtnName
  nameWithType: InfoBase.BtnName
  fullName: Funique.InfoBase.BtnName
  type: Field
  source:
    remote:
      path: Struct/InfoBase.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: BtnName
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Struct/InfoBase.cs
    startLine: 42
  assemblies:
  - Funique.Core
  namespace: Funique
  summary: "\nButton display name (Without extension and timecode) <br />\n------------------------------------------------ <br />\n按鈕文字 (過濾 時間字串 副檔名)\n"
  example: []
  syntax:
    content: public string BtnName
    return:
      type: System.String
    content.vb: Public BtnName As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.InfoBase.PlayableType
  commentId: F:Funique.InfoBase.PlayableType
  id: PlayableType
  parent: Funique.InfoBase
  langs:
  - csharp
  - vb
  name: PlayableType
  nameWithType: InfoBase.PlayableType
  fullName: Funique.InfoBase.PlayableType
  type: Field
  source:
    remote:
      path: Struct/InfoBase.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: PlayableType
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Struct/InfoBase.cs
    startLine: 48
  assemblies:
  - Funique.Core
  namespace: Funique
  summary: "\nThe type ID for specific playlist <br />\n------------------------------------------------ <br />\n物件 ID 對應到 指定清單\n"
  example: []
  syntax:
    content: public int PlayableType
    return:
      type: System.Int32
    content.vb: Public PlayableType As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Funique
  commentId: N:Funique
  name: Funique
  nameWithType: Funique
  fullName: Funique
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Funique.InfoBase.BtnObj*
  commentId: Overload:Funique.InfoBase.BtnObj
  name: BtnObj
  nameWithType: InfoBase.BtnObj
  fullName: Funique.InfoBase.BtnObj
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
