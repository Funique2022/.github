### YamlMime:ManagedReference
items:
- uid: Funique.Cinema.CinemaManagerClientData
  commentId: T:Funique.Cinema.CinemaManagerClientData
  id: CinemaManagerClientData
  parent: Funique.Cinema
  children:
  - Funique.Cinema.CinemaManagerClientData.applyToMesh
  - Funique.Cinema.CinemaManagerClientData.AudioSource
  - Funique.Cinema.CinemaManagerClientData.Default_MediaPlayer
  - Funique.Cinema.CinemaManagerClientData.Default_StereoMode
  - Funique.Cinema.CinemaManagerClientData.fliveSphere
  - Funique.Cinema.CinemaManagerClientData.HalfSphere
  - Funique.Cinema.CinemaManagerClientData.MediaControl
  - Funique.Cinema.CinemaManagerClientData.ObsSphere
  - Funique.Cinema.CinemaManagerClientData.OctahedronSphere
  - Funique.Cinema.CinemaManagerClientData.OpenMediaAutoPlay
  - Funique.Cinema.CinemaManagerClientData.Options
  - Funique.Cinema.CinemaManagerClientData.PlaneSphere
  - Funique.Cinema.CinemaManagerClientData.SixDofModel
  - Funique.Cinema.CinemaManagerClientData.SixDOFScale
  - Funique.Cinema.CinemaManagerClientData.SphereObj
  - Funique.Cinema.CinemaManagerClientData.SphereScale
  - Funique.Cinema.CinemaManagerClientData.SquarePlane
  - Funique.Cinema.CinemaManagerClientData.StereoConfigs
  - Funique.Cinema.CinemaManagerClientData.Subtitle_Fixed
  - Funique.Cinema.CinemaManagerClientData.Subtitle_Headon
  - Funique.Cinema.CinemaManagerClientData.VideoBtn
  langs:
  - csharp
  - vb
  name: CinemaManagerClientData
  nameWithType: CinemaManagerClientData
  fullName: Funique.Cinema.CinemaManagerClientData
  type: Struct
  source:
    remote:
      path: Struct/CinemaManagerClientData.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: CinemaManagerClientData
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Struct/CinemaManagerClientData.cs
    startLine: 11
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nClient use cinema manager data <br />\n------------------------------------------------ <br />\n劇場客戶端只用靜態資料\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public struct CinemaManagerClientData
    content.vb: >-
      <Serializable>

      Public Structure CinemaManagerClientData
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Funique.Cinema.CinemaManagerClientData.MediaControl
  commentId: F:Funique.Cinema.CinemaManagerClientData.MediaControl
  id: MediaControl
  parent: Funique.Cinema.CinemaManagerClientData
  langs:
  - csharp
  - vb
  name: MediaControl
  nameWithType: CinemaManagerClientData.MediaControl
  fullName: Funique.Cinema.CinemaManagerClientData.MediaControl
  type: Field
  source:
    remote:
      path: Struct/CinemaManagerClientData.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: MediaControl
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Struct/CinemaManagerClientData.cs
    startLine: 16
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  syntax:
    content: >-
      [Header("Register")]

      [Tooltip("The main controller of media player")]

      [SerializeField]

      public CinemaMediaPlayerBase MediaControl
    return:
      type: Funique.Cinema.CinemaMediaPlayerBase
    content.vb: >-
      <Header("Register")>

      <Tooltip("The main controller of media player")>

      <SerializeField>

      Public MediaControl As CinemaMediaPlayerBase
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Register
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: The main controller of media player
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Cinema.CinemaManagerClientData.AudioSource
  commentId: F:Funique.Cinema.CinemaManagerClientData.AudioSource
  id: AudioSource
  parent: Funique.Cinema.CinemaManagerClientData
  langs:
  - csharp
  - vb
  name: AudioSource
  nameWithType: CinemaManagerClientData.AudioSource
  fullName: Funique.Cinema.CinemaManagerClientData.AudioSource
  type: Field
  source:
    remote:
      path: Struct/CinemaManagerClientData.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: AudioSource
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Struct/CinemaManagerClientData.cs
    startLine: 18
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  syntax:
    content: >-
      [SerializeField]

      public AudioOutput AudioSource
    return:
      type: RenderHeads.Media.AVProVideo.AudioOutput
    content.vb: >-
      <SerializeField>

      Public AudioSource As AudioOutput
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Cinema.CinemaManagerClientData.VideoBtn
  commentId: F:Funique.Cinema.CinemaManagerClientData.VideoBtn
  id: VideoBtn
  parent: Funique.Cinema.CinemaManagerClientData
  langs:
  - csharp
  - vb
  name: VideoBtn
  nameWithType: CinemaManagerClientData.VideoBtn
  fullName: Funique.Cinema.CinemaManagerClientData.VideoBtn
  type: Field
  source:
    remote:
      path: Struct/CinemaManagerClientData.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: VideoBtn
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Struct/CinemaManagerClientData.cs
    startLine: 21
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  syntax:
    content: >-
      [Tooltip("Field Button")]

      [SerializeField]

      public GameObject VideoBtn
    return:
      type: UnityEngine.GameObject
    content.vb: >-
      <Tooltip("Field Button")>

      <SerializeField>

      Public VideoBtn As GameObject
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Field Button
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Cinema.CinemaManagerClientData.Default_MediaPlayer
  commentId: F:Funique.Cinema.CinemaManagerClientData.Default_MediaPlayer
  id: Default_MediaPlayer
  parent: Funique.Cinema.CinemaManagerClientData
  langs:
  - csharp
  - vb
  name: Default_MediaPlayer
  nameWithType: CinemaManagerClientData.Default_MediaPlayer
  fullName: Funique.Cinema.CinemaManagerClientData.Default_MediaPlayer
  type: Field
  source:
    remote:
      path: Struct/CinemaManagerClientData.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: Default_MediaPlayer
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Struct/CinemaManagerClientData.cs
    startLine: 24
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  syntax:
    content: >-
      [Tooltip("Different types of media player, for different scenario")]

      [SerializeField]

      public int Default_MediaPlayer
    return:
      type: System.Int32
    content.vb: >-
      <Tooltip("Different types of media player, for different scenario")>

      <SerializeField>

      Public Default_MediaPlayer As Integer
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Different types of media player, for different scenario
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Cinema.CinemaManagerClientData.Default_StereoMode
  commentId: F:Funique.Cinema.CinemaManagerClientData.Default_StereoMode
  id: Default_StereoMode
  parent: Funique.Cinema.CinemaManagerClientData
  langs:
  - csharp
  - vb
  name: Default_StereoMode
  nameWithType: CinemaManagerClientData.Default_StereoMode
  fullName: Funique.Cinema.CinemaManagerClientData.Default_StereoMode
  type: Field
  source:
    remote:
      path: Struct/CinemaManagerClientData.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: Default_StereoMode
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Struct/CinemaManagerClientData.cs
    startLine: 27
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  syntax:
    content: >-
      [Tooltip("When no stereo detect it, switch to this mode and apply to it")]

      [SerializeField]

      public StereoMode Default_StereoMode
    return:
      type: Funique.StereoMode
    content.vb: >-
      <Tooltip("When no stereo detect it, switch to this mode and apply to it")>

      <SerializeField>

      Public Default_StereoMode As StereoMode
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: When no stereo detect it, switch to this mode and apply to it
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Cinema.CinemaManagerClientData.OpenMediaAutoPlay
  commentId: F:Funique.Cinema.CinemaManagerClientData.OpenMediaAutoPlay
  id: OpenMediaAutoPlay
  parent: Funique.Cinema.CinemaManagerClientData
  langs:
  - csharp
  - vb
  name: OpenMediaAutoPlay
  nameWithType: CinemaManagerClientData.OpenMediaAutoPlay
  fullName: Funique.Cinema.CinemaManagerClientData.OpenMediaAutoPlay
  type: Field
  source:
    remote:
      path: Struct/CinemaManagerClientData.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: OpenMediaAutoPlay
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Struct/CinemaManagerClientData.cs
    startLine: 30
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  syntax:
    content: >-
      [Tooltip("When play media is called, it will automatically play, if set to false, it will pause at the begining of the clip")]

      [SerializeField]

      public bool OpenMediaAutoPlay
    return:
      type: System.Boolean
    content.vb: >-
      <Tooltip("When play media is called, it will automatically play, if set to false, it will pause at the begining of the clip")>

      <SerializeField>

      Public OpenMediaAutoPlay As Boolean
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: When play media is called, it will automatically play, if set to false, it will pause at the begining of the clip
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Cinema.CinemaManagerClientData.Options
  commentId: F:Funique.Cinema.CinemaManagerClientData.Options
  id: Options
  parent: Funique.Cinema.CinemaManagerClientData
  langs:
  - csharp
  - vb
  name: Options
  nameWithType: CinemaManagerClientData.Options
  fullName: Funique.Cinema.CinemaManagerClientData.Options
  type: Field
  source:
    remote:
      path: Struct/CinemaManagerClientData.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: Options
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Struct/CinemaManagerClientData.cs
    startLine: 33
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  syntax:
    content: >-
      [Tooltip("Add all options of media and register them in to ditionary map")]

      [SerializeField]

      public MediaPlayerOption[] Options
    return:
      type: Funique.Cinema.MediaPlayerOption[]
    content.vb: >-
      <Tooltip("Add all options of media and register them in to ditionary map")>

      <SerializeField>

      Public Options As MediaPlayerOption()
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Add all options of media and register them in to ditionary map
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Cinema.CinemaManagerClientData.StereoConfigs
  commentId: F:Funique.Cinema.CinemaManagerClientData.StereoConfigs
  id: StereoConfigs
  parent: Funique.Cinema.CinemaManagerClientData
  langs:
  - csharp
  - vb
  name: StereoConfigs
  nameWithType: CinemaManagerClientData.StereoConfigs
  fullName: Funique.Cinema.CinemaManagerClientData.StereoConfigs
  type: Field
  source:
    remote:
      path: Struct/CinemaManagerClientData.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: StereoConfigs
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Struct/CinemaManagerClientData.cs
    startLine: 36
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  syntax:
    content: >-
      [Space]

      [SerializeField]

      public MapStereoConfig[] StereoConfigs
    return:
      type: Funique.Cinema.MapStereoConfig[]
    content.vb: >-
      <Space>

      <SerializeField>

      Public StereoConfigs As MapStereoConfig()
  attributes:
  - type: UnityEngine.SpaceAttribute
    ctor: UnityEngine.SpaceAttribute.#ctor
    arguments: []
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Cinema.CinemaManagerClientData.Subtitle_Headon
  commentId: F:Funique.Cinema.CinemaManagerClientData.Subtitle_Headon
  id: Subtitle_Headon
  parent: Funique.Cinema.CinemaManagerClientData
  langs:
  - csharp
  - vb
  name: Subtitle_Headon
  nameWithType: CinemaManagerClientData.Subtitle_Headon
  fullName: Funique.Cinema.CinemaManagerClientData.Subtitle_Headon
  type: Field
  source:
    remote:
      path: Struct/CinemaManagerClientData.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: Subtitle_Headon
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Struct/CinemaManagerClientData.cs
    startLine: 39
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  syntax:
    content: >-
      [Space]

      [SerializeField]

      public SubtitlesUGUI Subtitle_Headon
    return:
      type: RenderHeads.Media.AVProVideo.SubtitlesUGUI
    content.vb: >-
      <Space>

      <SerializeField>

      Public Subtitle_Headon As SubtitlesUGUI
  attributes:
  - type: UnityEngine.SpaceAttribute
    ctor: UnityEngine.SpaceAttribute.#ctor
    arguments: []
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Cinema.CinemaManagerClientData.Subtitle_Fixed
  commentId: F:Funique.Cinema.CinemaManagerClientData.Subtitle_Fixed
  id: Subtitle_Fixed
  parent: Funique.Cinema.CinemaManagerClientData
  langs:
  - csharp
  - vb
  name: Subtitle_Fixed
  nameWithType: CinemaManagerClientData.Subtitle_Fixed
  fullName: Funique.Cinema.CinemaManagerClientData.Subtitle_Fixed
  type: Field
  source:
    remote:
      path: Struct/CinemaManagerClientData.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: Subtitle_Fixed
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Struct/CinemaManagerClientData.cs
    startLine: 40
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  syntax:
    content: >-
      [SerializeField]

      public SubtitlesUGUI[] Subtitle_Fixed
    return:
      type: RenderHeads.Media.AVProVideo.SubtitlesUGUI[]
    content.vb: >-
      <SerializeField>

      Public Subtitle_Fixed As SubtitlesUGUI()
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Cinema.CinemaManagerClientData.SphereObj
  commentId: F:Funique.Cinema.CinemaManagerClientData.SphereObj
  id: SphereObj
  parent: Funique.Cinema.CinemaManagerClientData
  langs:
  - csharp
  - vb
  name: SphereObj
  nameWithType: CinemaManagerClientData.SphereObj
  fullName: Funique.Cinema.CinemaManagerClientData.SphereObj
  type: Field
  source:
    remote:
      path: Struct/CinemaManagerClientData.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: SphereObj
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Struct/CinemaManagerClientData.cs
    startLine: 43
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  syntax:
    content: >-
      [Tooltip("Display sphere object")]

      [SerializeField]

      public GameObject SphereObj
    return:
      type: UnityEngine.GameObject
    content.vb: >-
      <Tooltip("Display sphere object")>

      <SerializeField>

      Public SphereObj As GameObject
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Display sphere object
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Cinema.CinemaManagerClientData.applyToMesh
  commentId: F:Funique.Cinema.CinemaManagerClientData.applyToMesh
  id: applyToMesh
  parent: Funique.Cinema.CinemaManagerClientData
  langs:
  - csharp
  - vb
  name: applyToMesh
  nameWithType: CinemaManagerClientData.applyToMesh
  fullName: Funique.Cinema.CinemaManagerClientData.applyToMesh
  type: Field
  source:
    remote:
      path: Struct/CinemaManagerClientData.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: applyToMesh
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Struct/CinemaManagerClientData.cs
    startLine: 46
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  syntax:
    content: >-
      [Tooltip("Display sphere apply mesh instance")]

      [SerializeField]

      public ApplyToMesh applyToMesh
    return:
      type: RenderHeads.Media.AVProVideo.ApplyToMesh
    content.vb: >-
      <Tooltip("Display sphere apply mesh instance")>

      <SerializeField>

      Public applyToMesh As ApplyToMesh
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Display sphere apply mesh instance
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Cinema.CinemaManagerClientData.OctahedronSphere
  commentId: F:Funique.Cinema.CinemaManagerClientData.OctahedronSphere
  id: OctahedronSphere
  parent: Funique.Cinema.CinemaManagerClientData
  langs:
  - csharp
  - vb
  name: OctahedronSphere
  nameWithType: CinemaManagerClientData.OctahedronSphere
  fullName: Funique.Cinema.CinemaManagerClientData.OctahedronSphere
  type: Field
  source:
    remote:
      path: Struct/CinemaManagerClientData.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: OctahedronSphere
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Struct/CinemaManagerClientData.cs
    startLine: 49
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  syntax:
    content: >-
      [Header("Resource Reference")]

      [SerializeField]

      public Mesh OctahedronSphere
    return:
      type: UnityEngine.Mesh
    content.vb: >-
      <Header("Resource Reference")>

      <SerializeField>

      Public OctahedronSphere As Mesh
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Resource Reference
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Cinema.CinemaManagerClientData.fliveSphere
  commentId: F:Funique.Cinema.CinemaManagerClientData.fliveSphere
  id: fliveSphere
  parent: Funique.Cinema.CinemaManagerClientData
  langs:
  - csharp
  - vb
  name: fliveSphere
  nameWithType: CinemaManagerClientData.fliveSphere
  fullName: Funique.Cinema.CinemaManagerClientData.fliveSphere
  type: Field
  source:
    remote:
      path: Struct/CinemaManagerClientData.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: fliveSphere
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Struct/CinemaManagerClientData.cs
    startLine: 50
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  syntax:
    content: >-
      [SerializeField]

      public Mesh fliveSphere
    return:
      type: UnityEngine.Mesh
    content.vb: >-
      <SerializeField>

      Public fliveSphere As Mesh
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Cinema.CinemaManagerClientData.SixDofModel
  commentId: F:Funique.Cinema.CinemaManagerClientData.SixDofModel
  id: SixDofModel
  parent: Funique.Cinema.CinemaManagerClientData
  langs:
  - csharp
  - vb
  name: SixDofModel
  nameWithType: CinemaManagerClientData.SixDofModel
  fullName: Funique.Cinema.CinemaManagerClientData.SixDofModel
  type: Field
  source:
    remote:
      path: Struct/CinemaManagerClientData.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: SixDofModel
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Struct/CinemaManagerClientData.cs
    startLine: 51
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  syntax:
    content: >-
      [SerializeField]

      public Mesh SixDofModel
    return:
      type: UnityEngine.Mesh
    content.vb: >-
      <SerializeField>

      Public SixDofModel As Mesh
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Cinema.CinemaManagerClientData.HalfSphere
  commentId: F:Funique.Cinema.CinemaManagerClientData.HalfSphere
  id: HalfSphere
  parent: Funique.Cinema.CinemaManagerClientData
  langs:
  - csharp
  - vb
  name: HalfSphere
  nameWithType: CinemaManagerClientData.HalfSphere
  fullName: Funique.Cinema.CinemaManagerClientData.HalfSphere
  type: Field
  source:
    remote:
      path: Struct/CinemaManagerClientData.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: HalfSphere
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Struct/CinemaManagerClientData.cs
    startLine: 52
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  syntax:
    content: >-
      [SerializeField]

      public Mesh HalfSphere
    return:
      type: UnityEngine.Mesh
    content.vb: >-
      <SerializeField>

      Public HalfSphere As Mesh
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Cinema.CinemaManagerClientData.ObsSphere
  commentId: F:Funique.Cinema.CinemaManagerClientData.ObsSphere
  id: ObsSphere
  parent: Funique.Cinema.CinemaManagerClientData
  langs:
  - csharp
  - vb
  name: ObsSphere
  nameWithType: CinemaManagerClientData.ObsSphere
  fullName: Funique.Cinema.CinemaManagerClientData.ObsSphere
  type: Field
  source:
    remote:
      path: Struct/CinemaManagerClientData.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: ObsSphere
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Struct/CinemaManagerClientData.cs
    startLine: 53
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  syntax:
    content: >-
      [SerializeField]

      public Mesh ObsSphere
    return:
      type: UnityEngine.Mesh
    content.vb: >-
      <SerializeField>

      Public ObsSphere As Mesh
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Cinema.CinemaManagerClientData.PlaneSphere
  commentId: F:Funique.Cinema.CinemaManagerClientData.PlaneSphere
  id: PlaneSphere
  parent: Funique.Cinema.CinemaManagerClientData
  langs:
  - csharp
  - vb
  name: PlaneSphere
  nameWithType: CinemaManagerClientData.PlaneSphere
  fullName: Funique.Cinema.CinemaManagerClientData.PlaneSphere
  type: Field
  source:
    remote:
      path: Struct/CinemaManagerClientData.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: PlaneSphere
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Struct/CinemaManagerClientData.cs
    startLine: 54
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  syntax:
    content: >-
      [SerializeField]

      public Mesh PlaneSphere
    return:
      type: UnityEngine.Mesh
    content.vb: >-
      <SerializeField>

      Public PlaneSphere As Mesh
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Cinema.CinemaManagerClientData.SquarePlane
  commentId: F:Funique.Cinema.CinemaManagerClientData.SquarePlane
  id: SquarePlane
  parent: Funique.Cinema.CinemaManagerClientData
  langs:
  - csharp
  - vb
  name: SquarePlane
  nameWithType: CinemaManagerClientData.SquarePlane
  fullName: Funique.Cinema.CinemaManagerClientData.SquarePlane
  type: Field
  source:
    remote:
      path: Struct/CinemaManagerClientData.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: SquarePlane
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Struct/CinemaManagerClientData.cs
    startLine: 55
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  syntax:
    content: >-
      [SerializeField]

      public Mesh SquarePlane
    return:
      type: UnityEngine.Mesh
    content.vb: >-
      <SerializeField>

      Public SquarePlane As Mesh
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Cinema.CinemaManagerClientData.SixDOFScale
  commentId: F:Funique.Cinema.CinemaManagerClientData.SixDOFScale
  id: SixDOFScale
  parent: Funique.Cinema.CinemaManagerClientData
  langs:
  - csharp
  - vb
  name: SixDOFScale
  nameWithType: CinemaManagerClientData.SixDOFScale
  fullName: Funique.Cinema.CinemaManagerClientData.SixDOFScale
  type: Field
  source:
    remote:
      path: Struct/CinemaManagerClientData.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: SixDOFScale
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Struct/CinemaManagerClientData.cs
    startLine: 58
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  syntax:
    content: >-
      [Header("Setting")]

      [SerializeField]

      public float SixDOFScale
    return:
      type: System.Single
    content.vb: >-
      <Header("Setting")>

      <SerializeField>

      Public SixDOFScale As Single
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Setting
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Cinema.CinemaManagerClientData.SphereScale
  commentId: F:Funique.Cinema.CinemaManagerClientData.SphereScale
  id: SphereScale
  parent: Funique.Cinema.CinemaManagerClientData
  langs:
  - csharp
  - vb
  name: SphereScale
  nameWithType: CinemaManagerClientData.SphereScale
  fullName: Funique.Cinema.CinemaManagerClientData.SphereScale
  type: Field
  source:
    remote:
      path: Struct/CinemaManagerClientData.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: SphereScale
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Struct/CinemaManagerClientData.cs
    startLine: 59
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  syntax:
    content: >-
      [SerializeField]

      public float SphereScale
    return:
      type: System.Single
    content.vb: >-
      <SerializeField>

      Public SphereScale As Single
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Funique.Cinema
  commentId: N:Funique.Cinema
  name: Funique.Cinema
  nameWithType: Funique.Cinema
  fullName: Funique.Cinema
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Funique.Cinema.CinemaMediaPlayerBase
  commentId: T:Funique.Cinema.CinemaMediaPlayerBase
  parent: Funique.Cinema
  name: CinemaMediaPlayerBase
  nameWithType: CinemaMediaPlayerBase
  fullName: Funique.Cinema.CinemaMediaPlayerBase
- uid: RenderHeads.Media.AVProVideo.AudioOutput
  commentId: T:RenderHeads.Media.AVProVideo.AudioOutput
  parent: RenderHeads.Media.AVProVideo
  name: AudioOutput
  nameWithType: AudioOutput
  fullName: RenderHeads.Media.AVProVideo.AudioOutput
- uid: RenderHeads.Media.AVProVideo
  commentId: N:RenderHeads.Media.AVProVideo
  name: RenderHeads.Media.AVProVideo
  nameWithType: RenderHeads.Media.AVProVideo
  fullName: RenderHeads.Media.AVProVideo
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Funique.StereoMode
  commentId: T:Funique.StereoMode
  parent: Funique
  name: StereoMode
  nameWithType: StereoMode
  fullName: Funique.StereoMode
- uid: Funique
  commentId: N:Funique
  name: Funique
  nameWithType: Funique
  fullName: Funique
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Funique.Cinema.MediaPlayerOption[]
  isExternal: true
  name: MediaPlayerOption[]
  nameWithType: MediaPlayerOption[]
  fullName: Funique.Cinema.MediaPlayerOption[]
  nameWithType.vb: MediaPlayerOption()
  fullName.vb: Funique.Cinema.MediaPlayerOption()
  name.vb: MediaPlayerOption()
  spec.csharp:
  - uid: Funique.Cinema.MediaPlayerOption
    name: MediaPlayerOption
    nameWithType: MediaPlayerOption
    fullName: Funique.Cinema.MediaPlayerOption
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Funique.Cinema.MediaPlayerOption
    name: MediaPlayerOption
    nameWithType: MediaPlayerOption
    fullName: Funique.Cinema.MediaPlayerOption
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Funique.Cinema.MapStereoConfig[]
  isExternal: true
  name: MapStereoConfig[]
  nameWithType: MapStereoConfig[]
  fullName: Funique.Cinema.MapStereoConfig[]
  nameWithType.vb: MapStereoConfig()
  fullName.vb: Funique.Cinema.MapStereoConfig()
  name.vb: MapStereoConfig()
  spec.csharp:
  - uid: Funique.Cinema.MapStereoConfig
    name: MapStereoConfig
    nameWithType: MapStereoConfig
    fullName: Funique.Cinema.MapStereoConfig
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Funique.Cinema.MapStereoConfig
    name: MapStereoConfig
    nameWithType: MapStereoConfig
    fullName: Funique.Cinema.MapStereoConfig
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: RenderHeads.Media.AVProVideo.SubtitlesUGUI
  commentId: T:RenderHeads.Media.AVProVideo.SubtitlesUGUI
  parent: RenderHeads.Media.AVProVideo
  name: SubtitlesUGUI
  nameWithType: SubtitlesUGUI
  fullName: RenderHeads.Media.AVProVideo.SubtitlesUGUI
- uid: RenderHeads.Media.AVProVideo.SubtitlesUGUI[]
  isExternal: true
  name: SubtitlesUGUI[]
  nameWithType: SubtitlesUGUI[]
  fullName: RenderHeads.Media.AVProVideo.SubtitlesUGUI[]
  nameWithType.vb: SubtitlesUGUI()
  fullName.vb: RenderHeads.Media.AVProVideo.SubtitlesUGUI()
  name.vb: SubtitlesUGUI()
  spec.csharp:
  - uid: RenderHeads.Media.AVProVideo.SubtitlesUGUI
    name: SubtitlesUGUI
    nameWithType: SubtitlesUGUI
    fullName: RenderHeads.Media.AVProVideo.SubtitlesUGUI
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: RenderHeads.Media.AVProVideo.SubtitlesUGUI
    name: SubtitlesUGUI
    nameWithType: SubtitlesUGUI
    fullName: RenderHeads.Media.AVProVideo.SubtitlesUGUI
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: RenderHeads.Media.AVProVideo.ApplyToMesh
  commentId: T:RenderHeads.Media.AVProVideo.ApplyToMesh
  parent: RenderHeads.Media.AVProVideo
  name: ApplyToMesh
  nameWithType: ApplyToMesh
  fullName: RenderHeads.Media.AVProVideo.ApplyToMesh
- uid: UnityEngine.Mesh
  commentId: T:UnityEngine.Mesh
  parent: UnityEngine
  isExternal: true
  name: Mesh
  nameWithType: Mesh
  fullName: UnityEngine.Mesh
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
