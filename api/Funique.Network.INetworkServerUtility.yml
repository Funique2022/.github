### YamlMime:ManagedReference
items:
- uid: Funique.Network.INetworkServerUtility
  commentId: T:Funique.Network.INetworkServerUtility
  id: INetworkServerUtility
  parent: Funique.Network
  children:
  - Funique.Network.INetworkServerUtility.CleanPlayer
  - Funique.Network.INetworkServerUtility.CreatePlayerInformation(System.String,System.Int32)
  - Funique.Network.INetworkServerUtility.GetUIBinding(System.String)
  - Funique.Network.INetworkServerUtility.IsNewAddress(System.String)
  - Funique.Network.INetworkServerUtility.IsNewPeer(System.String)
  - Funique.Network.INetworkServerUtility.IsNewWatchdog(System.String)
  - Funique.Network.INetworkServerUtility.IsPeerVaild(System.String)
  - Funique.Network.INetworkServerUtility.NetPeerDict
  - Funique.Network.INetworkServerUtility.PlayerInfomationDict
  - Funique.Network.INetworkServerUtility.ReceivedUpdateInformation(System.String,System.String[])
  - Funique.Network.INetworkServerUtility.ReceivedUpdateInformation(System.String,System.String[],System.Boolean)
  - Funique.Network.INetworkServerUtility.Server
  - Funique.Network.INetworkServerUtility.SleepCall(System.String)
  - Funique.Network.INetworkServerUtility.UIDict
  - Funique.Network.INetworkServerUtility.UpdateVolume(System.String)
  - Funique.Network.INetworkServerUtility.WakeupCall(System.String)
  langs:
  - csharp
  - vb
  name: INetworkServerUtility
  nameWithType: INetworkServerUtility
  fullName: Funique.Network.INetworkServerUtility
  type: Interface
  source:
    remote:
      path: Interface/INetworkServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: INetworkServerUtility
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/Interface/INetworkServerUtility.cs
    startLine: 11
  assemblies:
  - Funique.Network
  namespace: Funique.Network
  summary: "\nServer Network utility, Unit testable <br />\n------------------------------------------------ <br />\n伺服器網路功能. 可被單元測試\n"
  example: []
  syntax:
    content: 'public interface INetworkServerUtility : INetworkEvent, INetworkOSC'
    content.vb: >-
      Public Interface INetworkServerUtility

          Inherits INetworkEvent, INetworkOSC
  inheritedMembers:
  - Funique.Network.INetworkEvent.OnConnected
  - Funique.Network.INetworkEvent.OnDisconnected
  - Funique.Network.INetworkEvent.OnLatency
  - Funique.Network.INetworkEvent.OnError
  - Funique.Network.INetworkEvent.OnReceived
  - Funique.Network.INetworkOSC.OSCDict
  - Funique.Network.INetworkOSC.WatchDogInit
  - Funique.Network.INetworkOSC.CreateWatchDog(System.String,System.String,System.Int32)
  - Funique.Network.INetworkOSC.ModifyWatchDog(System.String,System.String,System.String)
  - Funique.Network.INetworkOSC.ModifyWatchDog(System.String,System.String,System.String,System.Int32)
  - Funique.Network.INetworkOSC.RemoveWatchDog(System.String)
  - Funique.Network.INetworkOSC.CleanWatchDog
  - Funique.Network.INetworkOSC.SendMsgToPlayerDogs(System.String[],System.String)
  - Funique.Network.INetworkOSC.SendMsgToPlayerDogs(System.Collections.Generic.List{System.String},System.String)
  - Funique.Network.INetworkOSC.SendWatchDog(System.String,System.String)
  - Funique.Network.INetworkOSC.SendToAllDogs(System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Funique.Network.INetworkServerUtility.Server
  commentId: P:Funique.Network.INetworkServerUtility.Server
  id: Server
  parent: Funique.Network.INetworkServerUtility
  langs:
  - csharp
  - vb
  name: Server
  nameWithType: INetworkServerUtility.Server
  fullName: Funique.Network.INetworkServerUtility.Server
  type: Property
  source:
    remote:
      path: Interface/INetworkServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: Server
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/Interface/INetworkServerUtility.cs
    startLine: 18
  assemblies:
  - Funique.Network
  namespace: Funique.Network
  summary: "\nServer instnace <br />\n------------------------------------------------ <br />\n網路伺服器實體\n"
  example: []
  syntax:
    content: NetManager Server { get; }
    parameters: []
    return:
      type: LiteNetLib.NetManager
    content.vb: ReadOnly Property Server As NetManager
  overload: Funique.Network.INetworkServerUtility.Server*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Funique.Network.INetworkServerUtility.NetPeerDict
  commentId: P:Funique.Network.INetworkServerUtility.NetPeerDict
  id: NetPeerDict
  parent: Funique.Network.INetworkServerUtility
  langs:
  - csharp
  - vb
  name: NetPeerDict
  nameWithType: INetworkServerUtility.NetPeerDict
  fullName: Funique.Network.INetworkServerUtility.NetPeerDict
  type: Property
  source:
    remote:
      path: Interface/INetworkServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: NetPeerDict
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/Interface/INetworkServerUtility.cs
    startLine: 24
  assemblies:
  - Funique.Network
  namespace: Funique.Network
  summary: "\nThe map for address to peer instance <br />\n------------------------------------------------ <br />\n目錄: 連接位址 -> 配對實體\n"
  example: []
  syntax:
    content: Dictionary<string, NetPeer> NetPeerDict { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,LiteNetLib.NetPeer}
    content.vb: ReadOnly Property NetPeerDict As Dictionary(Of String, NetPeer)
  overload: Funique.Network.INetworkServerUtility.NetPeerDict*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Funique.Network.INetworkServerUtility.PlayerInfomationDict
  commentId: P:Funique.Network.INetworkServerUtility.PlayerInfomationDict
  id: PlayerInfomationDict
  parent: Funique.Network.INetworkServerUtility
  langs:
  - csharp
  - vb
  name: PlayerInfomationDict
  nameWithType: INetworkServerUtility.PlayerInfomationDict
  fullName: Funique.Network.INetworkServerUtility.PlayerInfomationDict
  type: Property
  source:
    remote:
      path: Interface/INetworkServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: PlayerInfomationDict
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/Interface/INetworkServerUtility.cs
    startLine: 30
  assemblies:
  - Funique.Network
  namespace: Funique.Network
  summary: "\nThe map for address to client information <br />\n------------------------------------------------ <br />\n目錄: 連接位址 -> 用戶資訊\n"
  example: []
  syntax:
    content: Dictionary<string, PlayerInformation> PlayerInfomationDict { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation}
    content.vb: ReadOnly Property PlayerInfomationDict As Dictionary(Of String, PlayerInformation)
  overload: Funique.Network.INetworkServerUtility.PlayerInfomationDict*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Funique.Network.INetworkServerUtility.UIDict
  commentId: P:Funique.Network.INetworkServerUtility.UIDict
  id: UIDict
  parent: Funique.Network.INetworkServerUtility
  langs:
  - csharp
  - vb
  name: UIDict
  nameWithType: INetworkServerUtility.UIDict
  fullName: Funique.Network.INetworkServerUtility.UIDict
  type: Property
  source:
    remote:
      path: Interface/INetworkServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: UIDict
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/Interface/INetworkServerUtility.cs
    startLine: 36
  assemblies:
  - Funique.Network
  namespace: Funique.Network
  summary: "\nThe map for address to user interface transform instance <br />\n------------------------------------------------ <br />\n目錄: 連接位址 -> 介面實體物件\n"
  example: []
  syntax:
    content: Dictionary<string, GameObject> UIDict { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,UnityEngine.GameObject}
    content.vb: ReadOnly Property UIDict As Dictionary(Of String, GameObject)
  overload: Funique.Network.INetworkServerUtility.UIDict*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Funique.Network.INetworkServerUtility.CreatePlayerInformation(System.String,System.Int32)
  commentId: M:Funique.Network.INetworkServerUtility.CreatePlayerInformation(System.String,System.Int32)
  id: CreatePlayerInformation(System.String,System.Int32)
  parent: Funique.Network.INetworkServerUtility
  langs:
  - csharp
  - vb
  name: CreatePlayerInformation(String, Int32)
  nameWithType: INetworkServerUtility.CreatePlayerInformation(String, Int32)
  fullName: Funique.Network.INetworkServerUtility.CreatePlayerInformation(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: Interface/INetworkServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: CreatePlayerInformation
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/Interface/INetworkServerUtility.cs
    startLine: 44
  assemblies:
  - Funique.Network
  namespace: Funique.Network
  summary: "\nCreate new client data <br />\n------------------------------------------------ <br />\n建立新的連線資料\n"
  example: []
  syntax:
    content: PlayerInformation CreatePlayerInformation(string address, int port)
    parameters:
    - id: address
      type: System.String
    - id: port
      type: System.Int32
    return:
      type: Funique.PlayerInformation
    content.vb: Function CreatePlayerInformation(address As String, port As Integer) As PlayerInformation
  overload: Funique.Network.INetworkServerUtility.CreatePlayerInformation*
- uid: Funique.Network.INetworkServerUtility.WakeupCall(System.String)
  commentId: M:Funique.Network.INetworkServerUtility.WakeupCall(System.String)
  id: WakeupCall(System.String)
  parent: Funique.Network.INetworkServerUtility
  langs:
  - csharp
  - vb
  name: WakeupCall(String)
  nameWithType: INetworkServerUtility.WakeupCall(String)
  fullName: Funique.Network.INetworkServerUtility.WakeupCall(System.String)
  type: Method
  source:
    remote:
      path: Interface/INetworkServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: WakeupCall
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/Interface/INetworkServerUtility.cs
    startLine: 50
  assemblies:
  - Funique.Network
  namespace: Funique.Network
  summary: "\nThis will change the record and modify the state to online, you know... wake up <br />\n------------------------------------------------ <br />\n將記錄資訊中的上線狀態改成在線, 喚醒呼叫\n"
  example: []
  syntax:
    content: void WakeupCall(string address)
    parameters:
    - id: address
      type: System.String
    content.vb: Sub WakeupCall(address As String)
  overload: Funique.Network.INetworkServerUtility.WakeupCall*
- uid: Funique.Network.INetworkServerUtility.SleepCall(System.String)
  commentId: M:Funique.Network.INetworkServerUtility.SleepCall(System.String)
  id: SleepCall(System.String)
  parent: Funique.Network.INetworkServerUtility
  langs:
  - csharp
  - vb
  name: SleepCall(String)
  nameWithType: INetworkServerUtility.SleepCall(String)
  fullName: Funique.Network.INetworkServerUtility.SleepCall(System.String)
  type: Method
  source:
    remote:
      path: Interface/INetworkServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: SleepCall
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/Interface/INetworkServerUtility.cs
    startLine: 56
  assemblies:
  - Funique.Network
  namespace: Funique.Network
  summary: "\nThis will change the record and modify the state to offline, you know... sleep <br />\n------------------------------------------------ <br />\n將記錄資訊中的上線狀態改成離線, 喚醒呼叫\n"
  example: []
  syntax:
    content: void SleepCall(string address)
    parameters:
    - id: address
      type: System.String
    content.vb: Sub SleepCall(address As String)
  overload: Funique.Network.INetworkServerUtility.SleepCall*
- uid: Funique.Network.INetworkServerUtility.ReceivedUpdateInformation(System.String,System.String[])
  commentId: M:Funique.Network.INetworkServerUtility.ReceivedUpdateInformation(System.String,System.String[])
  id: ReceivedUpdateInformation(System.String,System.String[])
  parent: Funique.Network.INetworkServerUtility
  langs:
  - csharp
  - vb
  name: ReceivedUpdateInformation(String, String[])
  nameWithType: INetworkServerUtility.ReceivedUpdateInformation(String, String[])
  fullName: Funique.Network.INetworkServerUtility.ReceivedUpdateInformation(System.String, System.String[])
  type: Method
  source:
    remote:
      path: Interface/INetworkServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: ReceivedUpdateInformation
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/Interface/INetworkServerUtility.cs
    startLine: 63
  assemblies:
  - Funique.Network
  namespace: Funique.Network
  summary: "\nExecute the modify action of received information data <br />\n------------------------------------------------ <br />\n執行修改行為, 根據接收到的網路訊息\n"
  example: []
  syntax:
    content: void ReceivedUpdateInformation(string address, string[] context)
    parameters:
    - id: address
      type: System.String
    - id: context
      type: System.String[]
      description: Data context
    content.vb: Sub ReceivedUpdateInformation(address As String, context As String())
  overload: Funique.Network.INetworkServerUtility.ReceivedUpdateInformation*
  nameWithType.vb: INetworkServerUtility.ReceivedUpdateInformation(String, String())
  fullName.vb: Funique.Network.INetworkServerUtility.ReceivedUpdateInformation(System.String, System.String())
  name.vb: ReceivedUpdateInformation(String, String())
- uid: Funique.Network.INetworkServerUtility.ReceivedUpdateInformation(System.String,System.String[],System.Boolean)
  commentId: M:Funique.Network.INetworkServerUtility.ReceivedUpdateInformation(System.String,System.String[],System.Boolean)
  id: ReceivedUpdateInformation(System.String,System.String[],System.Boolean)
  parent: Funique.Network.INetworkServerUtility
  langs:
  - csharp
  - vb
  name: ReceivedUpdateInformation(String, String[], Boolean)
  nameWithType: INetworkServerUtility.ReceivedUpdateInformation(String, String[], Boolean)
  fullName: Funique.Network.INetworkServerUtility.ReceivedUpdateInformation(System.String, System.String[], System.Boolean)
  type: Method
  source:
    remote:
      path: Interface/INetworkServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: ReceivedUpdateInformation
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/Interface/INetworkServerUtility.cs
    startLine: 69
  assemblies:
  - Funique.Network
  namespace: Funique.Network
  summary: "\n<inheritdoc cref=\"M:Funique.Network.INetworkServerUtility.ReceivedUpdateInformation(System.String,System.String[])\"></inheritdoc>\n"
  example: []
  syntax:
    content: void ReceivedUpdateInformation(string address, string[] context, bool infoonly)
    parameters:
    - id: address
      type: System.String
    - id: context
      type: System.String[]
      description: Data context
    - id: infoonly
      type: System.Boolean
      description: Only modify information data
    content.vb: Sub ReceivedUpdateInformation(address As String, context As String(), infoonly As Boolean)
  overload: Funique.Network.INetworkServerUtility.ReceivedUpdateInformation*
  nameWithType.vb: INetworkServerUtility.ReceivedUpdateInformation(String, String(), Boolean)
  fullName.vb: Funique.Network.INetworkServerUtility.ReceivedUpdateInformation(System.String, System.String(), System.Boolean)
  name.vb: ReceivedUpdateInformation(String, String(), Boolean)
- uid: Funique.Network.INetworkServerUtility.CleanPlayer
  commentId: M:Funique.Network.INetworkServerUtility.CleanPlayer
  id: CleanPlayer
  parent: Funique.Network.INetworkServerUtility
  langs:
  - csharp
  - vb
  name: CleanPlayer()
  nameWithType: INetworkServerUtility.CleanPlayer()
  fullName: Funique.Network.INetworkServerUtility.CleanPlayer()
  type: Method
  source:
    remote:
      path: Interface/INetworkServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: CleanPlayer
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/Interface/INetworkServerUtility.cs
    startLine: 75
  assemblies:
  - Funique.Network
  namespace: Funique.Network
  summary: "\nKill all clients instance <br />\n------------------------------------------------ <br />\n刪除所有用戶資料\n"
  example: []
  syntax:
    content: void CleanPlayer()
    content.vb: Sub CleanPlayer
  overload: Funique.Network.INetworkServerUtility.CleanPlayer*
- uid: Funique.Network.INetworkServerUtility.IsNewWatchdog(System.String)
  commentId: M:Funique.Network.INetworkServerUtility.IsNewWatchdog(System.String)
  id: IsNewWatchdog(System.String)
  parent: Funique.Network.INetworkServerUtility
  langs:
  - csharp
  - vb
  name: IsNewWatchdog(String)
  nameWithType: INetworkServerUtility.IsNewWatchdog(String)
  fullName: Funique.Network.INetworkServerUtility.IsNewWatchdog(System.String)
  type: Method
  source:
    remote:
      path: Interface/INetworkServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: IsNewWatchdog
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/Interface/INetworkServerUtility.cs
    startLine: 81
  assemblies:
  - Funique.Network
  namespace: Funique.Network
  summary: "\nCheck if address new for OSC dict <br />\n------------------------------------------------ <br />\n查看連接是否是新的 (OSC 目錄查詢)\n"
  example: []
  syntax:
    content: bool IsNewWatchdog(string address)
    parameters:
    - id: address
      type: System.String
    return:
      type: System.Boolean
    content.vb: Function IsNewWatchdog(address As String) As Boolean
  overload: Funique.Network.INetworkServerUtility.IsNewWatchdog*
- uid: Funique.Network.INetworkServerUtility.IsNewAddress(System.String)
  commentId: M:Funique.Network.INetworkServerUtility.IsNewAddress(System.String)
  id: IsNewAddress(System.String)
  parent: Funique.Network.INetworkServerUtility
  langs:
  - csharp
  - vb
  name: IsNewAddress(String)
  nameWithType: INetworkServerUtility.IsNewAddress(String)
  fullName: Funique.Network.INetworkServerUtility.IsNewAddress(System.String)
  type: Method
  source:
    remote:
      path: Interface/INetworkServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: IsNewAddress
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/Interface/INetworkServerUtility.cs
    startLine: 87
  assemblies:
  - Funique.Network
  namespace: Funique.Network
  summary: "\nCheck if address new for player information dict <br />\n------------------------------------------------ <br />\n查看連接是否是新的 (用戶資訊 目錄查詢)\n"
  example: []
  syntax:
    content: bool IsNewAddress(string address)
    parameters:
    - id: address
      type: System.String
    return:
      type: System.Boolean
    content.vb: Function IsNewAddress(address As String) As Boolean
  overload: Funique.Network.INetworkServerUtility.IsNewAddress*
- uid: Funique.Network.INetworkServerUtility.IsNewPeer(System.String)
  commentId: M:Funique.Network.INetworkServerUtility.IsNewPeer(System.String)
  id: IsNewPeer(System.String)
  parent: Funique.Network.INetworkServerUtility
  langs:
  - csharp
  - vb
  name: IsNewPeer(String)
  nameWithType: INetworkServerUtility.IsNewPeer(String)
  fullName: Funique.Network.INetworkServerUtility.IsNewPeer(System.String)
  type: Method
  source:
    remote:
      path: Interface/INetworkServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: IsNewPeer
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/Interface/INetworkServerUtility.cs
    startLine: 93
  assemblies:
  - Funique.Network
  namespace: Funique.Network
  summary: "\nCheck if andress new for peer dict <br />\n------------------------------------------------ <br />\n查看連接是否是新的 (配對實體 目錄查詢)\n"
  example: []
  syntax:
    content: bool IsNewPeer(string address)
    parameters:
    - id: address
      type: System.String
    return:
      type: System.Boolean
    content.vb: Function IsNewPeer(address As String) As Boolean
  overload: Funique.Network.INetworkServerUtility.IsNewPeer*
- uid: Funique.Network.INetworkServerUtility.IsPeerVaild(System.String)
  commentId: M:Funique.Network.INetworkServerUtility.IsPeerVaild(System.String)
  id: IsPeerVaild(System.String)
  parent: Funique.Network.INetworkServerUtility
  langs:
  - csharp
  - vb
  name: IsPeerVaild(String)
  nameWithType: INetworkServerUtility.IsPeerVaild(String)
  fullName: Funique.Network.INetworkServerUtility.IsPeerVaild(System.String)
  type: Method
  source:
    remote:
      path: Interface/INetworkServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: IsPeerVaild
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/Interface/INetworkServerUtility.cs
    startLine: 99
  assemblies:
  - Funique.Network
  namespace: Funique.Network
  summary: "\nCheck if andress is vaild for peer dict <br />\n------------------------------------------------ <br />\n查看連接是否可用 (配對實體 存在性)\n"
  example: []
  syntax:
    content: bool IsPeerVaild(string address)
    parameters:
    - id: address
      type: System.String
    return:
      type: System.Boolean
    content.vb: Function IsPeerVaild(address As String) As Boolean
  overload: Funique.Network.INetworkServerUtility.IsPeerVaild*
- uid: Funique.Network.INetworkServerUtility.GetUIBinding(System.String)
  commentId: M:Funique.Network.INetworkServerUtility.GetUIBinding(System.String)
  id: GetUIBinding(System.String)
  parent: Funique.Network.INetworkServerUtility
  langs:
  - csharp
  - vb
  name: GetUIBinding(String)
  nameWithType: INetworkServerUtility.GetUIBinding(String)
  fullName: Funique.Network.INetworkServerUtility.GetUIBinding(System.String)
  type: Method
  source:
    remote:
      path: Interface/INetworkServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: GetUIBinding
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/Interface/INetworkServerUtility.cs
    startLine: 105
  assemblies:
  - Funique.Network
  namespace: Funique.Network
  summary: "\nGet the binding user interface transform instance <br />\n------------------------------------------------ <br />\n得到綁定介面實體\n"
  example: []
  syntax:
    content: GameObject GetUIBinding(string address)
    parameters:
    - id: address
      type: System.String
    return:
      type: UnityEngine.GameObject
    content.vb: Function GetUIBinding(address As String) As GameObject
  overload: Funique.Network.INetworkServerUtility.GetUIBinding*
- uid: Funique.Network.INetworkServerUtility.UpdateVolume(System.String)
  commentId: M:Funique.Network.INetworkServerUtility.UpdateVolume(System.String)
  id: UpdateVolume(System.String)
  parent: Funique.Network.INetworkServerUtility
  langs:
  - csharp
  - vb
  name: UpdateVolume(String)
  nameWithType: INetworkServerUtility.UpdateVolume(String)
  fullName: Funique.Network.INetworkServerUtility.UpdateVolume(System.String)
  type: Method
  source:
    remote:
      path: Interface/INetworkServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: UpdateVolume
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/Interface/INetworkServerUtility.cs
    startLine: 112
  assemblies:
  - Funique.Network
  namespace: Funique.Network
  summary: "\nUpdate base on current volume client setting record <br />\n------------------------------------------------ <br />\n根據設定紀錄 更新目前音量\n"
  example: []
  syntax:
    content: void UpdateVolume(string address)
    parameters:
    - id: address
      type: System.String
      description: ''
    content.vb: Sub UpdateVolume(address As String)
  overload: Funique.Network.INetworkServerUtility.UpdateVolume*
references:
- uid: Funique.Network
  commentId: N:Funique.Network
  name: Funique.Network
  nameWithType: Funique.Network
  fullName: Funique.Network
- uid: Funique.Network.INetworkEvent.OnConnected
  commentId: E:Funique.Network.INetworkEvent.OnConnected
  parent: Funique.Network.INetworkEvent
  name: OnConnected
  nameWithType: INetworkEvent.OnConnected
  fullName: Funique.Network.INetworkEvent.OnConnected
- uid: Funique.Network.INetworkEvent.OnDisconnected
  commentId: E:Funique.Network.INetworkEvent.OnDisconnected
  parent: Funique.Network.INetworkEvent
  name: OnDisconnected
  nameWithType: INetworkEvent.OnDisconnected
  fullName: Funique.Network.INetworkEvent.OnDisconnected
- uid: Funique.Network.INetworkEvent.OnLatency
  commentId: E:Funique.Network.INetworkEvent.OnLatency
  parent: Funique.Network.INetworkEvent
  name: OnLatency
  nameWithType: INetworkEvent.OnLatency
  fullName: Funique.Network.INetworkEvent.OnLatency
- uid: Funique.Network.INetworkEvent.OnError
  commentId: E:Funique.Network.INetworkEvent.OnError
  parent: Funique.Network.INetworkEvent
  name: OnError
  nameWithType: INetworkEvent.OnError
  fullName: Funique.Network.INetworkEvent.OnError
- uid: Funique.Network.INetworkEvent.OnReceived
  commentId: E:Funique.Network.INetworkEvent.OnReceived
  parent: Funique.Network.INetworkEvent
  name: OnReceived
  nameWithType: INetworkEvent.OnReceived
  fullName: Funique.Network.INetworkEvent.OnReceived
- uid: Funique.Network.INetworkOSC.OSCDict
  commentId: P:Funique.Network.INetworkOSC.OSCDict
  parent: Funique.Network.INetworkOSC
  name: OSCDict
  nameWithType: INetworkOSC.OSCDict
  fullName: Funique.Network.INetworkOSC.OSCDict
- uid: Funique.Network.INetworkOSC.WatchDogInit
  commentId: M:Funique.Network.INetworkOSC.WatchDogInit
  parent: Funique.Network.INetworkOSC
  name: WatchDogInit()
  nameWithType: INetworkOSC.WatchDogInit()
  fullName: Funique.Network.INetworkOSC.WatchDogInit()
  spec.csharp:
  - uid: Funique.Network.INetworkOSC.WatchDogInit
    name: WatchDogInit
    nameWithType: INetworkOSC.WatchDogInit
    fullName: Funique.Network.INetworkOSC.WatchDogInit
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Network.INetworkOSC.WatchDogInit
    name: WatchDogInit
    nameWithType: INetworkOSC.WatchDogInit
    fullName: Funique.Network.INetworkOSC.WatchDogInit
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Network.INetworkOSC.CreateWatchDog(System.String,System.String,System.Int32)
  commentId: M:Funique.Network.INetworkOSC.CreateWatchDog(System.String,System.String,System.Int32)
  parent: Funique.Network.INetworkOSC
  isExternal: true
  name: CreateWatchDog(String, String, Int32)
  nameWithType: INetworkOSC.CreateWatchDog(String, String, Int32)
  fullName: Funique.Network.INetworkOSC.CreateWatchDog(System.String, System.String, System.Int32)
  spec.csharp:
  - uid: Funique.Network.INetworkOSC.CreateWatchDog(System.String,System.String,System.Int32)
    name: CreateWatchDog
    nameWithType: INetworkOSC.CreateWatchDog
    fullName: Funique.Network.INetworkOSC.CreateWatchDog
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Network.INetworkOSC.CreateWatchDog(System.String,System.String,System.Int32)
    name: CreateWatchDog
    nameWithType: INetworkOSC.CreateWatchDog
    fullName: Funique.Network.INetworkOSC.CreateWatchDog
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Network.INetworkOSC.ModifyWatchDog(System.String,System.String,System.String)
  commentId: M:Funique.Network.INetworkOSC.ModifyWatchDog(System.String,System.String,System.String)
  parent: Funique.Network.INetworkOSC
  isExternal: true
  name: ModifyWatchDog(String, String, String)
  nameWithType: INetworkOSC.ModifyWatchDog(String, String, String)
  fullName: Funique.Network.INetworkOSC.ModifyWatchDog(System.String, System.String, System.String)
  spec.csharp:
  - uid: Funique.Network.INetworkOSC.ModifyWatchDog(System.String,System.String,System.String)
    name: ModifyWatchDog
    nameWithType: INetworkOSC.ModifyWatchDog
    fullName: Funique.Network.INetworkOSC.ModifyWatchDog
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Network.INetworkOSC.ModifyWatchDog(System.String,System.String,System.String)
    name: ModifyWatchDog
    nameWithType: INetworkOSC.ModifyWatchDog
    fullName: Funique.Network.INetworkOSC.ModifyWatchDog
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Network.INetworkOSC.ModifyWatchDog(System.String,System.String,System.String,System.Int32)
  commentId: M:Funique.Network.INetworkOSC.ModifyWatchDog(System.String,System.String,System.String,System.Int32)
  parent: Funique.Network.INetworkOSC
  isExternal: true
  name: ModifyWatchDog(String, String, String, Int32)
  nameWithType: INetworkOSC.ModifyWatchDog(String, String, String, Int32)
  fullName: Funique.Network.INetworkOSC.ModifyWatchDog(System.String, System.String, System.String, System.Int32)
  spec.csharp:
  - uid: Funique.Network.INetworkOSC.ModifyWatchDog(System.String,System.String,System.String,System.Int32)
    name: ModifyWatchDog
    nameWithType: INetworkOSC.ModifyWatchDog
    fullName: Funique.Network.INetworkOSC.ModifyWatchDog
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Network.INetworkOSC.ModifyWatchDog(System.String,System.String,System.String,System.Int32)
    name: ModifyWatchDog
    nameWithType: INetworkOSC.ModifyWatchDog
    fullName: Funique.Network.INetworkOSC.ModifyWatchDog
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Network.INetworkOSC.RemoveWatchDog(System.String)
  commentId: M:Funique.Network.INetworkOSC.RemoveWatchDog(System.String)
  parent: Funique.Network.INetworkOSC
  isExternal: true
  name: RemoveWatchDog(String)
  nameWithType: INetworkOSC.RemoveWatchDog(String)
  fullName: Funique.Network.INetworkOSC.RemoveWatchDog(System.String)
  spec.csharp:
  - uid: Funique.Network.INetworkOSC.RemoveWatchDog(System.String)
    name: RemoveWatchDog
    nameWithType: INetworkOSC.RemoveWatchDog
    fullName: Funique.Network.INetworkOSC.RemoveWatchDog
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Network.INetworkOSC.RemoveWatchDog(System.String)
    name: RemoveWatchDog
    nameWithType: INetworkOSC.RemoveWatchDog
    fullName: Funique.Network.INetworkOSC.RemoveWatchDog
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Network.INetworkOSC.CleanWatchDog
  commentId: M:Funique.Network.INetworkOSC.CleanWatchDog
  parent: Funique.Network.INetworkOSC
  name: CleanWatchDog()
  nameWithType: INetworkOSC.CleanWatchDog()
  fullName: Funique.Network.INetworkOSC.CleanWatchDog()
  spec.csharp:
  - uid: Funique.Network.INetworkOSC.CleanWatchDog
    name: CleanWatchDog
    nameWithType: INetworkOSC.CleanWatchDog
    fullName: Funique.Network.INetworkOSC.CleanWatchDog
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Network.INetworkOSC.CleanWatchDog
    name: CleanWatchDog
    nameWithType: INetworkOSC.CleanWatchDog
    fullName: Funique.Network.INetworkOSC.CleanWatchDog
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Network.INetworkOSC.SendMsgToPlayerDogs(System.String[],System.String)
  commentId: M:Funique.Network.INetworkOSC.SendMsgToPlayerDogs(System.String[],System.String)
  parent: Funique.Network.INetworkOSC
  isExternal: true
  name: SendMsgToPlayerDogs(String[], String)
  nameWithType: INetworkOSC.SendMsgToPlayerDogs(String[], String)
  fullName: Funique.Network.INetworkOSC.SendMsgToPlayerDogs(System.String[], System.String)
  nameWithType.vb: INetworkOSC.SendMsgToPlayerDogs(String(), String)
  fullName.vb: Funique.Network.INetworkOSC.SendMsgToPlayerDogs(System.String(), System.String)
  name.vb: SendMsgToPlayerDogs(String(), String)
  spec.csharp:
  - uid: Funique.Network.INetworkOSC.SendMsgToPlayerDogs(System.String[],System.String)
    name: SendMsgToPlayerDogs
    nameWithType: INetworkOSC.SendMsgToPlayerDogs
    fullName: Funique.Network.INetworkOSC.SendMsgToPlayerDogs
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Network.INetworkOSC.SendMsgToPlayerDogs(System.String[],System.String)
    name: SendMsgToPlayerDogs
    nameWithType: INetworkOSC.SendMsgToPlayerDogs
    fullName: Funique.Network.INetworkOSC.SendMsgToPlayerDogs
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Network.INetworkOSC.SendMsgToPlayerDogs(System.Collections.Generic.List{System.String},System.String)
  commentId: M:Funique.Network.INetworkOSC.SendMsgToPlayerDogs(System.Collections.Generic.List{System.String},System.String)
  parent: Funique.Network.INetworkOSC
  isExternal: true
  name: SendMsgToPlayerDogs(List<String>, String)
  nameWithType: INetworkOSC.SendMsgToPlayerDogs(List<String>, String)
  fullName: Funique.Network.INetworkOSC.SendMsgToPlayerDogs(System.Collections.Generic.List<System.String>, System.String)
  nameWithType.vb: INetworkOSC.SendMsgToPlayerDogs(List(Of String), String)
  fullName.vb: Funique.Network.INetworkOSC.SendMsgToPlayerDogs(System.Collections.Generic.List(Of System.String), System.String)
  name.vb: SendMsgToPlayerDogs(List(Of String), String)
  spec.csharp:
  - uid: Funique.Network.INetworkOSC.SendMsgToPlayerDogs(System.Collections.Generic.List{System.String},System.String)
    name: SendMsgToPlayerDogs
    nameWithType: INetworkOSC.SendMsgToPlayerDogs
    fullName: Funique.Network.INetworkOSC.SendMsgToPlayerDogs
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Network.INetworkOSC.SendMsgToPlayerDogs(System.Collections.Generic.List{System.String},System.String)
    name: SendMsgToPlayerDogs
    nameWithType: INetworkOSC.SendMsgToPlayerDogs
    fullName: Funique.Network.INetworkOSC.SendMsgToPlayerDogs
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Network.INetworkOSC.SendWatchDog(System.String,System.String)
  commentId: M:Funique.Network.INetworkOSC.SendWatchDog(System.String,System.String)
  parent: Funique.Network.INetworkOSC
  isExternal: true
  name: SendWatchDog(String, String)
  nameWithType: INetworkOSC.SendWatchDog(String, String)
  fullName: Funique.Network.INetworkOSC.SendWatchDog(System.String, System.String)
  spec.csharp:
  - uid: Funique.Network.INetworkOSC.SendWatchDog(System.String,System.String)
    name: SendWatchDog
    nameWithType: INetworkOSC.SendWatchDog
    fullName: Funique.Network.INetworkOSC.SendWatchDog
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Network.INetworkOSC.SendWatchDog(System.String,System.String)
    name: SendWatchDog
    nameWithType: INetworkOSC.SendWatchDog
    fullName: Funique.Network.INetworkOSC.SendWatchDog
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Network.INetworkOSC.SendToAllDogs(System.String)
  commentId: M:Funique.Network.INetworkOSC.SendToAllDogs(System.String)
  parent: Funique.Network.INetworkOSC
  isExternal: true
  name: SendToAllDogs(String)
  nameWithType: INetworkOSC.SendToAllDogs(String)
  fullName: Funique.Network.INetworkOSC.SendToAllDogs(System.String)
  spec.csharp:
  - uid: Funique.Network.INetworkOSC.SendToAllDogs(System.String)
    name: SendToAllDogs
    nameWithType: INetworkOSC.SendToAllDogs
    fullName: Funique.Network.INetworkOSC.SendToAllDogs
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Network.INetworkOSC.SendToAllDogs(System.String)
    name: SendToAllDogs
    nameWithType: INetworkOSC.SendToAllDogs
    fullName: Funique.Network.INetworkOSC.SendToAllDogs
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Network.INetworkEvent
  commentId: T:Funique.Network.INetworkEvent
  parent: Funique.Network
  name: INetworkEvent
  nameWithType: INetworkEvent
  fullName: Funique.Network.INetworkEvent
- uid: Funique.Network.INetworkOSC
  commentId: T:Funique.Network.INetworkOSC
  parent: Funique.Network
  name: INetworkOSC
  nameWithType: INetworkOSC
  fullName: Funique.Network.INetworkOSC
- uid: Funique.Network.INetworkServerUtility.Server*
  commentId: Overload:Funique.Network.INetworkServerUtility.Server
  name: Server
  nameWithType: INetworkServerUtility.Server
  fullName: Funique.Network.INetworkServerUtility.Server
- uid: LiteNetLib.NetManager
  commentId: T:LiteNetLib.NetManager
  parent: LiteNetLib
  isExternal: true
  name: NetManager
  nameWithType: NetManager
  fullName: LiteNetLib.NetManager
- uid: LiteNetLib
  commentId: N:LiteNetLib
  isExternal: true
  name: LiteNetLib
  nameWithType: LiteNetLib
  fullName: LiteNetLib
- uid: Funique.Network.INetworkServerUtility.NetPeerDict*
  commentId: Overload:Funique.Network.INetworkServerUtility.NetPeerDict
  name: NetPeerDict
  nameWithType: INetworkServerUtility.NetPeerDict
  fullName: Funique.Network.INetworkServerUtility.NetPeerDict
- uid: System.Collections.Generic.Dictionary{System.String,LiteNetLib.NetPeer}
  commentId: T:System.Collections.Generic.Dictionary{System.String,LiteNetLib.NetPeer}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, NetPeer>
  nameWithType: Dictionary<String, NetPeer>
  fullName: System.Collections.Generic.Dictionary<System.String, LiteNetLib.NetPeer>
  nameWithType.vb: Dictionary(Of String, NetPeer)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, LiteNetLib.NetPeer)
  name.vb: Dictionary(Of String, NetPeer)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: LiteNetLib.NetPeer
    name: NetPeer
    nameWithType: NetPeer
    fullName: LiteNetLib.NetPeer
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: LiteNetLib.NetPeer
    name: NetPeer
    nameWithType: NetPeer
    fullName: LiteNetLib.NetPeer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Funique.Network.INetworkServerUtility.PlayerInfomationDict*
  commentId: Overload:Funique.Network.INetworkServerUtility.PlayerInfomationDict
  name: PlayerInfomationDict
  nameWithType: INetworkServerUtility.PlayerInfomationDict
  fullName: Funique.Network.INetworkServerUtility.PlayerInfomationDict
- uid: System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation}
  commentId: T:System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, PlayerInformation>
  nameWithType: Dictionary<String, PlayerInformation>
  fullName: System.Collections.Generic.Dictionary<System.String, Funique.PlayerInformation>
  nameWithType.vb: Dictionary(Of String, PlayerInformation)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Funique.PlayerInformation)
  name.vb: Dictionary(Of String, PlayerInformation)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Funique.PlayerInformation
    name: PlayerInformation
    nameWithType: PlayerInformation
    fullName: Funique.PlayerInformation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Funique.PlayerInformation
    name: PlayerInformation
    nameWithType: PlayerInformation
    fullName: Funique.PlayerInformation
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Network.INetworkServerUtility.UIDict*
  commentId: Overload:Funique.Network.INetworkServerUtility.UIDict
  name: UIDict
  nameWithType: INetworkServerUtility.UIDict
  fullName: Funique.Network.INetworkServerUtility.UIDict
- uid: System.Collections.Generic.Dictionary{System.String,UnityEngine.GameObject}
  commentId: T:System.Collections.Generic.Dictionary{System.String,UnityEngine.GameObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, GameObject>
  nameWithType: Dictionary<String, GameObject>
  fullName: System.Collections.Generic.Dictionary<System.String, UnityEngine.GameObject>
  nameWithType.vb: Dictionary(Of String, GameObject)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, UnityEngine.GameObject)
  name.vb: Dictionary(Of String, GameObject)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Network.INetworkServerUtility.CreatePlayerInformation*
  commentId: Overload:Funique.Network.INetworkServerUtility.CreatePlayerInformation
  name: CreatePlayerInformation
  nameWithType: INetworkServerUtility.CreatePlayerInformation
  fullName: Funique.Network.INetworkServerUtility.CreatePlayerInformation
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Funique.PlayerInformation
  commentId: T:Funique.PlayerInformation
  parent: Funique
  name: PlayerInformation
  nameWithType: PlayerInformation
  fullName: Funique.PlayerInformation
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Funique
  commentId: N:Funique
  name: Funique
  nameWithType: Funique
  fullName: Funique
- uid: Funique.Network.INetworkServerUtility.WakeupCall*
  commentId: Overload:Funique.Network.INetworkServerUtility.WakeupCall
  name: WakeupCall
  nameWithType: INetworkServerUtility.WakeupCall
  fullName: Funique.Network.INetworkServerUtility.WakeupCall
- uid: Funique.Network.INetworkServerUtility.SleepCall*
  commentId: Overload:Funique.Network.INetworkServerUtility.SleepCall
  name: SleepCall
  nameWithType: INetworkServerUtility.SleepCall
  fullName: Funique.Network.INetworkServerUtility.SleepCall
- uid: Funique.Network.INetworkServerUtility.ReceivedUpdateInformation*
  commentId: Overload:Funique.Network.INetworkServerUtility.ReceivedUpdateInformation
  name: ReceivedUpdateInformation
  nameWithType: INetworkServerUtility.ReceivedUpdateInformation
  fullName: Funique.Network.INetworkServerUtility.ReceivedUpdateInformation
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Funique.Network.INetworkServerUtility.CleanPlayer*
  commentId: Overload:Funique.Network.INetworkServerUtility.CleanPlayer
  name: CleanPlayer
  nameWithType: INetworkServerUtility.CleanPlayer
  fullName: Funique.Network.INetworkServerUtility.CleanPlayer
- uid: Funique.Network.INetworkServerUtility.IsNewWatchdog*
  commentId: Overload:Funique.Network.INetworkServerUtility.IsNewWatchdog
  name: IsNewWatchdog
  nameWithType: INetworkServerUtility.IsNewWatchdog
  fullName: Funique.Network.INetworkServerUtility.IsNewWatchdog
- uid: Funique.Network.INetworkServerUtility.IsNewAddress*
  commentId: Overload:Funique.Network.INetworkServerUtility.IsNewAddress
  name: IsNewAddress
  nameWithType: INetworkServerUtility.IsNewAddress
  fullName: Funique.Network.INetworkServerUtility.IsNewAddress
- uid: Funique.Network.INetworkServerUtility.IsNewPeer*
  commentId: Overload:Funique.Network.INetworkServerUtility.IsNewPeer
  name: IsNewPeer
  nameWithType: INetworkServerUtility.IsNewPeer
  fullName: Funique.Network.INetworkServerUtility.IsNewPeer
- uid: Funique.Network.INetworkServerUtility.IsPeerVaild*
  commentId: Overload:Funique.Network.INetworkServerUtility.IsPeerVaild
  name: IsPeerVaild
  nameWithType: INetworkServerUtility.IsPeerVaild
  fullName: Funique.Network.INetworkServerUtility.IsPeerVaild
- uid: Funique.Network.INetworkServerUtility.GetUIBinding*
  commentId: Overload:Funique.Network.INetworkServerUtility.GetUIBinding
  name: GetUIBinding
  nameWithType: INetworkServerUtility.GetUIBinding
  fullName: Funique.Network.INetworkServerUtility.GetUIBinding
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Funique.Network.INetworkServerUtility.UpdateVolume*
  commentId: Overload:Funique.Network.INetworkServerUtility.UpdateVolume
  name: UpdateVolume
  nameWithType: INetworkServerUtility.UpdateVolume
  fullName: Funique.Network.INetworkServerUtility.UpdateVolume
