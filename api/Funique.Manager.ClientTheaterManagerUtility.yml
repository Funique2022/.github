### YamlMime:ManagedReference
items:
- uid: Funique.Manager.ClientTheaterManagerUtility
  commentId: T:Funique.Manager.ClientTheaterManagerUtility
  id: ClientTheaterManagerUtility
  parent: Funique.Manager
  children:
  - Funique.Manager.ClientTheaterManagerUtility.Loaded(Funique.Client.ClientTheaterManagerData)
  - Funique.Manager.ClientTheaterManagerUtility.SetWaitRoom
  langs:
  - csharp
  - vb
  name: ClientTheaterManagerUtility
  nameWithType: ClientTheaterManagerUtility
  fullName: Funique.Manager.ClientTheaterManagerUtility
  type: Class
  source:
    remote:
      path: Assets/FuniquePlugin/Client/ClientTheaterManagerUtility.cs
      branch: main
      repo: https://github.com/Funique2022/project_unity_development.git
    id: ClientTheaterManagerUtility
    path: ../../../project_unity_development/Assets/FuniquePlugin/Client/ClientTheaterManagerUtility.cs
    startLine: 10
  assemblies:
  - Funique.Client
  namespace: Funique.Manager
  syntax:
    content: >-
      [Obsolete]

      public class ClientTheaterManagerUtility : ManagerBase<ClientTheaterManagerData>, IDisposable
    content.vb: >-
      <Obsolete>

      Public Class ClientTheaterManagerUtility

          Inherits ManagerBase(Of ClientTheaterManagerData)

          Implements IDisposable
  inheritance:
  - System.Object
  - Funique.Manager.ManagerBase
  - Funique.Manager.ManagerBase{Funique.Client.ClientTheaterManagerData}
  implements:
  - System.IDisposable
  inheritedMembers:
  - Funique.Manager.ManagerBase{Funique.Client.ClientTheaterManagerData}.config
  - Funique.Manager.ManagerBase{Funique.Client.ClientTheaterManagerData}.RegisterConfig(Funique.Client.ClientTheaterManagerData)
  - Funique.Manager.ManagerBase.Initialization
  - Funique.Manager.ManagerBase.FrameUpdate
  - Funique.Manager.ManagerBase.Shutdown
  - Funique.Manager.ManagerBase.Dispose
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Funique.Manager.ClientTheaterManagerUtility.Loaded(Funique.Client.ClientTheaterManagerData)
  commentId: M:Funique.Manager.ClientTheaterManagerUtility.Loaded(Funique.Client.ClientTheaterManagerData)
  id: Loaded(Funique.Client.ClientTheaterManagerData)
  parent: Funique.Manager.ClientTheaterManagerUtility
  langs:
  - csharp
  - vb
  name: Loaded(ClientTheaterManagerData)
  nameWithType: ClientTheaterManagerUtility.Loaded(ClientTheaterManagerData)
  fullName: Funique.Manager.ClientTheaterManagerUtility.Loaded(Funique.Client.ClientTheaterManagerData)
  type: Method
  source:
    remote:
      path: Assets/FuniquePlugin/Client/ClientTheaterManagerUtility.cs
      branch: main
      repo: https://github.com/Funique2022/project_unity_development.git
    id: Loaded
    path: ../../../project_unity_development/Assets/FuniquePlugin/Client/ClientTheaterManagerUtility.cs
    startLine: 13
  assemblies:
  - Funique.Client
  namespace: Funique.Manager
  syntax:
    content: public override void Loaded(ClientTheaterManagerData Data)
    parameters:
    - id: Data
      type: Funique.Client.ClientTheaterManagerData
    content.vb: Public Overrides Sub Loaded(Data As ClientTheaterManagerData)
  overridden: Funique.Manager.ManagerBase{Funique.Client.ClientTheaterManagerData}.Loaded(Funique.Client.ClientTheaterManagerData)
  overload: Funique.Manager.ClientTheaterManagerUtility.Loaded*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Funique.Manager.ClientTheaterManagerUtility.SetWaitRoom
  commentId: M:Funique.Manager.ClientTheaterManagerUtility.SetWaitRoom
  id: SetWaitRoom
  parent: Funique.Manager.ClientTheaterManagerUtility
  langs:
  - csharp
  - vb
  name: SetWaitRoom()
  nameWithType: ClientTheaterManagerUtility.SetWaitRoom()
  fullName: Funique.Manager.ClientTheaterManagerUtility.SetWaitRoom()
  type: Method
  source:
    remote:
      path: Assets/FuniquePlugin/Client/ClientTheaterManagerUtility.cs
      branch: main
      repo: https://github.com/Funique2022/project_unity_development.git
    id: SetWaitRoom
    path: ../../../project_unity_development/Assets/FuniquePlugin/Client/ClientTheaterManagerUtility.cs
    startLine: 19
  assemblies:
  - Funique.Client
  namespace: Funique.Manager
  syntax:
    content: public virtual IEnumerator SetWaitRoom()
    return:
      type: System.Collections.IEnumerator
    content.vb: Public Overridable Function SetWaitRoom As IEnumerator
  overload: Funique.Manager.ClientTheaterManagerUtility.SetWaitRoom*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Funique.Manager
  commentId: N:Funique.Manager
  name: Funique.Manager
  nameWithType: Funique.Manager
  fullName: Funique.Manager
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Funique.Manager.ManagerBase
  commentId: T:Funique.Manager.ManagerBase
  parent: Funique.Manager
  name: ManagerBase
  nameWithType: ManagerBase
  fullName: Funique.Manager.ManagerBase
- uid: Funique.Manager.ManagerBase{Funique.Client.ClientTheaterManagerData}
  commentId: T:Funique.Manager.ManagerBase{Funique.Client.ClientTheaterManagerData}
  parent: Funique.Manager
  definition: Funique.Manager.ManagerBase`1
  name: ManagerBase<ClientTheaterManagerData>
  nameWithType: ManagerBase<ClientTheaterManagerData>
  fullName: Funique.Manager.ManagerBase<Funique.Client.ClientTheaterManagerData>
  nameWithType.vb: ManagerBase(Of ClientTheaterManagerData)
  fullName.vb: Funique.Manager.ManagerBase(Of Funique.Client.ClientTheaterManagerData)
  name.vb: ManagerBase(Of ClientTheaterManagerData)
  spec.csharp:
  - uid: Funique.Manager.ManagerBase`1
    name: ManagerBase
    nameWithType: ManagerBase
    fullName: Funique.Manager.ManagerBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Funique.Client.ClientTheaterManagerData
    name: ClientTheaterManagerData
    nameWithType: ClientTheaterManagerData
    fullName: Funique.Client.ClientTheaterManagerData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Funique.Manager.ManagerBase`1
    name: ManagerBase
    nameWithType: ManagerBase
    fullName: Funique.Manager.ManagerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Funique.Client.ClientTheaterManagerData
    name: ClientTheaterManagerData
    nameWithType: ClientTheaterManagerData
    fullName: Funique.Client.ClientTheaterManagerData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Funique.Manager.ManagerBase{Funique.Client.ClientTheaterManagerData}.config
  commentId: P:Funique.Manager.ManagerBase{Funique.Client.ClientTheaterManagerData}.config
  parent: Funique.Manager.ManagerBase{Funique.Client.ClientTheaterManagerData}
  definition: Funique.Manager.ManagerBase`1.config
  name: config
  nameWithType: ManagerBase<ClientTheaterManagerData>.config
  fullName: Funique.Manager.ManagerBase<Funique.Client.ClientTheaterManagerData>.config
  nameWithType.vb: ManagerBase(Of ClientTheaterManagerData).config
  fullName.vb: Funique.Manager.ManagerBase(Of Funique.Client.ClientTheaterManagerData).config
- uid: Funique.Manager.ManagerBase{Funique.Client.ClientTheaterManagerData}.RegisterConfig(Funique.Client.ClientTheaterManagerData)
  commentId: M:Funique.Manager.ManagerBase{Funique.Client.ClientTheaterManagerData}.RegisterConfig(Funique.Client.ClientTheaterManagerData)
  parent: Funique.Manager.ManagerBase{Funique.Client.ClientTheaterManagerData}
  definition: Funique.Manager.ManagerBase`1.RegisterConfig(`0)
  name: RegisterConfig(ClientTheaterManagerData)
  nameWithType: ManagerBase<ClientTheaterManagerData>.RegisterConfig(ClientTheaterManagerData)
  fullName: Funique.Manager.ManagerBase<Funique.Client.ClientTheaterManagerData>.RegisterConfig(Funique.Client.ClientTheaterManagerData)
  nameWithType.vb: ManagerBase(Of ClientTheaterManagerData).RegisterConfig(ClientTheaterManagerData)
  fullName.vb: Funique.Manager.ManagerBase(Of Funique.Client.ClientTheaterManagerData).RegisterConfig(Funique.Client.ClientTheaterManagerData)
  spec.csharp:
  - uid: Funique.Manager.ManagerBase`1.RegisterConfig(`0)
    name: RegisterConfig
    nameWithType: ManagerBase<ClientTheaterManagerData>.RegisterConfig
    fullName: Funique.Manager.ManagerBase<Funique.Client.ClientTheaterManagerData>.RegisterConfig
  - name: (
    nameWithType: (
    fullName: (
  - uid: Funique.Client.ClientTheaterManagerData
    name: ClientTheaterManagerData
    nameWithType: ClientTheaterManagerData
    fullName: Funique.Client.ClientTheaterManagerData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase`1.RegisterConfig(`0)
    name: RegisterConfig
    nameWithType: ManagerBase(Of ClientTheaterManagerData).RegisterConfig
    fullName: Funique.Manager.ManagerBase(Of Funique.Client.ClientTheaterManagerData).RegisterConfig
  - name: (
    nameWithType: (
    fullName: (
  - uid: Funique.Client.ClientTheaterManagerData
    name: ClientTheaterManagerData
    nameWithType: ClientTheaterManagerData
    fullName: Funique.Client.ClientTheaterManagerData
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.ManagerBase.Initialization
  commentId: M:Funique.Manager.ManagerBase.Initialization
  parent: Funique.Manager.ManagerBase
  name: Initialization()
  nameWithType: ManagerBase.Initialization()
  fullName: Funique.Manager.ManagerBase.Initialization()
  spec.csharp:
  - uid: Funique.Manager.ManagerBase.Initialization
    name: Initialization
    nameWithType: ManagerBase.Initialization
    fullName: Funique.Manager.ManagerBase.Initialization
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase.Initialization
    name: Initialization
    nameWithType: ManagerBase.Initialization
    fullName: Funique.Manager.ManagerBase.Initialization
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.ManagerBase.FrameUpdate
  commentId: M:Funique.Manager.ManagerBase.FrameUpdate
  parent: Funique.Manager.ManagerBase
  name: FrameUpdate()
  nameWithType: ManagerBase.FrameUpdate()
  fullName: Funique.Manager.ManagerBase.FrameUpdate()
  spec.csharp:
  - uid: Funique.Manager.ManagerBase.FrameUpdate
    name: FrameUpdate
    nameWithType: ManagerBase.FrameUpdate
    fullName: Funique.Manager.ManagerBase.FrameUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase.FrameUpdate
    name: FrameUpdate
    nameWithType: ManagerBase.FrameUpdate
    fullName: Funique.Manager.ManagerBase.FrameUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.ManagerBase.Shutdown
  commentId: M:Funique.Manager.ManagerBase.Shutdown
  parent: Funique.Manager.ManagerBase
  name: Shutdown()
  nameWithType: ManagerBase.Shutdown()
  fullName: Funique.Manager.ManagerBase.Shutdown()
  spec.csharp:
  - uid: Funique.Manager.ManagerBase.Shutdown
    name: Shutdown
    nameWithType: ManagerBase.Shutdown
    fullName: Funique.Manager.ManagerBase.Shutdown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase.Shutdown
    name: Shutdown
    nameWithType: ManagerBase.Shutdown
    fullName: Funique.Manager.ManagerBase.Shutdown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.ManagerBase.Dispose
  commentId: M:Funique.Manager.ManagerBase.Dispose
  parent: Funique.Manager.ManagerBase
  name: Dispose()
  nameWithType: ManagerBase.Dispose()
  fullName: Funique.Manager.ManagerBase.Dispose()
  spec.csharp:
  - uid: Funique.Manager.ManagerBase.Dispose
    name: Dispose
    nameWithType: ManagerBase.Dispose
    fullName: Funique.Manager.ManagerBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase.Dispose
    name: Dispose
    nameWithType: ManagerBase.Dispose
    fullName: Funique.Manager.ManagerBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Funique.Manager.ManagerBase`1
  commentId: T:Funique.Manager.ManagerBase`1
  name: ManagerBase<T>
  nameWithType: ManagerBase<T>
  fullName: Funique.Manager.ManagerBase<T>
  nameWithType.vb: ManagerBase(Of T)
  fullName.vb: Funique.Manager.ManagerBase(Of T)
  name.vb: ManagerBase(Of T)
  spec.csharp:
  - uid: Funique.Manager.ManagerBase`1
    name: ManagerBase
    nameWithType: ManagerBase
    fullName: Funique.Manager.ManagerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Funique.Manager.ManagerBase`1
    name: ManagerBase
    nameWithType: ManagerBase
    fullName: Funique.Manager.ManagerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.ManagerBase`1.config
  commentId: P:Funique.Manager.ManagerBase`1.config
  name: config
  nameWithType: ManagerBase<T>.config
  fullName: Funique.Manager.ManagerBase<T>.config
  nameWithType.vb: ManagerBase(Of T).config
  fullName.vb: Funique.Manager.ManagerBase(Of T).config
- uid: Funique.Manager.ManagerBase`1.RegisterConfig(`0)
  commentId: M:Funique.Manager.ManagerBase`1.RegisterConfig(`0)
  name: RegisterConfig(T)
  nameWithType: ManagerBase<T>.RegisterConfig(T)
  fullName: Funique.Manager.ManagerBase<T>.RegisterConfig(T)
  nameWithType.vb: ManagerBase(Of T).RegisterConfig(T)
  fullName.vb: Funique.Manager.ManagerBase(Of T).RegisterConfig(T)
  spec.csharp:
  - uid: Funique.Manager.ManagerBase`1.RegisterConfig(`0)
    name: RegisterConfig
    nameWithType: ManagerBase<T>.RegisterConfig
    fullName: Funique.Manager.ManagerBase<T>.RegisterConfig
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase`1.RegisterConfig(`0)
    name: RegisterConfig
    nameWithType: ManagerBase(Of T).RegisterConfig
    fullName: Funique.Manager.ManagerBase(Of T).RegisterConfig
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.ManagerBase{Funique.Client.ClientTheaterManagerData}.Loaded(Funique.Client.ClientTheaterManagerData)
  commentId: M:Funique.Manager.ManagerBase{Funique.Client.ClientTheaterManagerData}.Loaded(Funique.Client.ClientTheaterManagerData)
  parent: Funique.Manager.ManagerBase{Funique.Client.ClientTheaterManagerData}
  definition: Funique.Manager.ManagerBase`1.Loaded(`0)
  name: Loaded(ClientTheaterManagerData)
  nameWithType: ManagerBase<ClientTheaterManagerData>.Loaded(ClientTheaterManagerData)
  fullName: Funique.Manager.ManagerBase<Funique.Client.ClientTheaterManagerData>.Loaded(Funique.Client.ClientTheaterManagerData)
  nameWithType.vb: ManagerBase(Of ClientTheaterManagerData).Loaded(ClientTheaterManagerData)
  fullName.vb: Funique.Manager.ManagerBase(Of Funique.Client.ClientTheaterManagerData).Loaded(Funique.Client.ClientTheaterManagerData)
  spec.csharp:
  - uid: Funique.Manager.ManagerBase`1.Loaded(`0)
    name: Loaded
    nameWithType: ManagerBase<ClientTheaterManagerData>.Loaded
    fullName: Funique.Manager.ManagerBase<Funique.Client.ClientTheaterManagerData>.Loaded
  - name: (
    nameWithType: (
    fullName: (
  - uid: Funique.Client.ClientTheaterManagerData
    name: ClientTheaterManagerData
    nameWithType: ClientTheaterManagerData
    fullName: Funique.Client.ClientTheaterManagerData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase`1.Loaded(`0)
    name: Loaded
    nameWithType: ManagerBase(Of ClientTheaterManagerData).Loaded
    fullName: Funique.Manager.ManagerBase(Of Funique.Client.ClientTheaterManagerData).Loaded
  - name: (
    nameWithType: (
    fullName: (
  - uid: Funique.Client.ClientTheaterManagerData
    name: ClientTheaterManagerData
    nameWithType: ClientTheaterManagerData
    fullName: Funique.Client.ClientTheaterManagerData
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.ClientTheaterManagerUtility.Loaded*
  commentId: Overload:Funique.Manager.ClientTheaterManagerUtility.Loaded
  name: Loaded
  nameWithType: ClientTheaterManagerUtility.Loaded
  fullName: Funique.Manager.ClientTheaterManagerUtility.Loaded
- uid: Funique.Client.ClientTheaterManagerData
  commentId: T:Funique.Client.ClientTheaterManagerData
  parent: Funique.Client
  name: ClientTheaterManagerData
  nameWithType: ClientTheaterManagerData
  fullName: Funique.Client.ClientTheaterManagerData
- uid: Funique.Manager.ManagerBase`1.Loaded(`0)
  commentId: M:Funique.Manager.ManagerBase`1.Loaded(`0)
  name: Loaded(T)
  nameWithType: ManagerBase<T>.Loaded(T)
  fullName: Funique.Manager.ManagerBase<T>.Loaded(T)
  nameWithType.vb: ManagerBase(Of T).Loaded(T)
  fullName.vb: Funique.Manager.ManagerBase(Of T).Loaded(T)
  spec.csharp:
  - uid: Funique.Manager.ManagerBase`1.Loaded(`0)
    name: Loaded
    nameWithType: ManagerBase<T>.Loaded
    fullName: Funique.Manager.ManagerBase<T>.Loaded
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase`1.Loaded(`0)
    name: Loaded
    nameWithType: ManagerBase(Of T).Loaded
    fullName: Funique.Manager.ManagerBase(Of T).Loaded
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Client
  commentId: N:Funique.Client
  name: Funique.Client
  nameWithType: Funique.Client
  fullName: Funique.Client
- uid: Funique.Manager.ClientTheaterManagerUtility.SetWaitRoom*
  commentId: Overload:Funique.Manager.ClientTheaterManagerUtility.SetWaitRoom
  name: SetWaitRoom
  nameWithType: ClientTheaterManagerUtility.SetWaitRoom
  fullName: Funique.Manager.ClientTheaterManagerUtility.SetWaitRoom
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
