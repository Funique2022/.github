### YamlMime:ManagedReference
items:
- uid: Funique.Manager.ClientXRManagerUtility
  commentId: T:Funique.Manager.ClientXRManagerUtility
  id: ClientXRManagerUtility
  parent: Funique.Manager
  children:
  - Funique.Manager.ClientXRManagerUtility.ForceReset
  - Funique.Manager.ClientXRManagerUtility.GetHeadSetState
  - Funique.Manager.ClientXRManagerUtility.Headset
  - Funique.Manager.ClientXRManagerUtility.HeadsetResetFar
  - Funique.Manager.ClientXRManagerUtility.Initialization
  - Funique.Manager.ClientXRManagerUtility.LockHeadsetReset
  - Funique.Manager.ClientXRManagerUtility.ResetAction
  - Funique.Manager.ClientXRManagerUtility.SoftReset
  langs:
  - csharp
  - vb
  name: ClientXRManagerUtility
  nameWithType: ClientXRManagerUtility
  fullName: Funique.Manager.ClientXRManagerUtility
  type: Class
  source:
    remote:
      path: Assets/FuniquePlugin/Client/ClientXRManagerUtility.cs
      branch: main
      repo: https://github.com/Funique2022/project_unity_development.git
    id: ClientXRManagerUtility
    path: ../../../project_unity_development/Assets/FuniquePlugin/Client/ClientXRManagerUtility.cs
    startLine: 11
  assemblies:
  - Funique.Client
  namespace: Funique.Manager
  syntax:
    content: 'public class ClientXRManagerUtility : ManagerBase<ClientXRManagerData>, IDisposable, IXRManagerUtility'
    content.vb: >-
      Public Class ClientXRManagerUtility

          Inherits ManagerBase(Of ClientXRManagerData)

          Implements IDisposable, IXRManagerUtility
  inheritance:
  - System.Object
  - Funique.Manager.ManagerBase
  - Funique.Manager.ManagerBase{Funique.Client.ClientXRManagerData}
  implements:
  - System.IDisposable
  - Funique.Client.IXRManagerUtility
  inheritedMembers:
  - Funique.Manager.ManagerBase{Funique.Client.ClientXRManagerData}.config
  - Funique.Manager.ManagerBase{Funique.Client.ClientXRManagerData}.RegisterConfig(Funique.Client.ClientXRManagerData)
  - Funique.Manager.ManagerBase{Funique.Client.ClientXRManagerData}.Loaded(Funique.Client.ClientXRManagerData)
  - Funique.Manager.ManagerBase.FrameUpdate
  - Funique.Manager.ManagerBase.Shutdown
  - Funique.Manager.ManagerBase.Dispose
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Funique.Manager.ClientXRManagerUtility.ResetAction
  commentId: F:Funique.Manager.ClientXRManagerUtility.ResetAction
  id: ResetAction
  parent: Funique.Manager.ClientXRManagerUtility
  langs:
  - csharp
  - vb
  name: ResetAction
  nameWithType: ClientXRManagerUtility.ResetAction
  fullName: Funique.Manager.ClientXRManagerUtility.ResetAction
  type: Field
  source:
    remote:
      path: Assets/FuniquePlugin/Client/ClientXRManagerUtility.cs
      branch: main
      repo: https://github.com/Funique2022/project_unity_development.git
    id: ResetAction
    path: ../../../project_unity_development/Assets/FuniquePlugin/Client/ClientXRManagerUtility.cs
    startLine: 13
  assemblies:
  - Funique.Client
  namespace: Funique.Manager
  syntax:
    content: public Action ResetAction
    return:
      type: System.Action
    content.vb: Public ResetAction As Action
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Manager.ClientXRManagerUtility.GetHeadSetState
  commentId: P:Funique.Manager.ClientXRManagerUtility.GetHeadSetState
  id: GetHeadSetState
  parent: Funique.Manager.ClientXRManagerUtility
  langs:
  - csharp
  - vb
  name: GetHeadSetState
  nameWithType: ClientXRManagerUtility.GetHeadSetState
  fullName: Funique.Manager.ClientXRManagerUtility.GetHeadSetState
  type: Property
  source:
    remote:
      path: Assets/FuniquePlugin/Client/ClientXRManagerUtility.cs
      branch: main
      repo: https://github.com/Funique2022/project_unity_development.git
    id: GetHeadSetState
    path: ../../../project_unity_development/Assets/FuniquePlugin/Client/ClientXRManagerUtility.cs
    startLine: 15
  assemblies:
  - Funique.Client
  namespace: Funique.Manager
  syntax:
    content: public bool GetHeadSetState { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property GetHeadSetState As Boolean
  overload: Funique.Manager.ClientXRManagerUtility.GetHeadSetState*
  implements:
  - Funique.Client.IXRManagerUtility.GetHeadSetState
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Funique.Manager.ClientXRManagerUtility.LockHeadsetReset
  commentId: P:Funique.Manager.ClientXRManagerUtility.LockHeadsetReset
  id: LockHeadsetReset
  parent: Funique.Manager.ClientXRManagerUtility
  langs:
  - csharp
  - vb
  name: LockHeadsetReset
  nameWithType: ClientXRManagerUtility.LockHeadsetReset
  fullName: Funique.Manager.ClientXRManagerUtility.LockHeadsetReset
  type: Property
  source:
    remote:
      path: Assets/FuniquePlugin/Client/ClientXRManagerUtility.cs
      branch: main
      repo: https://github.com/Funique2022/project_unity_development.git
    id: LockHeadsetReset
    path: ../../../project_unity_development/Assets/FuniquePlugin/Client/ClientXRManagerUtility.cs
    startLine: 16
  assemblies:
  - Funique.Client
  namespace: Funique.Manager
  syntax:
    content: public bool LockHeadsetReset { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property LockHeadsetReset As Boolean
  overload: Funique.Manager.ClientXRManagerUtility.LockHeadsetReset*
  implements:
  - Funique.Client.IXRManagerUtility.LockHeadsetReset
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Funique.Manager.ClientXRManagerUtility.Headset
  commentId: P:Funique.Manager.ClientXRManagerUtility.Headset
  id: Headset
  parent: Funique.Manager.ClientXRManagerUtility
  langs:
  - csharp
  - vb
  name: Headset
  nameWithType: ClientXRManagerUtility.Headset
  fullName: Funique.Manager.ClientXRManagerUtility.Headset
  type: Property
  source:
    remote:
      path: Assets/FuniquePlugin/Client/ClientXRManagerUtility.cs
      branch: main
      repo: https://github.com/Funique2022/project_unity_development.git
    id: Headset
    path: ../../../project_unity_development/Assets/FuniquePlugin/Client/ClientXRManagerUtility.cs
    startLine: 17
  assemblies:
  - Funique.Client
  namespace: Funique.Manager
  syntax:
    content: public Transform Headset { get; }
    parameters: []
    return:
      type: UnityEngine.Transform
    content.vb: Public ReadOnly Property Headset As Transform
  overload: Funique.Manager.ClientXRManagerUtility.Headset*
  implements:
  - Funique.Client.IXRManagerUtility.Headset
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Funique.Manager.ClientXRManagerUtility.Initialization
  commentId: M:Funique.Manager.ClientXRManagerUtility.Initialization
  id: Initialization
  parent: Funique.Manager.ClientXRManagerUtility
  langs:
  - csharp
  - vb
  name: Initialization()
  nameWithType: ClientXRManagerUtility.Initialization()
  fullName: Funique.Manager.ClientXRManagerUtility.Initialization()
  type: Method
  source:
    remote:
      path: Assets/FuniquePlugin/Client/ClientXRManagerUtility.cs
      branch: main
      repo: https://github.com/Funique2022/project_unity_development.git
    id: Initialization
    path: ../../../project_unity_development/Assets/FuniquePlugin/Client/ClientXRManagerUtility.cs
    startLine: 19
  assemblies:
  - Funique.Client
  namespace: Funique.Manager
  syntax:
    content: public override void Initialization()
    content.vb: Public Overrides Sub Initialization
  overridden: Funique.Manager.ManagerBase.Initialization
  overload: Funique.Manager.ClientXRManagerUtility.Initialization*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Funique.Manager.ClientXRManagerUtility.SoftReset
  commentId: M:Funique.Manager.ClientXRManagerUtility.SoftReset
  id: SoftReset
  parent: Funique.Manager.ClientXRManagerUtility
  langs:
  - csharp
  - vb
  name: SoftReset()
  nameWithType: ClientXRManagerUtility.SoftReset()
  fullName: Funique.Manager.ClientXRManagerUtility.SoftReset()
  type: Method
  source:
    remote:
      path: Assets/FuniquePlugin/Client/ClientXRManagerUtility.cs
      branch: main
      repo: https://github.com/Funique2022/project_unity_development.git
    id: SoftReset
    path: ../../../project_unity_development/Assets/FuniquePlugin/Client/ClientXRManagerUtility.cs
    startLine: 25
  assemblies:
  - Funique.Client
  namespace: Funique.Manager
  syntax:
    content: public void SoftReset()
    content.vb: Public Sub SoftReset
  overload: Funique.Manager.ClientXRManagerUtility.SoftReset*
  implements:
  - Funique.Client.IXRManagerUtility.SoftReset
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Manager.ClientXRManagerUtility.ForceReset
  commentId: M:Funique.Manager.ClientXRManagerUtility.ForceReset
  id: ForceReset
  parent: Funique.Manager.ClientXRManagerUtility
  langs:
  - csharp
  - vb
  name: ForceReset()
  nameWithType: ClientXRManagerUtility.ForceReset()
  fullName: Funique.Manager.ClientXRManagerUtility.ForceReset()
  type: Method
  source:
    remote:
      path: Assets/FuniquePlugin/Client/ClientXRManagerUtility.cs
      branch: main
      repo: https://github.com/Funique2022/project_unity_development.git
    id: ForceReset
    path: ../../../project_unity_development/Assets/FuniquePlugin/Client/ClientXRManagerUtility.cs
    startLine: 34
  assemblies:
  - Funique.Client
  namespace: Funique.Manager
  syntax:
    content: public void ForceReset()
    content.vb: Public Sub ForceReset
  overload: Funique.Manager.ClientXRManagerUtility.ForceReset*
  implements:
  - Funique.Client.IXRManagerUtility.ForceReset
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Manager.ClientXRManagerUtility.HeadsetResetFar
  commentId: M:Funique.Manager.ClientXRManagerUtility.HeadsetResetFar
  id: HeadsetResetFar
  parent: Funique.Manager.ClientXRManagerUtility
  langs:
  - csharp
  - vb
  name: HeadsetResetFar()
  nameWithType: ClientXRManagerUtility.HeadsetResetFar()
  fullName: Funique.Manager.ClientXRManagerUtility.HeadsetResetFar()
  type: Method
  source:
    remote:
      path: Assets/FuniquePlugin/Client/ClientXRManagerUtility.cs
      branch: main
      repo: https://github.com/Funique2022/project_unity_development.git
    id: HeadsetResetFar
    path: ../../../project_unity_development/Assets/FuniquePlugin/Client/ClientXRManagerUtility.cs
    startLine: 39
  assemblies:
  - Funique.Client
  namespace: Funique.Manager
  syntax:
    content: public void HeadsetResetFar()
    content.vb: Public Sub HeadsetResetFar
  overload: Funique.Manager.ClientXRManagerUtility.HeadsetResetFar*
  implements:
  - Funique.Client.IXRManagerUtility.HeadsetResetFar
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Funique.Manager
  commentId: N:Funique.Manager
  name: Funique.Manager
  nameWithType: Funique.Manager
  fullName: Funique.Manager
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Funique.Manager.ManagerBase
  commentId: T:Funique.Manager.ManagerBase
  parent: Funique.Manager
  name: ManagerBase
  nameWithType: ManagerBase
  fullName: Funique.Manager.ManagerBase
- uid: Funique.Manager.ManagerBase{Funique.Client.ClientXRManagerData}
  commentId: T:Funique.Manager.ManagerBase{Funique.Client.ClientXRManagerData}
  parent: Funique.Manager
  definition: Funique.Manager.ManagerBase`1
  name: ManagerBase<ClientXRManagerData>
  nameWithType: ManagerBase<ClientXRManagerData>
  fullName: Funique.Manager.ManagerBase<Funique.Client.ClientXRManagerData>
  nameWithType.vb: ManagerBase(Of ClientXRManagerData)
  fullName.vb: Funique.Manager.ManagerBase(Of Funique.Client.ClientXRManagerData)
  name.vb: ManagerBase(Of ClientXRManagerData)
  spec.csharp:
  - uid: Funique.Manager.ManagerBase`1
    name: ManagerBase
    nameWithType: ManagerBase
    fullName: Funique.Manager.ManagerBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Funique.Client.ClientXRManagerData
    name: ClientXRManagerData
    nameWithType: ClientXRManagerData
    fullName: Funique.Client.ClientXRManagerData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Funique.Manager.ManagerBase`1
    name: ManagerBase
    nameWithType: ManagerBase
    fullName: Funique.Manager.ManagerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Funique.Client.ClientXRManagerData
    name: ClientXRManagerData
    nameWithType: ClientXRManagerData
    fullName: Funique.Client.ClientXRManagerData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Funique.Client.IXRManagerUtility
  commentId: T:Funique.Client.IXRManagerUtility
  parent: Funique.Client
  name: IXRManagerUtility
  nameWithType: IXRManagerUtility
  fullName: Funique.Client.IXRManagerUtility
- uid: Funique.Manager.ManagerBase{Funique.Client.ClientXRManagerData}.config
  commentId: P:Funique.Manager.ManagerBase{Funique.Client.ClientXRManagerData}.config
  parent: Funique.Manager.ManagerBase{Funique.Client.ClientXRManagerData}
  definition: Funique.Manager.ManagerBase`1.config
  name: config
  nameWithType: ManagerBase<ClientXRManagerData>.config
  fullName: Funique.Manager.ManagerBase<Funique.Client.ClientXRManagerData>.config
  nameWithType.vb: ManagerBase(Of ClientXRManagerData).config
  fullName.vb: Funique.Manager.ManagerBase(Of Funique.Client.ClientXRManagerData).config
- uid: Funique.Manager.ManagerBase{Funique.Client.ClientXRManagerData}.RegisterConfig(Funique.Client.ClientXRManagerData)
  commentId: M:Funique.Manager.ManagerBase{Funique.Client.ClientXRManagerData}.RegisterConfig(Funique.Client.ClientXRManagerData)
  parent: Funique.Manager.ManagerBase{Funique.Client.ClientXRManagerData}
  definition: Funique.Manager.ManagerBase`1.RegisterConfig(`0)
  name: RegisterConfig(ClientXRManagerData)
  nameWithType: ManagerBase<ClientXRManagerData>.RegisterConfig(ClientXRManagerData)
  fullName: Funique.Manager.ManagerBase<Funique.Client.ClientXRManagerData>.RegisterConfig(Funique.Client.ClientXRManagerData)
  nameWithType.vb: ManagerBase(Of ClientXRManagerData).RegisterConfig(ClientXRManagerData)
  fullName.vb: Funique.Manager.ManagerBase(Of Funique.Client.ClientXRManagerData).RegisterConfig(Funique.Client.ClientXRManagerData)
  spec.csharp:
  - uid: Funique.Manager.ManagerBase`1.RegisterConfig(`0)
    name: RegisterConfig
    nameWithType: ManagerBase<ClientXRManagerData>.RegisterConfig
    fullName: Funique.Manager.ManagerBase<Funique.Client.ClientXRManagerData>.RegisterConfig
  - name: (
    nameWithType: (
    fullName: (
  - uid: Funique.Client.ClientXRManagerData
    name: ClientXRManagerData
    nameWithType: ClientXRManagerData
    fullName: Funique.Client.ClientXRManagerData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase`1.RegisterConfig(`0)
    name: RegisterConfig
    nameWithType: ManagerBase(Of ClientXRManagerData).RegisterConfig
    fullName: Funique.Manager.ManagerBase(Of Funique.Client.ClientXRManagerData).RegisterConfig
  - name: (
    nameWithType: (
    fullName: (
  - uid: Funique.Client.ClientXRManagerData
    name: ClientXRManagerData
    nameWithType: ClientXRManagerData
    fullName: Funique.Client.ClientXRManagerData
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.ManagerBase{Funique.Client.ClientXRManagerData}.Loaded(Funique.Client.ClientXRManagerData)
  commentId: M:Funique.Manager.ManagerBase{Funique.Client.ClientXRManagerData}.Loaded(Funique.Client.ClientXRManagerData)
  parent: Funique.Manager.ManagerBase{Funique.Client.ClientXRManagerData}
  definition: Funique.Manager.ManagerBase`1.Loaded(`0)
  name: Loaded(ClientXRManagerData)
  nameWithType: ManagerBase<ClientXRManagerData>.Loaded(ClientXRManagerData)
  fullName: Funique.Manager.ManagerBase<Funique.Client.ClientXRManagerData>.Loaded(Funique.Client.ClientXRManagerData)
  nameWithType.vb: ManagerBase(Of ClientXRManagerData).Loaded(ClientXRManagerData)
  fullName.vb: Funique.Manager.ManagerBase(Of Funique.Client.ClientXRManagerData).Loaded(Funique.Client.ClientXRManagerData)
  spec.csharp:
  - uid: Funique.Manager.ManagerBase`1.Loaded(`0)
    name: Loaded
    nameWithType: ManagerBase<ClientXRManagerData>.Loaded
    fullName: Funique.Manager.ManagerBase<Funique.Client.ClientXRManagerData>.Loaded
  - name: (
    nameWithType: (
    fullName: (
  - uid: Funique.Client.ClientXRManagerData
    name: ClientXRManagerData
    nameWithType: ClientXRManagerData
    fullName: Funique.Client.ClientXRManagerData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase`1.Loaded(`0)
    name: Loaded
    nameWithType: ManagerBase(Of ClientXRManagerData).Loaded
    fullName: Funique.Manager.ManagerBase(Of Funique.Client.ClientXRManagerData).Loaded
  - name: (
    nameWithType: (
    fullName: (
  - uid: Funique.Client.ClientXRManagerData
    name: ClientXRManagerData
    nameWithType: ClientXRManagerData
    fullName: Funique.Client.ClientXRManagerData
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.ManagerBase.FrameUpdate
  commentId: M:Funique.Manager.ManagerBase.FrameUpdate
  parent: Funique.Manager.ManagerBase
  name: FrameUpdate()
  nameWithType: ManagerBase.FrameUpdate()
  fullName: Funique.Manager.ManagerBase.FrameUpdate()
  spec.csharp:
  - uid: Funique.Manager.ManagerBase.FrameUpdate
    name: FrameUpdate
    nameWithType: ManagerBase.FrameUpdate
    fullName: Funique.Manager.ManagerBase.FrameUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase.FrameUpdate
    name: FrameUpdate
    nameWithType: ManagerBase.FrameUpdate
    fullName: Funique.Manager.ManagerBase.FrameUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.ManagerBase.Shutdown
  commentId: M:Funique.Manager.ManagerBase.Shutdown
  parent: Funique.Manager.ManagerBase
  name: Shutdown()
  nameWithType: ManagerBase.Shutdown()
  fullName: Funique.Manager.ManagerBase.Shutdown()
  spec.csharp:
  - uid: Funique.Manager.ManagerBase.Shutdown
    name: Shutdown
    nameWithType: ManagerBase.Shutdown
    fullName: Funique.Manager.ManagerBase.Shutdown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase.Shutdown
    name: Shutdown
    nameWithType: ManagerBase.Shutdown
    fullName: Funique.Manager.ManagerBase.Shutdown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.ManagerBase.Dispose
  commentId: M:Funique.Manager.ManagerBase.Dispose
  parent: Funique.Manager.ManagerBase
  name: Dispose()
  nameWithType: ManagerBase.Dispose()
  fullName: Funique.Manager.ManagerBase.Dispose()
  spec.csharp:
  - uid: Funique.Manager.ManagerBase.Dispose
    name: Dispose
    nameWithType: ManagerBase.Dispose
    fullName: Funique.Manager.ManagerBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase.Dispose
    name: Dispose
    nameWithType: ManagerBase.Dispose
    fullName: Funique.Manager.ManagerBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Funique.Manager.ManagerBase`1
  commentId: T:Funique.Manager.ManagerBase`1
  name: ManagerBase<T>
  nameWithType: ManagerBase<T>
  fullName: Funique.Manager.ManagerBase<T>
  nameWithType.vb: ManagerBase(Of T)
  fullName.vb: Funique.Manager.ManagerBase(Of T)
  name.vb: ManagerBase(Of T)
  spec.csharp:
  - uid: Funique.Manager.ManagerBase`1
    name: ManagerBase
    nameWithType: ManagerBase
    fullName: Funique.Manager.ManagerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Funique.Manager.ManagerBase`1
    name: ManagerBase
    nameWithType: ManagerBase
    fullName: Funique.Manager.ManagerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Client
  commentId: N:Funique.Client
  name: Funique.Client
  nameWithType: Funique.Client
  fullName: Funique.Client
- uid: Funique.Manager.ManagerBase`1.config
  commentId: P:Funique.Manager.ManagerBase`1.config
  name: config
  nameWithType: ManagerBase<T>.config
  fullName: Funique.Manager.ManagerBase<T>.config
  nameWithType.vb: ManagerBase(Of T).config
  fullName.vb: Funique.Manager.ManagerBase(Of T).config
- uid: Funique.Manager.ManagerBase`1.RegisterConfig(`0)
  commentId: M:Funique.Manager.ManagerBase`1.RegisterConfig(`0)
  name: RegisterConfig(T)
  nameWithType: ManagerBase<T>.RegisterConfig(T)
  fullName: Funique.Manager.ManagerBase<T>.RegisterConfig(T)
  nameWithType.vb: ManagerBase(Of T).RegisterConfig(T)
  fullName.vb: Funique.Manager.ManagerBase(Of T).RegisterConfig(T)
  spec.csharp:
  - uid: Funique.Manager.ManagerBase`1.RegisterConfig(`0)
    name: RegisterConfig
    nameWithType: ManagerBase<T>.RegisterConfig
    fullName: Funique.Manager.ManagerBase<T>.RegisterConfig
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase`1.RegisterConfig(`0)
    name: RegisterConfig
    nameWithType: ManagerBase(Of T).RegisterConfig
    fullName: Funique.Manager.ManagerBase(Of T).RegisterConfig
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.ManagerBase`1.Loaded(`0)
  commentId: M:Funique.Manager.ManagerBase`1.Loaded(`0)
  name: Loaded(T)
  nameWithType: ManagerBase<T>.Loaded(T)
  fullName: Funique.Manager.ManagerBase<T>.Loaded(T)
  nameWithType.vb: ManagerBase(Of T).Loaded(T)
  fullName.vb: Funique.Manager.ManagerBase(Of T).Loaded(T)
  spec.csharp:
  - uid: Funique.Manager.ManagerBase`1.Loaded(`0)
    name: Loaded
    nameWithType: ManagerBase<T>.Loaded
    fullName: Funique.Manager.ManagerBase<T>.Loaded
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase`1.Loaded(`0)
    name: Loaded
    nameWithType: ManagerBase(Of T).Loaded
    fullName: Funique.Manager.ManagerBase(Of T).Loaded
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: Funique.Manager.ClientXRManagerUtility.GetHeadSetState*
  commentId: Overload:Funique.Manager.ClientXRManagerUtility.GetHeadSetState
  name: GetHeadSetState
  nameWithType: ClientXRManagerUtility.GetHeadSetState
  fullName: Funique.Manager.ClientXRManagerUtility.GetHeadSetState
- uid: Funique.Client.IXRManagerUtility.GetHeadSetState
  commentId: P:Funique.Client.IXRManagerUtility.GetHeadSetState
  parent: Funique.Client.IXRManagerUtility
  name: GetHeadSetState
  nameWithType: IXRManagerUtility.GetHeadSetState
  fullName: Funique.Client.IXRManagerUtility.GetHeadSetState
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Funique.Manager.ClientXRManagerUtility.LockHeadsetReset*
  commentId: Overload:Funique.Manager.ClientXRManagerUtility.LockHeadsetReset
  name: LockHeadsetReset
  nameWithType: ClientXRManagerUtility.LockHeadsetReset
  fullName: Funique.Manager.ClientXRManagerUtility.LockHeadsetReset
- uid: Funique.Client.IXRManagerUtility.LockHeadsetReset
  commentId: P:Funique.Client.IXRManagerUtility.LockHeadsetReset
  parent: Funique.Client.IXRManagerUtility
  name: LockHeadsetReset
  nameWithType: IXRManagerUtility.LockHeadsetReset
  fullName: Funique.Client.IXRManagerUtility.LockHeadsetReset
- uid: Funique.Manager.ClientXRManagerUtility.Headset*
  commentId: Overload:Funique.Manager.ClientXRManagerUtility.Headset
  name: Headset
  nameWithType: ClientXRManagerUtility.Headset
  fullName: Funique.Manager.ClientXRManagerUtility.Headset
- uid: Funique.Client.IXRManagerUtility.Headset
  commentId: P:Funique.Client.IXRManagerUtility.Headset
  parent: Funique.Client.IXRManagerUtility
  name: Headset
  nameWithType: IXRManagerUtility.Headset
  fullName: Funique.Client.IXRManagerUtility.Headset
- uid: UnityEngine.Transform
  commentId: T:UnityEngine.Transform
  parent: UnityEngine
  isExternal: true
  name: Transform
  nameWithType: Transform
  fullName: UnityEngine.Transform
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Funique.Manager.ManagerBase.Initialization
  commentId: M:Funique.Manager.ManagerBase.Initialization
  parent: Funique.Manager.ManagerBase
  name: Initialization()
  nameWithType: ManagerBase.Initialization()
  fullName: Funique.Manager.ManagerBase.Initialization()
  spec.csharp:
  - uid: Funique.Manager.ManagerBase.Initialization
    name: Initialization
    nameWithType: ManagerBase.Initialization
    fullName: Funique.Manager.ManagerBase.Initialization
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase.Initialization
    name: Initialization
    nameWithType: ManagerBase.Initialization
    fullName: Funique.Manager.ManagerBase.Initialization
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.ClientXRManagerUtility.Initialization*
  commentId: Overload:Funique.Manager.ClientXRManagerUtility.Initialization
  name: Initialization
  nameWithType: ClientXRManagerUtility.Initialization
  fullName: Funique.Manager.ClientXRManagerUtility.Initialization
- uid: Funique.Manager.ClientXRManagerUtility.SoftReset*
  commentId: Overload:Funique.Manager.ClientXRManagerUtility.SoftReset
  name: SoftReset
  nameWithType: ClientXRManagerUtility.SoftReset
  fullName: Funique.Manager.ClientXRManagerUtility.SoftReset
- uid: Funique.Client.IXRManagerUtility.SoftReset
  commentId: M:Funique.Client.IXRManagerUtility.SoftReset
  parent: Funique.Client.IXRManagerUtility
  name: SoftReset()
  nameWithType: IXRManagerUtility.SoftReset()
  fullName: Funique.Client.IXRManagerUtility.SoftReset()
  spec.csharp:
  - uid: Funique.Client.IXRManagerUtility.SoftReset
    name: SoftReset
    nameWithType: IXRManagerUtility.SoftReset
    fullName: Funique.Client.IXRManagerUtility.SoftReset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Client.IXRManagerUtility.SoftReset
    name: SoftReset
    nameWithType: IXRManagerUtility.SoftReset
    fullName: Funique.Client.IXRManagerUtility.SoftReset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.ClientXRManagerUtility.ForceReset*
  commentId: Overload:Funique.Manager.ClientXRManagerUtility.ForceReset
  name: ForceReset
  nameWithType: ClientXRManagerUtility.ForceReset
  fullName: Funique.Manager.ClientXRManagerUtility.ForceReset
- uid: Funique.Client.IXRManagerUtility.ForceReset
  commentId: M:Funique.Client.IXRManagerUtility.ForceReset
  parent: Funique.Client.IXRManagerUtility
  name: ForceReset()
  nameWithType: IXRManagerUtility.ForceReset()
  fullName: Funique.Client.IXRManagerUtility.ForceReset()
  spec.csharp:
  - uid: Funique.Client.IXRManagerUtility.ForceReset
    name: ForceReset
    nameWithType: IXRManagerUtility.ForceReset
    fullName: Funique.Client.IXRManagerUtility.ForceReset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Client.IXRManagerUtility.ForceReset
    name: ForceReset
    nameWithType: IXRManagerUtility.ForceReset
    fullName: Funique.Client.IXRManagerUtility.ForceReset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.ClientXRManagerUtility.HeadsetResetFar*
  commentId: Overload:Funique.Manager.ClientXRManagerUtility.HeadsetResetFar
  name: HeadsetResetFar
  nameWithType: ClientXRManagerUtility.HeadsetResetFar
  fullName: Funique.Manager.ClientXRManagerUtility.HeadsetResetFar
- uid: Funique.Client.IXRManagerUtility.HeadsetResetFar
  commentId: M:Funique.Client.IXRManagerUtility.HeadsetResetFar
  parent: Funique.Client.IXRManagerUtility
  name: HeadsetResetFar()
  nameWithType: IXRManagerUtility.HeadsetResetFar()
  fullName: Funique.Client.IXRManagerUtility.HeadsetResetFar()
  spec.csharp:
  - uid: Funique.Client.IXRManagerUtility.HeadsetResetFar
    name: HeadsetResetFar
    nameWithType: IXRManagerUtility.HeadsetResetFar
    fullName: Funique.Client.IXRManagerUtility.HeadsetResetFar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Client.IXRManagerUtility.HeadsetResetFar
    name: HeadsetResetFar
    nameWithType: IXRManagerUtility.HeadsetResetFar
    fullName: Funique.Client.IXRManagerUtility.HeadsetResetFar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
