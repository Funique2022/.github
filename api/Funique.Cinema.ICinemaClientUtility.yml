### YamlMime:ManagedReference
items:
- uid: Funique.Cinema.ICinemaClientUtility
  commentId: T:Funique.Cinema.ICinemaClientUtility
  id: ICinemaClientUtility
  parent: Funique.Cinema
  children:
  - Funique.Cinema.ICinemaClientUtility.CurMedia
  - Funique.Cinema.ICinemaClientUtility.Current_Display
  - Funique.Cinema.ICinemaClientUtility.CurrentMediaPlayer
  - Funique.Cinema.ICinemaClientUtility.CurrentMediaPlayer_Another
  - Funique.Cinema.ICinemaClientUtility.CurrentMediaPlayer_Display
  - Funique.Cinema.ICinemaClientUtility.CurrentMediaPlayer_Swap
  - Funique.Cinema.ICinemaClientUtility.DetectPlayerMode(System.String)
  - Funique.Cinema.ICinemaClientUtility.GetMediaPath(System.String,System.Boolean)
  - Funique.Cinema.ICinemaClientUtility.GetReadyImageName
  - Funique.Cinema.ICinemaClientUtility.GetReadyVideoName
  - Funique.Cinema.ICinemaClientUtility.GetVideoDurationTime(System.Boolean)
  - Funique.Cinema.ICinemaClientUtility.GetVideoDurationTimeString(System.Boolean)
  - Funique.Cinema.ICinemaClientUtility.GetVideoTime(System.Boolean)
  - Funique.Cinema.ICinemaClientUtility.GetVideoTimeString(System.Boolean)
  - Funique.Cinema.ICinemaClientUtility.HeadsetReset
  - Funique.Cinema.ICinemaClientUtility.MasterPlayerState
  - Funique.Cinema.ICinemaClientUtility.OnMediaPlay
  - Funique.Cinema.ICinemaClientUtility.OnMediaPlayPrepare
  - Funique.Cinema.ICinemaClientUtility.OnSwitchMediaPlayer
  - Funique.Cinema.ICinemaClientUtility.OnWaitroomStateChange
  - Funique.Cinema.ICinemaClientUtility.readyPlayFile
  - Funique.Cinema.ICinemaClientUtility.SelectMediaPlayerInstance(System.Int32)
  - Funique.Cinema.ICinemaClientUtility.SelectMediaPlayerInstance(System.String)
  - Funique.Cinema.ICinemaClientUtility.SetFirstBuffer
  - Funique.Cinema.ICinemaClientUtility.SetReadyPlayFile(Funique.InfoBase)
  - Funique.Cinema.ICinemaClientUtility.SetReadyPlayFile(System.String)
  - Funique.Cinema.ICinemaClientUtility.SetReplay(Funique.ReplayState)
  - Funique.Cinema.ICinemaClientUtility.SetStereoMode(Funique.StereoMode)
  - Funique.Cinema.ICinemaClientUtility.SetStereoMode(System.String)
  - Funique.Cinema.ICinemaClientUtility.SetSubtitle(Funique.SubtitleMode)
  - Funique.Cinema.ICinemaClientUtility.SetVideoClose
  - Funique.Cinema.ICinemaClientUtility.SetVideoLoop(System.Boolean)
  - Funique.Cinema.ICinemaClientUtility.SetVideoPause
  - Funique.Cinema.ICinemaClientUtility.SetVideoPlay(System.Boolean)
  - Funique.Cinema.ICinemaClientUtility.SetVideoSeek(System.Single)
  - Funique.Cinema.ICinemaClientUtility.SetVideoStop
  - Funique.Cinema.ICinemaClientUtility.SetWaitRoom(System.Boolean)
  - Funique.Cinema.ICinemaClientUtility.ShowTexture(System.String)
  - Funique.Cinema.ICinemaClientUtility.SphereOBJ
  - Funique.Cinema.ICinemaClientUtility.Support_Swap
  - Funique.Cinema.ICinemaClientUtility.SwapBuffer
  - Funique.Cinema.ICinemaClientUtility.SwitchMediaPlayer(RenderHeads.Media.AVProVideo.MediaPlayer)
  langs:
  - csharp
  - vb
  name: ICinemaClientUtility
  nameWithType: ICinemaClientUtility
  fullName: Funique.Cinema.ICinemaClientUtility
  type: Interface
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: ICinemaClientUtility
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 12
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nCinema client utility, Unit testable <br />\n------------------------------------------------ <br />\n客戶端劇場功能. 可被單元測試\n"
  example: []
  syntax:
    content: 'public interface ICinemaClientUtility : IModuleBase<CinemaManagerClientData>'
    content.vb: >-
      Public Interface ICinemaClientUtility

          Inherits IModuleBase(Of CinemaManagerClientData)
  inheritedMembers:
  - Funique.IModuleBase{Funique.Cinema.CinemaManagerClientData}.config
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Funique.Cinema.ICinemaClientUtility.CurrentMediaPlayer
  commentId: P:Funique.Cinema.ICinemaClientUtility.CurrentMediaPlayer
  id: CurrentMediaPlayer
  parent: Funique.Cinema.ICinemaClientUtility
  langs:
  - csharp
  - vb
  name: CurrentMediaPlayer
  nameWithType: ICinemaClientUtility.CurrentMediaPlayer
  fullName: Funique.Cinema.ICinemaClientUtility.CurrentMediaPlayer
  type: Property
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: CurrentMediaPlayer
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 21
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nCurrent select media player instance <br />\n------------------------------------------------ <br />\n目前使用的 Av-Pro 播放器實體\n"
  example: []
  syntax:
    content: MediaPlayer CurrentMediaPlayer { get; set; }
    parameters: []
    return:
      type: RenderHeads.Media.AVProVideo.MediaPlayer
    content.vb: Property CurrentMediaPlayer As MediaPlayer
  overload: Funique.Cinema.ICinemaClientUtility.CurrentMediaPlayer*
  modifiers.csharp:
  - get
  - set
- uid: Funique.Cinema.ICinemaClientUtility.CurrentMediaPlayer_Swap
  commentId: P:Funique.Cinema.ICinemaClientUtility.CurrentMediaPlayer_Swap
  id: CurrentMediaPlayer_Swap
  parent: Funique.Cinema.ICinemaClientUtility
  langs:
  - csharp
  - vb
  name: CurrentMediaPlayer_Swap
  nameWithType: ICinemaClientUtility.CurrentMediaPlayer_Swap
  fullName: Funique.Cinema.ICinemaClientUtility.CurrentMediaPlayer_Swap
  type: Property
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: CurrentMediaPlayer_Swap
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 22
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  syntax:
    content: MediaPlayer CurrentMediaPlayer_Swap { get; set; }
    parameters: []
    return:
      type: RenderHeads.Media.AVProVideo.MediaPlayer
    content.vb: Property CurrentMediaPlayer_Swap As MediaPlayer
  overload: Funique.Cinema.ICinemaClientUtility.CurrentMediaPlayer_Swap*
  modifiers.csharp:
  - get
  - set
- uid: Funique.Cinema.ICinemaClientUtility.CurrentMediaPlayer_Display
  commentId: P:Funique.Cinema.ICinemaClientUtility.CurrentMediaPlayer_Display
  id: CurrentMediaPlayer_Display
  parent: Funique.Cinema.ICinemaClientUtility
  langs:
  - csharp
  - vb
  name: CurrentMediaPlayer_Display
  nameWithType: ICinemaClientUtility.CurrentMediaPlayer_Display
  fullName: Funique.Cinema.ICinemaClientUtility.CurrentMediaPlayer_Display
  type: Property
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: CurrentMediaPlayer_Display
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 23
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  syntax:
    content: MediaPlayer CurrentMediaPlayer_Display { get; }
    parameters: []
    return:
      type: RenderHeads.Media.AVProVideo.MediaPlayer
    content.vb: ReadOnly Property CurrentMediaPlayer_Display As MediaPlayer
  overload: Funique.Cinema.ICinemaClientUtility.CurrentMediaPlayer_Display*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Funique.Cinema.ICinemaClientUtility.CurrentMediaPlayer_Another
  commentId: P:Funique.Cinema.ICinemaClientUtility.CurrentMediaPlayer_Another
  id: CurrentMediaPlayer_Another
  parent: Funique.Cinema.ICinemaClientUtility
  langs:
  - csharp
  - vb
  name: CurrentMediaPlayer_Another
  nameWithType: ICinemaClientUtility.CurrentMediaPlayer_Another
  fullName: Funique.Cinema.ICinemaClientUtility.CurrentMediaPlayer_Another
  type: Property
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: CurrentMediaPlayer_Another
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 24
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  syntax:
    content: MediaPlayer CurrentMediaPlayer_Another { get; }
    parameters: []
    return:
      type: RenderHeads.Media.AVProVideo.MediaPlayer
    content.vb: ReadOnly Property CurrentMediaPlayer_Another As MediaPlayer
  overload: Funique.Cinema.ICinemaClientUtility.CurrentMediaPlayer_Another*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Funique.Cinema.ICinemaClientUtility.Support_Swap
  commentId: P:Funique.Cinema.ICinemaClientUtility.Support_Swap
  id: Support_Swap
  parent: Funique.Cinema.ICinemaClientUtility
  langs:
  - csharp
  - vb
  name: Support_Swap
  nameWithType: ICinemaClientUtility.Support_Swap
  fullName: Funique.Cinema.ICinemaClientUtility.Support_Swap
  type: Property
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: Support_Swap
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 25
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  syntax:
    content: bool Support_Swap { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property Support_Swap As Boolean
  overload: Funique.Cinema.ICinemaClientUtility.Support_Swap*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Funique.Cinema.ICinemaClientUtility.Current_Display
  commentId: P:Funique.Cinema.ICinemaClientUtility.Current_Display
  id: Current_Display
  parent: Funique.Cinema.ICinemaClientUtility
  langs:
  - csharp
  - vb
  name: Current_Display
  nameWithType: ICinemaClientUtility.Current_Display
  fullName: Funique.Cinema.ICinemaClientUtility.Current_Display
  type: Property
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: Current_Display
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 30
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nTrue: Current <br />\nFalse: Buffer\n"
  example: []
  syntax:
    content: bool Current_Display { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property Current_Display As Boolean
  overload: Funique.Cinema.ICinemaClientUtility.Current_Display*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Funique.Cinema.ICinemaClientUtility.CurMedia
  commentId: P:Funique.Cinema.ICinemaClientUtility.CurMedia
  id: CurMedia
  parent: Funique.Cinema.ICinemaClientUtility
  langs:
  - csharp
  - vb
  name: CurMedia
  nameWithType: ICinemaClientUtility.CurMedia
  fullName: Funique.Cinema.ICinemaClientUtility.CurMedia
  type: Property
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: CurMedia
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 36
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nCurrent select media <br />\n------------------------------------------------ <br />\n目前選擇的媒體\n"
  example: []
  syntax:
    content: InfoBase CurMedia { get; }
    parameters: []
    return:
      type: Funique.InfoBase
    content.vb: ReadOnly Property CurMedia As InfoBase
  overload: Funique.Cinema.ICinemaClientUtility.CurMedia*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Funique.Cinema.ICinemaClientUtility.readyPlayFile
  commentId: P:Funique.Cinema.ICinemaClientUtility.readyPlayFile
  id: readyPlayFile
  parent: Funique.Cinema.ICinemaClientUtility
  langs:
  - csharp
  - vb
  name: readyPlayFile
  nameWithType: ICinemaClientUtility.readyPlayFile
  fullName: Funique.Cinema.ICinemaClientUtility.readyPlayFile
  type: Property
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: readyPlayFile
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 42
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nReady play file name <br />\n------------------------------------------------ <br />\n準備影片名稱\n"
  example: []
  syntax:
    content: string readyPlayFile { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property readyPlayFile As String
  overload: Funique.Cinema.ICinemaClientUtility.readyPlayFile*
  modifiers.csharp:
  - get
  - set
- uid: Funique.Cinema.ICinemaClientUtility.SphereOBJ
  commentId: P:Funique.Cinema.ICinemaClientUtility.SphereOBJ
  id: SphereOBJ
  parent: Funique.Cinema.ICinemaClientUtility
  langs:
  - csharp
  - vb
  name: SphereOBJ
  nameWithType: ICinemaClientUtility.SphereOBJ
  fullName: Funique.Cinema.ICinemaClientUtility.SphereOBJ
  type: Property
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: SphereOBJ
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 48
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nMedia resource play mesh scene object <br />\n------------------------------------------------ <br />\n播放媒體 場景物建\n"
  example: []
  syntax:
    content: GameObject SphereOBJ { get; }
    parameters: []
    return:
      type: UnityEngine.GameObject
    content.vb: ReadOnly Property SphereOBJ As GameObject
  overload: Funique.Cinema.ICinemaClientUtility.SphereOBJ*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Funique.Cinema.ICinemaClientUtility.MasterPlayerState
  commentId: P:Funique.Cinema.ICinemaClientUtility.MasterPlayerState
  id: MasterPlayerState
  parent: Funique.Cinema.ICinemaClientUtility
  langs:
  - csharp
  - vb
  name: MasterPlayerState
  nameWithType: ICinemaClientUtility.MasterPlayerState
  fullName: Funique.Cinema.ICinemaClientUtility.MasterPlayerState
  type: Property
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: MasterPlayerState
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 54
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nMedia player state <br />\n------------------------------------------------ <br />\n媒體播放器 狀態\n"
  example: []
  syntax:
    content: ClientInMasterPlayerState MasterPlayerState { get; }
    parameters: []
    return:
      type: Funique.ClientInMasterPlayerState
    content.vb: ReadOnly Property MasterPlayerState As ClientInMasterPlayerState
  overload: Funique.Cinema.ICinemaClientUtility.MasterPlayerState*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Funique.Cinema.ICinemaClientUtility.OnMediaPlay
  commentId: P:Funique.Cinema.ICinemaClientUtility.OnMediaPlay
  id: OnMediaPlay
  parent: Funique.Cinema.ICinemaClientUtility
  langs:
  - csharp
  - vb
  name: OnMediaPlay
  nameWithType: ICinemaClientUtility.OnMediaPlay
  fullName: Funique.Cinema.ICinemaClientUtility.OnMediaPlay
  type: Property
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: OnMediaPlay
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 65
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nMedia player event <br />\n------------------------------------------------ <br />\n媒體播放事件\n"
  example: []
  syntax:
    content: UnityEvent<string> OnMediaPlay { get; }
    parameters: []
    return:
      type: UnityEngine.Events.UnityEvent{System.String}
    content.vb: ReadOnly Property OnMediaPlay As UnityEvent(Of String)
  overload: Funique.Cinema.ICinemaClientUtility.OnMediaPlay*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Funique.Cinema.ICinemaClientUtility.OnMediaPlayPrepare
  commentId: P:Funique.Cinema.ICinemaClientUtility.OnMediaPlayPrepare
  id: OnMediaPlayPrepare
  parent: Funique.Cinema.ICinemaClientUtility
  langs:
  - csharp
  - vb
  name: OnMediaPlayPrepare
  nameWithType: ICinemaClientUtility.OnMediaPlayPrepare
  fullName: Funique.Cinema.ICinemaClientUtility.OnMediaPlayPrepare
  type: Property
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: OnMediaPlayPrepare
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 71
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nMedia ready event <br />\n------------------------------------------------ <br />\n媒體準備事件\n"
  example: []
  syntax:
    content: UnityEvent<string> OnMediaPlayPrepare { get; }
    parameters: []
    return:
      type: UnityEngine.Events.UnityEvent{System.String}
    content.vb: ReadOnly Property OnMediaPlayPrepare As UnityEvent(Of String)
  overload: Funique.Cinema.ICinemaClientUtility.OnMediaPlayPrepare*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Funique.Cinema.ICinemaClientUtility.OnSwitchMediaPlayer
  commentId: P:Funique.Cinema.ICinemaClientUtility.OnSwitchMediaPlayer
  id: OnSwitchMediaPlayer
  parent: Funique.Cinema.ICinemaClientUtility
  langs:
  - csharp
  - vb
  name: OnSwitchMediaPlayer
  nameWithType: ICinemaClientUtility.OnSwitchMediaPlayer
  fullName: Funique.Cinema.ICinemaClientUtility.OnSwitchMediaPlayer
  type: Property
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: OnSwitchMediaPlayer
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 77
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nMedia player instance switch event <br />\n------------------------------------------------ <br />\n媒體播放器實體 切換事件\n"
  example: []
  syntax:
    content: UnityEvent<MediaPlayer> OnSwitchMediaPlayer { get; }
    parameters: []
    return:
      type: UnityEngine.Events.UnityEvent{RenderHeads.Media.AVProVideo.MediaPlayer}
    content.vb: ReadOnly Property OnSwitchMediaPlayer As UnityEvent(Of MediaPlayer)
  overload: Funique.Cinema.ICinemaClientUtility.OnSwitchMediaPlayer*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Funique.Cinema.ICinemaClientUtility.OnWaitroomStateChange
  commentId: P:Funique.Cinema.ICinemaClientUtility.OnWaitroomStateChange
  id: OnWaitroomStateChange
  parent: Funique.Cinema.ICinemaClientUtility
  langs:
  - csharp
  - vb
  name: OnWaitroomStateChange
  nameWithType: ICinemaClientUtility.OnWaitroomStateChange
  fullName: Funique.Cinema.ICinemaClientUtility.OnWaitroomStateChange
  type: Property
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: OnWaitroomStateChange
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 83
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nWaiting room event <br />\n------------------------------------------------ <br />\n等待房間事件\n"
  example: []
  syntax:
    content: UnityEvent<bool> OnWaitroomStateChange { get; }
    parameters: []
    return:
      type: UnityEngine.Events.UnityEvent{System.Boolean}
    content.vb: ReadOnly Property OnWaitroomStateChange As UnityEvent(Of Boolean)
  overload: Funique.Cinema.ICinemaClientUtility.OnWaitroomStateChange*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Funique.Cinema.ICinemaClientUtility.SelectMediaPlayerInstance(System.Int32)
  commentId: M:Funique.Cinema.ICinemaClientUtility.SelectMediaPlayerInstance(System.Int32)
  id: SelectMediaPlayerInstance(System.Int32)
  parent: Funique.Cinema.ICinemaClientUtility
  langs:
  - csharp
  - vb
  name: SelectMediaPlayerInstance(Int32)
  nameWithType: ICinemaClientUtility.SelectMediaPlayerInstance(Int32)
  fullName: Funique.Cinema.ICinemaClientUtility.SelectMediaPlayerInstance(System.Int32)
  type: Method
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: SelectMediaPlayerInstance
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 95
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nSelect media player instance by index <br />\n------------------------------------------------ <br />\n從目錄 選擇播放器\n"
  example: []
  syntax:
    content: void SelectMediaPlayerInstance(int index)
    parameters:
    - id: index
      type: System.Int32
      description: ''
    content.vb: Sub SelectMediaPlayerInstance(index As Integer)
  overload: Funique.Cinema.ICinemaClientUtility.SelectMediaPlayerInstance*
- uid: Funique.Cinema.ICinemaClientUtility.SelectMediaPlayerInstance(System.String)
  commentId: M:Funique.Cinema.ICinemaClientUtility.SelectMediaPlayerInstance(System.String)
  id: SelectMediaPlayerInstance(System.String)
  parent: Funique.Cinema.ICinemaClientUtility
  langs:
  - csharp
  - vb
  name: SelectMediaPlayerInstance(String)
  nameWithType: ICinemaClientUtility.SelectMediaPlayerInstance(String)
  fullName: Funique.Cinema.ICinemaClientUtility.SelectMediaPlayerInstance(System.String)
  type: Method
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: SelectMediaPlayerInstance
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 102
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nSelect media player instance by key name <br />\n------------------------------------------------ <br />\n從註冊名稱 選擇播放器\n"
  example: []
  syntax:
    content: void SelectMediaPlayerInstance(string name)
    parameters:
    - id: name
      type: System.String
      description: ''
    content.vb: Sub SelectMediaPlayerInstance(name As String)
  overload: Funique.Cinema.ICinemaClientUtility.SelectMediaPlayerInstance*
- uid: Funique.Cinema.ICinemaClientUtility.SetVideoSeek(System.Single)
  commentId: M:Funique.Cinema.ICinemaClientUtility.SetVideoSeek(System.Single)
  id: SetVideoSeek(System.Single)
  parent: Funique.Cinema.ICinemaClientUtility
  langs:
  - csharp
  - vb
  name: SetVideoSeek(Single)
  nameWithType: ICinemaClientUtility.SetVideoSeek(Single)
  fullName: Funique.Cinema.ICinemaClientUtility.SetVideoSeek(System.Single)
  type: Method
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: SetVideoSeek
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 109
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nVideo seek <br />\n------------------------------------------------ <br />\n影片快轉時間軸\n"
  example: []
  syntax:
    content: void SetVideoSeek(float value)
    parameters:
    - id: value
      type: System.Single
      description: Second
    content.vb: Sub SetVideoSeek(value As Single)
  overload: Funique.Cinema.ICinemaClientUtility.SetVideoSeek*
- uid: Funique.Cinema.ICinemaClientUtility.SetWaitRoom(System.Boolean)
  commentId: M:Funique.Cinema.ICinemaClientUtility.SetWaitRoom(System.Boolean)
  id: SetWaitRoom(System.Boolean)
  parent: Funique.Cinema.ICinemaClientUtility
  langs:
  - csharp
  - vb
  name: SetWaitRoom(Boolean)
  nameWithType: ICinemaClientUtility.SetWaitRoom(Boolean)
  fullName: Funique.Cinema.ICinemaClientUtility.SetWaitRoom(System.Boolean)
  type: Method
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: SetWaitRoom
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 116
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nSet waiting room state <br />\n------------------------------------------------ <br />\n設置 等待房間狀態\n"
  example: []
  syntax:
    content: void SetWaitRoom(bool trigger)
    parameters:
    - id: trigger
      type: System.Boolean
      description: ''
    content.vb: Sub SetWaitRoom(trigger As Boolean)
  overload: Funique.Cinema.ICinemaClientUtility.SetWaitRoom*
- uid: Funique.Cinema.ICinemaClientUtility.SetReadyPlayFile(Funique.InfoBase)
  commentId: M:Funique.Cinema.ICinemaClientUtility.SetReadyPlayFile(Funique.InfoBase)
  id: SetReadyPlayFile(Funique.InfoBase)
  parent: Funique.Cinema.ICinemaClientUtility
  langs:
  - csharp
  - vb
  name: SetReadyPlayFile(InfoBase)
  nameWithType: ICinemaClientUtility.SetReadyPlayFile(InfoBase)
  fullName: Funique.Cinema.ICinemaClientUtility.SetReadyPlayFile(Funique.InfoBase)
  type: Method
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: SetReadyPlayFile
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 123
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nSet ready play file <br />\n------------------------------------------------ <br />\n設定影片檔案路徑\n"
  example: []
  syntax:
    content: void SetReadyPlayFile(InfoBase mediaInfo)
    parameters:
    - id: mediaInfo
      type: Funique.InfoBase
    content.vb: Sub SetReadyPlayFile(mediaInfo As InfoBase)
  overload: Funique.Cinema.ICinemaClientUtility.SetReadyPlayFile*
- uid: Funique.Cinema.ICinemaClientUtility.SetReadyPlayFile(System.String)
  commentId: M:Funique.Cinema.ICinemaClientUtility.SetReadyPlayFile(System.String)
  id: SetReadyPlayFile(System.String)
  parent: Funique.Cinema.ICinemaClientUtility
  langs:
  - csharp
  - vb
  name: SetReadyPlayFile(String)
  nameWithType: ICinemaClientUtility.SetReadyPlayFile(String)
  fullName: Funique.Cinema.ICinemaClientUtility.SetReadyPlayFile(System.String)
  type: Method
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: SetReadyPlayFile
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 130
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nSet ready play file <br />\n------------------------------------------------ <br />\n設定影片檔案路徑\n"
  example: []
  syntax:
    content: void SetReadyPlayFile(string recivedReadyPlayFile)
    parameters:
    - id: recivedReadyPlayFile
      type: System.String
      description: ''
    content.vb: Sub SetReadyPlayFile(recivedReadyPlayFile As String)
  overload: Funique.Cinema.ICinemaClientUtility.SetReadyPlayFile*
- uid: Funique.Cinema.ICinemaClientUtility.SetVideoPlay(System.Boolean)
  commentId: M:Funique.Cinema.ICinemaClientUtility.SetVideoPlay(System.Boolean)
  id: SetVideoPlay(System.Boolean)
  parent: Funique.Cinema.ICinemaClientUtility
  langs:
  - csharp
  - vb
  name: SetVideoPlay(Boolean)
  nameWithType: ICinemaClientUtility.SetVideoPlay(Boolean)
  fullName: Funique.Cinema.ICinemaClientUtility.SetVideoPlay(System.Boolean)
  type: Method
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: SetVideoPlay
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 138
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nPlay current setup media <br />\n------------------------------------------------ <br />\n播放目前選擇媒體\n"
  example: []
  syntax:
    content: bool SetVideoPlay(bool url = false)
    parameters:
    - id: url
      type: System.Boolean
      description: Is URL
    return:
      type: System.Boolean
      description: ''
    content.vb: Function SetVideoPlay(url As Boolean = False) As Boolean
  overload: Funique.Cinema.ICinemaClientUtility.SetVideoPlay*
- uid: Funique.Cinema.ICinemaClientUtility.SetVideoPause
  commentId: M:Funique.Cinema.ICinemaClientUtility.SetVideoPause
  id: SetVideoPause
  parent: Funique.Cinema.ICinemaClientUtility
  langs:
  - csharp
  - vb
  name: SetVideoPause()
  nameWithType: ICinemaClientUtility.SetVideoPause()
  fullName: Funique.Cinema.ICinemaClientUtility.SetVideoPause()
  type: Method
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: SetVideoPause
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 144
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nPauing current media player <br />\n------------------------------------------------ <br />\n暫停播放\n"
  example: []
  syntax:
    content: void SetVideoPause()
    content.vb: Sub SetVideoPause
  overload: Funique.Cinema.ICinemaClientUtility.SetVideoPause*
- uid: Funique.Cinema.ICinemaClientUtility.SetVideoLoop(System.Boolean)
  commentId: M:Funique.Cinema.ICinemaClientUtility.SetVideoLoop(System.Boolean)
  id: SetVideoLoop(System.Boolean)
  parent: Funique.Cinema.ICinemaClientUtility
  langs:
  - csharp
  - vb
  name: SetVideoLoop(Boolean)
  nameWithType: ICinemaClientUtility.SetVideoLoop(Boolean)
  fullName: Funique.Cinema.ICinemaClientUtility.SetVideoLoop(System.Boolean)
  type: Method
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: SetVideoLoop
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 151
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nSet the media player loop option <br />\n------------------------------------------------ <br />\n設置循環\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Try use replay policy to control the loop options")]

      void SetVideoLoop(bool isLoop)
    parameters:
    - id: isLoop
      type: System.Boolean
      description: ''
    content.vb: >-
      <Obsolete("Try use replay policy to control the loop options")>

      Sub SetVideoLoop(isLoop As Boolean)
  overload: Funique.Cinema.ICinemaClientUtility.SetVideoLoop*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Try use replay policy to control the loop options
- uid: Funique.Cinema.ICinemaClientUtility.SetStereoMode(System.String)
  commentId: M:Funique.Cinema.ICinemaClientUtility.SetStereoMode(System.String)
  id: SetStereoMode(System.String)
  parent: Funique.Cinema.ICinemaClientUtility
  langs:
  - csharp
  - vb
  name: SetStereoMode(String)
  nameWithType: ICinemaClientUtility.SetStereoMode(String)
  fullName: Funique.Cinema.ICinemaClientUtility.SetStereoMode(System.String)
  type: Method
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: SetStereoMode
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 153
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  syntax:
    content: void SetStereoMode(string value)
    parameters:
    - id: value
      type: System.String
    content.vb: Sub SetStereoMode(value As String)
  overload: Funique.Cinema.ICinemaClientUtility.SetStereoMode*
- uid: Funique.Cinema.ICinemaClientUtility.SetStereoMode(Funique.StereoMode)
  commentId: M:Funique.Cinema.ICinemaClientUtility.SetStereoMode(Funique.StereoMode)
  id: SetStereoMode(Funique.StereoMode)
  parent: Funique.Cinema.ICinemaClientUtility
  langs:
  - csharp
  - vb
  name: SetStereoMode(StereoMode)
  nameWithType: ICinemaClientUtility.SetStereoMode(StereoMode)
  fullName: Funique.Cinema.ICinemaClientUtility.SetStereoMode(Funique.StereoMode)
  type: Method
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: SetStereoMode
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 154
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  syntax:
    content: void SetStereoMode(StereoMode value)
    parameters:
    - id: value
      type: Funique.StereoMode
    content.vb: Sub SetStereoMode(value As StereoMode)
  overload: Funique.Cinema.ICinemaClientUtility.SetStereoMode*
- uid: Funique.Cinema.ICinemaClientUtility.SetReplay(Funique.ReplayState)
  commentId: M:Funique.Cinema.ICinemaClientUtility.SetReplay(Funique.ReplayState)
  id: SetReplay(Funique.ReplayState)
  parent: Funique.Cinema.ICinemaClientUtility
  langs:
  - csharp
  - vb
  name: SetReplay(ReplayState)
  nameWithType: ICinemaClientUtility.SetReplay(ReplayState)
  fullName: Funique.Cinema.ICinemaClientUtility.SetReplay(Funique.ReplayState)
  type: Method
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: SetReplay
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 160
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nSet replay policy <br />\n------------------------------------------------ <br />\n設置重播政策\n"
  example: []
  syntax:
    content: void SetReplay(ReplayState replay)
    parameters:
    - id: replay
      type: Funique.ReplayState
    content.vb: Sub SetReplay(replay As ReplayState)
  overload: Funique.Cinema.ICinemaClientUtility.SetReplay*
- uid: Funique.Cinema.ICinemaClientUtility.SetSubtitle(Funique.SubtitleMode)
  commentId: M:Funique.Cinema.ICinemaClientUtility.SetSubtitle(Funique.SubtitleMode)
  id: SetSubtitle(Funique.SubtitleMode)
  parent: Funique.Cinema.ICinemaClientUtility
  langs:
  - csharp
  - vb
  name: SetSubtitle(SubtitleMode)
  nameWithType: ICinemaClientUtility.SetSubtitle(SubtitleMode)
  fullName: Funique.Cinema.ICinemaClientUtility.SetSubtitle(Funique.SubtitleMode)
  type: Method
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: SetSubtitle
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 166
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nSet subtitle mode <br />\n------------------------------------------------ <br />\n設置字幕模式\n"
  example: []
  syntax:
    content: void SetSubtitle(SubtitleMode mode)
    parameters:
    - id: mode
      type: Funique.SubtitleMode
    content.vb: Sub SetSubtitle(mode As SubtitleMode)
  overload: Funique.Cinema.ICinemaClientUtility.SetSubtitle*
- uid: Funique.Cinema.ICinemaClientUtility.SetVideoStop
  commentId: M:Funique.Cinema.ICinemaClientUtility.SetVideoStop
  id: SetVideoStop
  parent: Funique.Cinema.ICinemaClientUtility
  langs:
  - csharp
  - vb
  name: SetVideoStop()
  nameWithType: ICinemaClientUtility.SetVideoStop()
  fullName: Funique.Cinema.ICinemaClientUtility.SetVideoStop()
  type: Method
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: SetVideoStop
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 172
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nStop current media player <br />\n------------------------------------------------ <br />\n停止播放\n"
  example: []
  syntax:
    content: void SetVideoStop()
    content.vb: Sub SetVideoStop
  overload: Funique.Cinema.ICinemaClientUtility.SetVideoStop*
- uid: Funique.Cinema.ICinemaClientUtility.SetVideoClose
  commentId: M:Funique.Cinema.ICinemaClientUtility.SetVideoClose
  id: SetVideoClose
  parent: Funique.Cinema.ICinemaClientUtility
  langs:
  - csharp
  - vb
  name: SetVideoClose()
  nameWithType: ICinemaClientUtility.SetVideoClose()
  fullName: Funique.Cinema.ICinemaClientUtility.SetVideoClose()
  type: Method
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: SetVideoClose
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 177
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nClosing current media player <br />\n關閉播放\n"
  example: []
  syntax:
    content: void SetVideoClose()
    content.vb: Sub SetVideoClose
  overload: Funique.Cinema.ICinemaClientUtility.SetVideoClose*
- uid: Funique.Cinema.ICinemaClientUtility.SetFirstBuffer
  commentId: M:Funique.Cinema.ICinemaClientUtility.SetFirstBuffer
  id: SetFirstBuffer
  parent: Funique.Cinema.ICinemaClientUtility
  langs:
  - csharp
  - vb
  name: SetFirstBuffer()
  nameWithType: ICinemaClientUtility.SetFirstBuffer()
  fullName: Funique.Cinema.ICinemaClientUtility.SetFirstBuffer()
  type: Method
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: SetFirstBuffer
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 178
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  syntax:
    content: void SetFirstBuffer()
    content.vb: Sub SetFirstBuffer
  overload: Funique.Cinema.ICinemaClientUtility.SetFirstBuffer*
- uid: Funique.Cinema.ICinemaClientUtility.SwapBuffer
  commentId: M:Funique.Cinema.ICinemaClientUtility.SwapBuffer
  id: SwapBuffer
  parent: Funique.Cinema.ICinemaClientUtility
  langs:
  - csharp
  - vb
  name: SwapBuffer()
  nameWithType: ICinemaClientUtility.SwapBuffer()
  fullName: Funique.Cinema.ICinemaClientUtility.SwapBuffer()
  type: Method
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: SwapBuffer
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 179
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  syntax:
    content: bool SwapBuffer()
    return:
      type: System.Boolean
    content.vb: Function SwapBuffer As Boolean
  overload: Funique.Cinema.ICinemaClientUtility.SwapBuffer*
- uid: Funique.Cinema.ICinemaClientUtility.GetVideoTime(System.Boolean)
  commentId: M:Funique.Cinema.ICinemaClientUtility.GetVideoTime(System.Boolean)
  id: GetVideoTime(System.Boolean)
  parent: Funique.Cinema.ICinemaClientUtility
  langs:
  - csharp
  - vb
  name: GetVideoTime(Boolean)
  nameWithType: ICinemaClientUtility.GetVideoTime(Boolean)
  fullName: Funique.Cinema.ICinemaClientUtility.GetVideoTime(System.Boolean)
  type: Method
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: GetVideoTime
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 192
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nGet video current time <br />\n------------------------------------------------ <br />\n取得影片目前撥放時間\n"
  example: []
  syntax:
    content: float GetVideoTime(bool showMilliseconds = false)
    parameters:
    - id: showMilliseconds
      type: System.Boolean
      description: Use Millisecond
    return:
      type: System.Single
      description: ''
    content.vb: Function GetVideoTime(showMilliseconds As Boolean = False) As Single
  overload: Funique.Cinema.ICinemaClientUtility.GetVideoTime*
- uid: Funique.Cinema.ICinemaClientUtility.GetVideoTimeString(System.Boolean)
  commentId: M:Funique.Cinema.ICinemaClientUtility.GetVideoTimeString(System.Boolean)
  id: GetVideoTimeString(System.Boolean)
  parent: Funique.Cinema.ICinemaClientUtility
  langs:
  - csharp
  - vb
  name: GetVideoTimeString(Boolean)
  nameWithType: ICinemaClientUtility.GetVideoTimeString(Boolean)
  fullName: Funique.Cinema.ICinemaClientUtility.GetVideoTimeString(System.Boolean)
  type: Method
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: GetVideoTimeString
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 200
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nGet video current time <br />\n------------------------------------------------ <br />\n取得影片目前撥放時間\n"
  example: []
  syntax:
    content: string GetVideoTimeString(bool showMilliseconds = false)
    parameters:
    - id: showMilliseconds
      type: System.Boolean
      description: Use Millisecond
    return:
      type: System.String
      description: ''
    content.vb: Function GetVideoTimeString(showMilliseconds As Boolean = False) As String
  overload: Funique.Cinema.ICinemaClientUtility.GetVideoTimeString*
- uid: Funique.Cinema.ICinemaClientUtility.GetVideoDurationTime(System.Boolean)
  commentId: M:Funique.Cinema.ICinemaClientUtility.GetVideoDurationTime(System.Boolean)
  id: GetVideoDurationTime(System.Boolean)
  parent: Funique.Cinema.ICinemaClientUtility
  langs:
  - csharp
  - vb
  name: GetVideoDurationTime(Boolean)
  nameWithType: ICinemaClientUtility.GetVideoDurationTime(Boolean)
  fullName: Funique.Cinema.ICinemaClientUtility.GetVideoDurationTime(System.Boolean)
  type: Method
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: GetVideoDurationTime
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 208
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nGet video length <br />\n------------------------------------------------ <br />\n取得影片撥放總長\n"
  example: []
  syntax:
    content: float GetVideoDurationTime(bool showMilliseconds = false)
    parameters:
    - id: showMilliseconds
      type: System.Boolean
      description: Use Millisecond
    return:
      type: System.Single
      description: ''
    content.vb: Function GetVideoDurationTime(showMilliseconds As Boolean = False) As Single
  overload: Funique.Cinema.ICinemaClientUtility.GetVideoDurationTime*
- uid: Funique.Cinema.ICinemaClientUtility.GetVideoDurationTimeString(System.Boolean)
  commentId: M:Funique.Cinema.ICinemaClientUtility.GetVideoDurationTimeString(System.Boolean)
  id: GetVideoDurationTimeString(System.Boolean)
  parent: Funique.Cinema.ICinemaClientUtility
  langs:
  - csharp
  - vb
  name: GetVideoDurationTimeString(Boolean)
  nameWithType: ICinemaClientUtility.GetVideoDurationTimeString(Boolean)
  fullName: Funique.Cinema.ICinemaClientUtility.GetVideoDurationTimeString(System.Boolean)
  type: Method
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: GetVideoDurationTimeString
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 216
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nGet video length <br />\n------------------------------------------------ <br />\n取得影片撥放總長\n"
  example: []
  syntax:
    content: string GetVideoDurationTimeString(bool showMilliseconds = false)
    parameters:
    - id: showMilliseconds
      type: System.Boolean
      description: Use Millisecond
    return:
      type: System.String
      description: ''
    content.vb: Function GetVideoDurationTimeString(showMilliseconds As Boolean = False) As String
  overload: Funique.Cinema.ICinemaClientUtility.GetVideoDurationTimeString*
- uid: Funique.Cinema.ICinemaClientUtility.GetReadyImageName
  commentId: M:Funique.Cinema.ICinemaClientUtility.GetReadyImageName
  id: GetReadyImageName
  parent: Funique.Cinema.ICinemaClientUtility
  langs:
  - csharp
  - vb
  name: GetReadyImageName()
  nameWithType: ICinemaClientUtility.GetReadyImageName()
  fullName: Funique.Cinema.ICinemaClientUtility.GetReadyImageName()
  type: Method
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: GetReadyImageName
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 223
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nReady image name <br />\n------------------------------------------------ <br />\n準備圖片名稱\n"
  example: []
  syntax:
    content: string GetReadyImageName()
    return:
      type: System.String
      description: ''
    content.vb: Function GetReadyImageName As String
  overload: Funique.Cinema.ICinemaClientUtility.GetReadyImageName*
- uid: Funique.Cinema.ICinemaClientUtility.GetReadyVideoName
  commentId: M:Funique.Cinema.ICinemaClientUtility.GetReadyVideoName
  id: GetReadyVideoName
  parent: Funique.Cinema.ICinemaClientUtility
  langs:
  - csharp
  - vb
  name: GetReadyVideoName()
  nameWithType: ICinemaClientUtility.GetReadyVideoName()
  fullName: Funique.Cinema.ICinemaClientUtility.GetReadyVideoName()
  type: Method
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: GetReadyVideoName
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 230
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nReady video name <br />\n------------------------------------------------ <br />\n準備影片名稱\n"
  example: []
  syntax:
    content: string GetReadyVideoName()
    return:
      type: System.String
      description: ''
    content.vb: Function GetReadyVideoName As String
  overload: Funique.Cinema.ICinemaClientUtility.GetReadyVideoName*
- uid: Funique.Cinema.ICinemaClientUtility.ShowTexture(System.String)
  commentId: M:Funique.Cinema.ICinemaClientUtility.ShowTexture(System.String)
  id: ShowTexture(System.String)
  parent: Funique.Cinema.ICinemaClientUtility
  langs:
  - csharp
  - vb
  name: ShowTexture(String)
  nameWithType: ICinemaClientUtility.ShowTexture(String)
  fullName: Funique.Cinema.ICinemaClientUtility.ShowTexture(System.String)
  type: Method
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: ShowTexture
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 239
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\n設定 圖片\n"
  example: []
  syntax:
    content: bool ShowTexture(string imageName)
    parameters:
    - id: imageName
      type: System.String
      description: ''
    return:
      type: System.Boolean
    content.vb: Function ShowTexture(imageName As String) As Boolean
  overload: Funique.Cinema.ICinemaClientUtility.ShowTexture*
- uid: Funique.Cinema.ICinemaClientUtility.HeadsetReset
  commentId: M:Funique.Cinema.ICinemaClientUtility.HeadsetReset
  id: HeadsetReset
  parent: Funique.Cinema.ICinemaClientUtility
  langs:
  - csharp
  - vb
  name: HeadsetReset()
  nameWithType: ICinemaClientUtility.HeadsetReset()
  fullName: Funique.Cinema.ICinemaClientUtility.HeadsetReset()
  type: Method
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: HeadsetReset
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 243
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nReset headset position\n"
  example: []
  syntax:
    content: void HeadsetReset()
    content.vb: Sub HeadsetReset
  overload: Funique.Cinema.ICinemaClientUtility.HeadsetReset*
- uid: Funique.Cinema.ICinemaClientUtility.SwitchMediaPlayer(RenderHeads.Media.AVProVideo.MediaPlayer)
  commentId: M:Funique.Cinema.ICinemaClientUtility.SwitchMediaPlayer(RenderHeads.Media.AVProVideo.MediaPlayer)
  id: SwitchMediaPlayer(RenderHeads.Media.AVProVideo.MediaPlayer)
  parent: Funique.Cinema.ICinemaClientUtility
  langs:
  - csharp
  - vb
  name: SwitchMediaPlayer(MediaPlayer)
  nameWithType: ICinemaClientUtility.SwitchMediaPlayer(MediaPlayer)
  fullName: Funique.Cinema.ICinemaClientUtility.SwitchMediaPlayer(RenderHeads.Media.AVProVideo.MediaPlayer)
  type: Method
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: SwitchMediaPlayer
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 244
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  syntax:
    content: void SwitchMediaPlayer(MediaPlayer newMediaPlayer)
    parameters:
    - id: newMediaPlayer
      type: RenderHeads.Media.AVProVideo.MediaPlayer
    content.vb: Sub SwitchMediaPlayer(newMediaPlayer As MediaPlayer)
  overload: Funique.Cinema.ICinemaClientUtility.SwitchMediaPlayer*
- uid: Funique.Cinema.ICinemaClientUtility.DetectPlayerMode(System.String)
  commentId: M:Funique.Cinema.ICinemaClientUtility.DetectPlayerMode(System.String)
  id: DetectPlayerMode(System.String)
  parent: Funique.Cinema.ICinemaClientUtility
  langs:
  - csharp
  - vb
  name: DetectPlayerMode(String)
  nameWithType: ICinemaClientUtility.DetectPlayerMode(String)
  fullName: Funique.Cinema.ICinemaClientUtility.DetectPlayerMode(System.String)
  type: Method
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: DetectPlayerMode
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 250
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\n檢測撥放檔案的模式\n"
  example: []
  syntax:
    content: PlayerMode DetectPlayerMode(string playFileName)
    parameters:
    - id: playFileName
      type: System.String
      description: ''
    return:
      type: Funique.PlayerMode
      description: ''
    content.vb: Function DetectPlayerMode(playFileName As String) As PlayerMode
  overload: Funique.Cinema.ICinemaClientUtility.DetectPlayerMode*
- uid: Funique.Cinema.ICinemaClientUtility.GetMediaPath(System.String,System.Boolean)
  commentId: M:Funique.Cinema.ICinemaClientUtility.GetMediaPath(System.String,System.Boolean)
  id: GetMediaPath(System.String,System.Boolean)
  parent: Funique.Cinema.ICinemaClientUtility
  langs:
  - csharp
  - vb
  name: GetMediaPath(String, Boolean)
  nameWithType: ICinemaClientUtility.GetMediaPath(String, Boolean)
  fullName: Funique.Cinema.ICinemaClientUtility.GetMediaPath(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: Interface/ICinemaClientUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: GetMediaPath
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaClientUtility.cs
    startLine: 251
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  syntax:
    content: MediaPath GetMediaPath(string ready, bool url)
    parameters:
    - id: ready
      type: System.String
    - id: url
      type: System.Boolean
    return:
      type: RenderHeads.Media.AVProVideo.MediaPath
    content.vb: Function GetMediaPath(ready As String, url As Boolean) As MediaPath
  overload: Funique.Cinema.ICinemaClientUtility.GetMediaPath*
references:
- uid: Funique.Cinema
  commentId: N:Funique.Cinema
  name: Funique.Cinema
  nameWithType: Funique.Cinema
  fullName: Funique.Cinema
- uid: Funique.IModuleBase{Funique.Cinema.CinemaManagerClientData}.config
  commentId: P:Funique.IModuleBase{Funique.Cinema.CinemaManagerClientData}.config
  parent: Funique.IModuleBase{Funique.Cinema.CinemaManagerClientData}
  definition: Funique.IModuleBase`1.config
  name: config
  nameWithType: IModuleBase<CinemaManagerClientData>.config
  fullName: Funique.IModuleBase<Funique.Cinema.CinemaManagerClientData>.config
  nameWithType.vb: IModuleBase(Of CinemaManagerClientData).config
  fullName.vb: Funique.IModuleBase(Of Funique.Cinema.CinemaManagerClientData).config
- uid: Funique.IModuleBase`1.config
  commentId: P:Funique.IModuleBase`1.config
  name: config
  nameWithType: IModuleBase<T>.config
  fullName: Funique.IModuleBase<T>.config
  nameWithType.vb: IModuleBase(Of T).config
  fullName.vb: Funique.IModuleBase(Of T).config
- uid: Funique.IModuleBase{Funique.Cinema.CinemaManagerClientData}
  commentId: T:Funique.IModuleBase{Funique.Cinema.CinemaManagerClientData}
  parent: Funique
  definition: Funique.IModuleBase`1
  name: IModuleBase<CinemaManagerClientData>
  nameWithType: IModuleBase<CinemaManagerClientData>
  fullName: Funique.IModuleBase<Funique.Cinema.CinemaManagerClientData>
  nameWithType.vb: IModuleBase(Of CinemaManagerClientData)
  fullName.vb: Funique.IModuleBase(Of Funique.Cinema.CinemaManagerClientData)
  name.vb: IModuleBase(Of CinemaManagerClientData)
  spec.csharp:
  - uid: Funique.IModuleBase`1
    name: IModuleBase
    nameWithType: IModuleBase
    fullName: Funique.IModuleBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Funique.Cinema.CinemaManagerClientData
    name: CinemaManagerClientData
    nameWithType: CinemaManagerClientData
    fullName: Funique.Cinema.CinemaManagerClientData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Funique.IModuleBase`1
    name: IModuleBase
    nameWithType: IModuleBase
    fullName: Funique.IModuleBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Funique.Cinema.CinemaManagerClientData
    name: CinemaManagerClientData
    nameWithType: CinemaManagerClientData
    fullName: Funique.Cinema.CinemaManagerClientData
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.IModuleBase`1
  commentId: T:Funique.IModuleBase`1
  name: IModuleBase<T>
  nameWithType: IModuleBase<T>
  fullName: Funique.IModuleBase<T>
  nameWithType.vb: IModuleBase(Of T)
  fullName.vb: Funique.IModuleBase(Of T)
  name.vb: IModuleBase(Of T)
  spec.csharp:
  - uid: Funique.IModuleBase`1
    name: IModuleBase
    nameWithType: IModuleBase
    fullName: Funique.IModuleBase
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Funique.IModuleBase`1
    name: IModuleBase
    nameWithType: IModuleBase
    fullName: Funique.IModuleBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique
  commentId: N:Funique
  name: Funique
  nameWithType: Funique
  fullName: Funique
- uid: Funique.Cinema.ICinemaClientUtility.CurrentMediaPlayer*
  commentId: Overload:Funique.Cinema.ICinemaClientUtility.CurrentMediaPlayer
  name: CurrentMediaPlayer
  nameWithType: ICinemaClientUtility.CurrentMediaPlayer
  fullName: Funique.Cinema.ICinemaClientUtility.CurrentMediaPlayer
- uid: RenderHeads.Media.AVProVideo.MediaPlayer
  commentId: T:RenderHeads.Media.AVProVideo.MediaPlayer
  parent: RenderHeads.Media.AVProVideo
  name: MediaPlayer
  nameWithType: MediaPlayer
  fullName: RenderHeads.Media.AVProVideo.MediaPlayer
- uid: RenderHeads.Media.AVProVideo
  commentId: N:RenderHeads.Media.AVProVideo
  name: RenderHeads.Media.AVProVideo
  nameWithType: RenderHeads.Media.AVProVideo
  fullName: RenderHeads.Media.AVProVideo
- uid: Funique.Cinema.ICinemaClientUtility.CurrentMediaPlayer_Swap*
  commentId: Overload:Funique.Cinema.ICinemaClientUtility.CurrentMediaPlayer_Swap
  name: CurrentMediaPlayer_Swap
  nameWithType: ICinemaClientUtility.CurrentMediaPlayer_Swap
  fullName: Funique.Cinema.ICinemaClientUtility.CurrentMediaPlayer_Swap
- uid: Funique.Cinema.ICinemaClientUtility.CurrentMediaPlayer_Display*
  commentId: Overload:Funique.Cinema.ICinemaClientUtility.CurrentMediaPlayer_Display
  name: CurrentMediaPlayer_Display
  nameWithType: ICinemaClientUtility.CurrentMediaPlayer_Display
  fullName: Funique.Cinema.ICinemaClientUtility.CurrentMediaPlayer_Display
- uid: Funique.Cinema.ICinemaClientUtility.CurrentMediaPlayer_Another*
  commentId: Overload:Funique.Cinema.ICinemaClientUtility.CurrentMediaPlayer_Another
  name: CurrentMediaPlayer_Another
  nameWithType: ICinemaClientUtility.CurrentMediaPlayer_Another
  fullName: Funique.Cinema.ICinemaClientUtility.CurrentMediaPlayer_Another
- uid: Funique.Cinema.ICinemaClientUtility.Support_Swap*
  commentId: Overload:Funique.Cinema.ICinemaClientUtility.Support_Swap
  name: Support_Swap
  nameWithType: ICinemaClientUtility.Support_Swap
  fullName: Funique.Cinema.ICinemaClientUtility.Support_Swap
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Funique.Cinema.ICinemaClientUtility.Current_Display*
  commentId: Overload:Funique.Cinema.ICinemaClientUtility.Current_Display
  name: Current_Display
  nameWithType: ICinemaClientUtility.Current_Display
  fullName: Funique.Cinema.ICinemaClientUtility.Current_Display
- uid: Funique.Cinema.ICinemaClientUtility.CurMedia*
  commentId: Overload:Funique.Cinema.ICinemaClientUtility.CurMedia
  name: CurMedia
  nameWithType: ICinemaClientUtility.CurMedia
  fullName: Funique.Cinema.ICinemaClientUtility.CurMedia
- uid: Funique.InfoBase
  commentId: T:Funique.InfoBase
  parent: Funique
  name: InfoBase
  nameWithType: InfoBase
  fullName: Funique.InfoBase
- uid: Funique.Cinema.ICinemaClientUtility.readyPlayFile*
  commentId: Overload:Funique.Cinema.ICinemaClientUtility.readyPlayFile
  name: readyPlayFile
  nameWithType: ICinemaClientUtility.readyPlayFile
  fullName: Funique.Cinema.ICinemaClientUtility.readyPlayFile
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Funique.Cinema.ICinemaClientUtility.SphereOBJ*
  commentId: Overload:Funique.Cinema.ICinemaClientUtility.SphereOBJ
  name: SphereOBJ
  nameWithType: ICinemaClientUtility.SphereOBJ
  fullName: Funique.Cinema.ICinemaClientUtility.SphereOBJ
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Funique.Cinema.ICinemaClientUtility.MasterPlayerState*
  commentId: Overload:Funique.Cinema.ICinemaClientUtility.MasterPlayerState
  name: MasterPlayerState
  nameWithType: ICinemaClientUtility.MasterPlayerState
  fullName: Funique.Cinema.ICinemaClientUtility.MasterPlayerState
- uid: Funique.ClientInMasterPlayerState
  commentId: T:Funique.ClientInMasterPlayerState
  parent: Funique
  name: ClientInMasterPlayerState
  nameWithType: ClientInMasterPlayerState
  fullName: Funique.ClientInMasterPlayerState
- uid: Funique.Cinema.ICinemaClientUtility.OnMediaPlay*
  commentId: Overload:Funique.Cinema.ICinemaClientUtility.OnMediaPlay
  name: OnMediaPlay
  nameWithType: ICinemaClientUtility.OnMediaPlay
  fullName: Funique.Cinema.ICinemaClientUtility.OnMediaPlay
- uid: UnityEngine.Events.UnityEvent{System.String}
  commentId: T:UnityEngine.Events.UnityEvent{System.String}
  parent: UnityEngine.Events
  definition: UnityEngine.Events.UnityEvent`1
  name: UnityEvent<String>
  nameWithType: UnityEvent<String>
  fullName: UnityEngine.Events.UnityEvent<System.String>
  nameWithType.vb: UnityEvent(Of String)
  fullName.vb: UnityEngine.Events.UnityEvent(Of System.String)
  name.vb: UnityEvent(Of String)
  spec.csharp:
  - uid: UnityEngine.Events.UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEngine.Events.UnityEvent
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: UnityEngine.Events.UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEngine.Events.UnityEvent
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Events.UnityEvent`1
  commentId: T:UnityEngine.Events.UnityEvent`1
  isExternal: true
  name: UnityEvent<T0>
  nameWithType: UnityEvent<T0>
  fullName: UnityEngine.Events.UnityEvent<T0>
  nameWithType.vb: UnityEvent(Of T0)
  fullName.vb: UnityEngine.Events.UnityEvent(Of T0)
  name.vb: UnityEvent(Of T0)
  spec.csharp:
  - uid: UnityEngine.Events.UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEngine.Events.UnityEvent
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T0
    nameWithType: T0
    fullName: T0
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: UnityEngine.Events.UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEngine.Events.UnityEvent
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T0
    nameWithType: T0
    fullName: T0
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Events
  commentId: N:UnityEngine.Events
  isExternal: true
  name: UnityEngine.Events
  nameWithType: UnityEngine.Events
  fullName: UnityEngine.Events
- uid: Funique.Cinema.ICinemaClientUtility.OnMediaPlayPrepare*
  commentId: Overload:Funique.Cinema.ICinemaClientUtility.OnMediaPlayPrepare
  name: OnMediaPlayPrepare
  nameWithType: ICinemaClientUtility.OnMediaPlayPrepare
  fullName: Funique.Cinema.ICinemaClientUtility.OnMediaPlayPrepare
- uid: Funique.Cinema.ICinemaClientUtility.OnSwitchMediaPlayer*
  commentId: Overload:Funique.Cinema.ICinemaClientUtility.OnSwitchMediaPlayer
  name: OnSwitchMediaPlayer
  nameWithType: ICinemaClientUtility.OnSwitchMediaPlayer
  fullName: Funique.Cinema.ICinemaClientUtility.OnSwitchMediaPlayer
- uid: UnityEngine.Events.UnityEvent{RenderHeads.Media.AVProVideo.MediaPlayer}
  commentId: T:UnityEngine.Events.UnityEvent{RenderHeads.Media.AVProVideo.MediaPlayer}
  parent: UnityEngine.Events
  definition: UnityEngine.Events.UnityEvent`1
  name: UnityEvent<MediaPlayer>
  nameWithType: UnityEvent<MediaPlayer>
  fullName: UnityEngine.Events.UnityEvent<RenderHeads.Media.AVProVideo.MediaPlayer>
  nameWithType.vb: UnityEvent(Of MediaPlayer)
  fullName.vb: UnityEngine.Events.UnityEvent(Of RenderHeads.Media.AVProVideo.MediaPlayer)
  name.vb: UnityEvent(Of MediaPlayer)
  spec.csharp:
  - uid: UnityEngine.Events.UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEngine.Events.UnityEvent
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RenderHeads.Media.AVProVideo.MediaPlayer
    name: MediaPlayer
    nameWithType: MediaPlayer
    fullName: RenderHeads.Media.AVProVideo.MediaPlayer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: UnityEngine.Events.UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEngine.Events.UnityEvent
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RenderHeads.Media.AVProVideo.MediaPlayer
    name: MediaPlayer
    nameWithType: MediaPlayer
    fullName: RenderHeads.Media.AVProVideo.MediaPlayer
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Cinema.ICinemaClientUtility.OnWaitroomStateChange*
  commentId: Overload:Funique.Cinema.ICinemaClientUtility.OnWaitroomStateChange
  name: OnWaitroomStateChange
  nameWithType: ICinemaClientUtility.OnWaitroomStateChange
  fullName: Funique.Cinema.ICinemaClientUtility.OnWaitroomStateChange
- uid: UnityEngine.Events.UnityEvent{System.Boolean}
  commentId: T:UnityEngine.Events.UnityEvent{System.Boolean}
  parent: UnityEngine.Events
  definition: UnityEngine.Events.UnityEvent`1
  name: UnityEvent<Boolean>
  nameWithType: UnityEvent<Boolean>
  fullName: UnityEngine.Events.UnityEvent<System.Boolean>
  nameWithType.vb: UnityEvent(Of Boolean)
  fullName.vb: UnityEngine.Events.UnityEvent(Of System.Boolean)
  name.vb: UnityEvent(Of Boolean)
  spec.csharp:
  - uid: UnityEngine.Events.UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEngine.Events.UnityEvent
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: UnityEngine.Events.UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEngine.Events.UnityEvent
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Cinema.ICinemaClientUtility.SelectMediaPlayerInstance*
  commentId: Overload:Funique.Cinema.ICinemaClientUtility.SelectMediaPlayerInstance
  name: SelectMediaPlayerInstance
  nameWithType: ICinemaClientUtility.SelectMediaPlayerInstance
  fullName: Funique.Cinema.ICinemaClientUtility.SelectMediaPlayerInstance
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Funique.Cinema.ICinemaClientUtility.SetVideoSeek*
  commentId: Overload:Funique.Cinema.ICinemaClientUtility.SetVideoSeek
  name: SetVideoSeek
  nameWithType: ICinemaClientUtility.SetVideoSeek
  fullName: Funique.Cinema.ICinemaClientUtility.SetVideoSeek
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Funique.Cinema.ICinemaClientUtility.SetWaitRoom*
  commentId: Overload:Funique.Cinema.ICinemaClientUtility.SetWaitRoom
  name: SetWaitRoom
  nameWithType: ICinemaClientUtility.SetWaitRoom
  fullName: Funique.Cinema.ICinemaClientUtility.SetWaitRoom
- uid: Funique.Cinema.ICinemaClientUtility.SetReadyPlayFile*
  commentId: Overload:Funique.Cinema.ICinemaClientUtility.SetReadyPlayFile
  name: SetReadyPlayFile
  nameWithType: ICinemaClientUtility.SetReadyPlayFile
  fullName: Funique.Cinema.ICinemaClientUtility.SetReadyPlayFile
- uid: Funique.Cinema.ICinemaClientUtility.SetVideoPlay*
  commentId: Overload:Funique.Cinema.ICinemaClientUtility.SetVideoPlay
  name: SetVideoPlay
  nameWithType: ICinemaClientUtility.SetVideoPlay
  fullName: Funique.Cinema.ICinemaClientUtility.SetVideoPlay
- uid: Funique.Cinema.ICinemaClientUtility.SetVideoPause*
  commentId: Overload:Funique.Cinema.ICinemaClientUtility.SetVideoPause
  name: SetVideoPause
  nameWithType: ICinemaClientUtility.SetVideoPause
  fullName: Funique.Cinema.ICinemaClientUtility.SetVideoPause
- uid: Funique.Cinema.ICinemaClientUtility.SetVideoLoop*
  commentId: Overload:Funique.Cinema.ICinemaClientUtility.SetVideoLoop
  name: SetVideoLoop
  nameWithType: ICinemaClientUtility.SetVideoLoop
  fullName: Funique.Cinema.ICinemaClientUtility.SetVideoLoop
- uid: Funique.Cinema.ICinemaClientUtility.SetStereoMode*
  commentId: Overload:Funique.Cinema.ICinemaClientUtility.SetStereoMode
  name: SetStereoMode
  nameWithType: ICinemaClientUtility.SetStereoMode
  fullName: Funique.Cinema.ICinemaClientUtility.SetStereoMode
- uid: Funique.StereoMode
  commentId: T:Funique.StereoMode
  parent: Funique
  name: StereoMode
  nameWithType: StereoMode
  fullName: Funique.StereoMode
- uid: Funique.Cinema.ICinemaClientUtility.SetReplay*
  commentId: Overload:Funique.Cinema.ICinemaClientUtility.SetReplay
  name: SetReplay
  nameWithType: ICinemaClientUtility.SetReplay
  fullName: Funique.Cinema.ICinemaClientUtility.SetReplay
- uid: Funique.ReplayState
  commentId: T:Funique.ReplayState
  parent: Funique
  name: ReplayState
  nameWithType: ReplayState
  fullName: Funique.ReplayState
- uid: Funique.Cinema.ICinemaClientUtility.SetSubtitle*
  commentId: Overload:Funique.Cinema.ICinemaClientUtility.SetSubtitle
  name: SetSubtitle
  nameWithType: ICinemaClientUtility.SetSubtitle
  fullName: Funique.Cinema.ICinemaClientUtility.SetSubtitle
- uid: Funique.SubtitleMode
  commentId: T:Funique.SubtitleMode
  parent: Funique
  name: SubtitleMode
  nameWithType: SubtitleMode
  fullName: Funique.SubtitleMode
- uid: Funique.Cinema.ICinemaClientUtility.SetVideoStop*
  commentId: Overload:Funique.Cinema.ICinemaClientUtility.SetVideoStop
  name: SetVideoStop
  nameWithType: ICinemaClientUtility.SetVideoStop
  fullName: Funique.Cinema.ICinemaClientUtility.SetVideoStop
- uid: Funique.Cinema.ICinemaClientUtility.SetVideoClose*
  commentId: Overload:Funique.Cinema.ICinemaClientUtility.SetVideoClose
  name: SetVideoClose
  nameWithType: ICinemaClientUtility.SetVideoClose
  fullName: Funique.Cinema.ICinemaClientUtility.SetVideoClose
- uid: Funique.Cinema.ICinemaClientUtility.SetFirstBuffer*
  commentId: Overload:Funique.Cinema.ICinemaClientUtility.SetFirstBuffer
  name: SetFirstBuffer
  nameWithType: ICinemaClientUtility.SetFirstBuffer
  fullName: Funique.Cinema.ICinemaClientUtility.SetFirstBuffer
- uid: Funique.Cinema.ICinemaClientUtility.SwapBuffer*
  commentId: Overload:Funique.Cinema.ICinemaClientUtility.SwapBuffer
  name: SwapBuffer
  nameWithType: ICinemaClientUtility.SwapBuffer
  fullName: Funique.Cinema.ICinemaClientUtility.SwapBuffer
- uid: Funique.Cinema.ICinemaClientUtility.GetVideoTime*
  commentId: Overload:Funique.Cinema.ICinemaClientUtility.GetVideoTime
  name: GetVideoTime
  nameWithType: ICinemaClientUtility.GetVideoTime
  fullName: Funique.Cinema.ICinemaClientUtility.GetVideoTime
- uid: Funique.Cinema.ICinemaClientUtility.GetVideoTimeString*
  commentId: Overload:Funique.Cinema.ICinemaClientUtility.GetVideoTimeString
  name: GetVideoTimeString
  nameWithType: ICinemaClientUtility.GetVideoTimeString
  fullName: Funique.Cinema.ICinemaClientUtility.GetVideoTimeString
- uid: Funique.Cinema.ICinemaClientUtility.GetVideoDurationTime*
  commentId: Overload:Funique.Cinema.ICinemaClientUtility.GetVideoDurationTime
  name: GetVideoDurationTime
  nameWithType: ICinemaClientUtility.GetVideoDurationTime
  fullName: Funique.Cinema.ICinemaClientUtility.GetVideoDurationTime
- uid: Funique.Cinema.ICinemaClientUtility.GetVideoDurationTimeString*
  commentId: Overload:Funique.Cinema.ICinemaClientUtility.GetVideoDurationTimeString
  name: GetVideoDurationTimeString
  nameWithType: ICinemaClientUtility.GetVideoDurationTimeString
  fullName: Funique.Cinema.ICinemaClientUtility.GetVideoDurationTimeString
- uid: Funique.Cinema.ICinemaClientUtility.GetReadyImageName*
  commentId: Overload:Funique.Cinema.ICinemaClientUtility.GetReadyImageName
  name: GetReadyImageName
  nameWithType: ICinemaClientUtility.GetReadyImageName
  fullName: Funique.Cinema.ICinemaClientUtility.GetReadyImageName
- uid: Funique.Cinema.ICinemaClientUtility.GetReadyVideoName*
  commentId: Overload:Funique.Cinema.ICinemaClientUtility.GetReadyVideoName
  name: GetReadyVideoName
  nameWithType: ICinemaClientUtility.GetReadyVideoName
  fullName: Funique.Cinema.ICinemaClientUtility.GetReadyVideoName
- uid: Funique.Cinema.ICinemaClientUtility.ShowTexture*
  commentId: Overload:Funique.Cinema.ICinemaClientUtility.ShowTexture
  name: ShowTexture
  nameWithType: ICinemaClientUtility.ShowTexture
  fullName: Funique.Cinema.ICinemaClientUtility.ShowTexture
- uid: Funique.Cinema.ICinemaClientUtility.HeadsetReset*
  commentId: Overload:Funique.Cinema.ICinemaClientUtility.HeadsetReset
  name: HeadsetReset
  nameWithType: ICinemaClientUtility.HeadsetReset
  fullName: Funique.Cinema.ICinemaClientUtility.HeadsetReset
- uid: Funique.Cinema.ICinemaClientUtility.SwitchMediaPlayer*
  commentId: Overload:Funique.Cinema.ICinemaClientUtility.SwitchMediaPlayer
  name: SwitchMediaPlayer
  nameWithType: ICinemaClientUtility.SwitchMediaPlayer
  fullName: Funique.Cinema.ICinemaClientUtility.SwitchMediaPlayer
- uid: Funique.Cinema.ICinemaClientUtility.DetectPlayerMode*
  commentId: Overload:Funique.Cinema.ICinemaClientUtility.DetectPlayerMode
  name: DetectPlayerMode
  nameWithType: ICinemaClientUtility.DetectPlayerMode
  fullName: Funique.Cinema.ICinemaClientUtility.DetectPlayerMode
- uid: Funique.PlayerMode
  commentId: T:Funique.PlayerMode
  parent: Funique
  name: PlayerMode
  nameWithType: PlayerMode
  fullName: Funique.PlayerMode
- uid: Funique.Cinema.ICinemaClientUtility.GetMediaPath*
  commentId: Overload:Funique.Cinema.ICinemaClientUtility.GetMediaPath
  name: GetMediaPath
  nameWithType: ICinemaClientUtility.GetMediaPath
  fullName: Funique.Cinema.ICinemaClientUtility.GetMediaPath
- uid: RenderHeads.Media.AVProVideo.MediaPath
  commentId: T:RenderHeads.Media.AVProVideo.MediaPath
  parent: RenderHeads.Media.AVProVideo
  name: MediaPath
  nameWithType: MediaPath
  fullName: RenderHeads.Media.AVProVideo.MediaPath
