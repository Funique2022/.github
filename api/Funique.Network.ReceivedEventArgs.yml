### YamlMime:ManagedReference
items:
- uid: Funique.Network.ReceivedEventArgs
  commentId: T:Funique.Network.ReceivedEventArgs
  id: ReceivedEventArgs
  parent: Funique.Network
  children:
  - Funique.Network.ReceivedEventArgs.#ctor(LiteNetLib.NetPeer,System.Byte[])
  - Funique.Network.ReceivedEventArgs.data
  - Funique.Network.ReceivedEventArgs.peer
  langs:
  - csharp
  - vb
  name: ReceivedEventArgs
  nameWithType: ReceivedEventArgs
  fullName: Funique.Network.ReceivedEventArgs
  type: Class
  source:
    remote:
      path: EventArgs/ReceivedEventArgs.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: ReceivedEventArgs
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/EventArgs/ReceivedEventArgs.cs
    startLine: 4
  assemblies:
  - Funique.Network
  namespace: Funique.Network
  syntax:
    content: public class ReceivedEventArgs
    content.vb: Public Class ReceivedEventArgs
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Funique.Network.ReceivedEventArgs.#ctor(LiteNetLib.NetPeer,System.Byte[])
  commentId: M:Funique.Network.ReceivedEventArgs.#ctor(LiteNetLib.NetPeer,System.Byte[])
  id: '#ctor(LiteNetLib.NetPeer,System.Byte[])'
  parent: Funique.Network.ReceivedEventArgs
  langs:
  - csharp
  - vb
  name: ReceivedEventArgs(NetPeer, Byte[])
  nameWithType: ReceivedEventArgs.ReceivedEventArgs(NetPeer, Byte[])
  fullName: Funique.Network.ReceivedEventArgs.ReceivedEventArgs(LiteNetLib.NetPeer, System.Byte[])
  type: Constructor
  source:
    remote:
      path: EventArgs/ReceivedEventArgs.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: .ctor
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/EventArgs/ReceivedEventArgs.cs
    startLine: 6
  assemblies:
  - Funique.Network
  namespace: Funique.Network
  syntax:
    content: public ReceivedEventArgs(NetPeer peer, byte[] data)
    parameters:
    - id: peer
      type: LiteNetLib.NetPeer
    - id: data
      type: System.Byte[]
    content.vb: Public Sub New(peer As NetPeer, data As Byte())
  overload: Funique.Network.ReceivedEventArgs.#ctor*
  nameWithType.vb: ReceivedEventArgs.ReceivedEventArgs(NetPeer, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Funique.Network.ReceivedEventArgs.ReceivedEventArgs(LiteNetLib.NetPeer, System.Byte())
  name.vb: ReceivedEventArgs(NetPeer, Byte())
- uid: Funique.Network.ReceivedEventArgs.peer
  commentId: P:Funique.Network.ReceivedEventArgs.peer
  id: peer
  parent: Funique.Network.ReceivedEventArgs
  langs:
  - csharp
  - vb
  name: peer
  nameWithType: ReceivedEventArgs.peer
  fullName: Funique.Network.ReceivedEventArgs.peer
  type: Property
  source:
    remote:
      path: EventArgs/ReceivedEventArgs.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: peer
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/EventArgs/ReceivedEventArgs.cs
    startLine: 12
  assemblies:
  - Funique.Network
  namespace: Funique.Network
  syntax:
    content: public NetPeer peer { get; }
    parameters: []
    return:
      type: LiteNetLib.NetPeer
    content.vb: Public ReadOnly Property peer As NetPeer
  overload: Funique.Network.ReceivedEventArgs.peer*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Funique.Network.ReceivedEventArgs.data
  commentId: P:Funique.Network.ReceivedEventArgs.data
  id: data
  parent: Funique.Network.ReceivedEventArgs
  langs:
  - csharp
  - vb
  name: data
  nameWithType: ReceivedEventArgs.data
  fullName: Funique.Network.ReceivedEventArgs.data
  type: Property
  source:
    remote:
      path: EventArgs/ReceivedEventArgs.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: data
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/EventArgs/ReceivedEventArgs.cs
    startLine: 13
  assemblies:
  - Funique.Network
  namespace: Funique.Network
  syntax:
    content: public byte[] data { get; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public ReadOnly Property data As Byte()
  overload: Funique.Network.ReceivedEventArgs.data*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Funique.Network
  commentId: N:Funique.Network
  name: Funique.Network
  nameWithType: Funique.Network
  fullName: Funique.Network
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Funique.Network.ReceivedEventArgs.#ctor*
  commentId: Overload:Funique.Network.ReceivedEventArgs.#ctor
  name: ReceivedEventArgs
  nameWithType: ReceivedEventArgs.ReceivedEventArgs
  fullName: Funique.Network.ReceivedEventArgs.ReceivedEventArgs
- uid: LiteNetLib.NetPeer
  commentId: T:LiteNetLib.NetPeer
  parent: LiteNetLib
  isExternal: true
  name: NetPeer
  nameWithType: NetPeer
  fullName: LiteNetLib.NetPeer
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: LiteNetLib
  commentId: N:LiteNetLib
  isExternal: true
  name: LiteNetLib
  nameWithType: LiteNetLib
  fullName: LiteNetLib
- uid: Funique.Network.ReceivedEventArgs.peer*
  commentId: Overload:Funique.Network.ReceivedEventArgs.peer
  name: peer
  nameWithType: ReceivedEventArgs.peer
  fullName: Funique.Network.ReceivedEventArgs.peer
- uid: Funique.Network.ReceivedEventArgs.data*
  commentId: Overload:Funique.Network.ReceivedEventArgs.data
  name: data
  nameWithType: ReceivedEventArgs.data
  fullName: Funique.Network.ReceivedEventArgs.data
