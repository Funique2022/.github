### YamlMime:ManagedReference
items:
- uid: Funique.Network.INetworkEvent
  commentId: T:Funique.Network.INetworkEvent
  id: INetworkEvent
  parent: Funique.Network
  children:
  - Funique.Network.INetworkEvent.OnConnected
  - Funique.Network.INetworkEvent.OnDisconnected
  - Funique.Network.INetworkEvent.OnError
  - Funique.Network.INetworkEvent.OnLatency
  - Funique.Network.INetworkEvent.OnReceived
  langs:
  - csharp
  - vb
  name: INetworkEvent
  nameWithType: INetworkEvent
  fullName: Funique.Network.INetworkEvent
  type: Interface
  source:
    remote:
      path: Interface/INetworkEvent.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: INetworkEvent
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/Interface/INetworkEvent.cs
    startLine: 9
  assemblies:
  - Funique.Network
  namespace: Funique.Network
  summary: "\nNetwork features callback events <br />\n------------------------------------------------ <br />\n網路元件回傳事件\n"
  example: []
  syntax:
    content: public interface INetworkEvent
    content.vb: Public Interface INetworkEvent
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Funique.Network.INetworkEvent.OnConnected
  commentId: E:Funique.Network.INetworkEvent.OnConnected
  id: OnConnected
  parent: Funique.Network.INetworkEvent
  langs:
  - csharp
  - vb
  name: OnConnected
  nameWithType: INetworkEvent.OnConnected
  fullName: Funique.Network.INetworkEvent.OnConnected
  type: Event
  source:
    remote:
      path: Interface/INetworkEvent.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: OnConnected
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/Interface/INetworkEvent.cs
    startLine: 16
  assemblies:
  - Funique.Network
  namespace: Funique.Network
  summary: "\nConnection successfully created <br />\n------------------------------------------------ <br />\n連線事件\n"
  example: []
  syntax:
    content: event EventHandler<PeerEventArgs> OnConnected
    return:
      type: System.EventHandler{Funique.Network.PeerEventArgs}
    content.vb: Event OnConnected As EventHandler(Of PeerEventArgs)
- uid: Funique.Network.INetworkEvent.OnDisconnected
  commentId: E:Funique.Network.INetworkEvent.OnDisconnected
  id: OnDisconnected
  parent: Funique.Network.INetworkEvent
  langs:
  - csharp
  - vb
  name: OnDisconnected
  nameWithType: INetworkEvent.OnDisconnected
  fullName: Funique.Network.INetworkEvent.OnDisconnected
  type: Event
  source:
    remote:
      path: Interface/INetworkEvent.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: OnDisconnected
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/Interface/INetworkEvent.cs
    startLine: 22
  assemblies:
  - Funique.Network
  namespace: Funique.Network
  summary: "\nConnection has been destroy <br />\n------------------------------------------------ <br />\n斷線事件\n"
  example: []
  syntax:
    content: event EventHandler<DisconnectEventArgs> OnDisconnected
    return:
      type: System.EventHandler{Funique.Network.DisconnectEventArgs}
    content.vb: Event OnDisconnected As EventHandler(Of DisconnectEventArgs)
- uid: Funique.Network.INetworkEvent.OnLatency
  commentId: E:Funique.Network.INetworkEvent.OnLatency
  id: OnLatency
  parent: Funique.Network.INetworkEvent
  langs:
  - csharp
  - vb
  name: OnLatency
  nameWithType: INetworkEvent.OnLatency
  fullName: Funique.Network.INetworkEvent.OnLatency
  type: Event
  source:
    remote:
      path: Interface/INetworkEvent.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: OnLatency
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/Interface/INetworkEvent.cs
    startLine: 28
  assemblies:
  - Funique.Network
  namespace: Funique.Network
  summary: "\nLatency update feedback <br />\n------------------------------------------------ <br />\n延遲回傳\n"
  example: []
  syntax:
    content: event EventHandler<LatencyEventArgs> OnLatency
    return:
      type: System.EventHandler{Funique.Network.LatencyEventArgs}
    content.vb: Event OnLatency As EventHandler(Of LatencyEventArgs)
- uid: Funique.Network.INetworkEvent.OnError
  commentId: E:Funique.Network.INetworkEvent.OnError
  id: OnError
  parent: Funique.Network.INetworkEvent
  langs:
  - csharp
  - vb
  name: OnError
  nameWithType: INetworkEvent.OnError
  fullName: Funique.Network.INetworkEvent.OnError
  type: Event
  source:
    remote:
      path: Interface/INetworkEvent.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: OnError
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/Interface/INetworkEvent.cs
    startLine: 34
  assemblies:
  - Funique.Network
  namespace: Funique.Network
  summary: "\nConnection error feedback <br />\n------------------------------------------------ <br />\n錯誤回傳\n"
  example: []
  syntax:
    content: event EventHandler<ErrorEventArgs> OnError
    return:
      type: System.EventHandler{Funique.Network.ErrorEventArgs}
    content.vb: Event OnError As EventHandler(Of ErrorEventArgs)
- uid: Funique.Network.INetworkEvent.OnReceived
  commentId: E:Funique.Network.INetworkEvent.OnReceived
  id: OnReceived
  parent: Funique.Network.INetworkEvent
  langs:
  - csharp
  - vb
  name: OnReceived
  nameWithType: INetworkEvent.OnReceived
  fullName: Funique.Network.INetworkEvent.OnReceived
  type: Event
  source:
    remote:
      path: Interface/INetworkEvent.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: OnReceived
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/Interface/INetworkEvent.cs
    startLine: 40
  assemblies:
  - Funique.Network
  namespace: Funique.Network
  summary: "\nData received feedback <br />\n------------------------------------------------ <br />\n資料接收回傳\n"
  example: []
  syntax:
    content: event EventHandler<ReceivedEventArgs> OnReceived
    return:
      type: System.EventHandler{Funique.Network.ReceivedEventArgs}
    content.vb: Event OnReceived As EventHandler(Of ReceivedEventArgs)
references:
- uid: Funique.Network
  commentId: N:Funique.Network
  name: Funique.Network
  nameWithType: Funique.Network
  fullName: Funique.Network
- uid: System.EventHandler{Funique.Network.PeerEventArgs}
  commentId: T:System.EventHandler{Funique.Network.PeerEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<PeerEventArgs>
  nameWithType: EventHandler<PeerEventArgs>
  fullName: System.EventHandler<Funique.Network.PeerEventArgs>
  nameWithType.vb: EventHandler(Of PeerEventArgs)
  fullName.vb: System.EventHandler(Of Funique.Network.PeerEventArgs)
  name.vb: EventHandler(Of PeerEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Funique.Network.PeerEventArgs
    name: PeerEventArgs
    nameWithType: PeerEventArgs
    fullName: Funique.Network.PeerEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Funique.Network.PeerEventArgs
    name: PeerEventArgs
    nameWithType: PeerEventArgs
    fullName: Funique.Network.PeerEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.EventHandler{Funique.Network.DisconnectEventArgs}
  commentId: T:System.EventHandler{Funique.Network.DisconnectEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<DisconnectEventArgs>
  nameWithType: EventHandler<DisconnectEventArgs>
  fullName: System.EventHandler<Funique.Network.DisconnectEventArgs>
  nameWithType.vb: EventHandler(Of DisconnectEventArgs)
  fullName.vb: System.EventHandler(Of Funique.Network.DisconnectEventArgs)
  name.vb: EventHandler(Of DisconnectEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Funique.Network.DisconnectEventArgs
    name: DisconnectEventArgs
    nameWithType: DisconnectEventArgs
    fullName: Funique.Network.DisconnectEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Funique.Network.DisconnectEventArgs
    name: DisconnectEventArgs
    nameWithType: DisconnectEventArgs
    fullName: Funique.Network.DisconnectEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{Funique.Network.LatencyEventArgs}
  commentId: T:System.EventHandler{Funique.Network.LatencyEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<LatencyEventArgs>
  nameWithType: EventHandler<LatencyEventArgs>
  fullName: System.EventHandler<Funique.Network.LatencyEventArgs>
  nameWithType.vb: EventHandler(Of LatencyEventArgs)
  fullName.vb: System.EventHandler(Of Funique.Network.LatencyEventArgs)
  name.vb: EventHandler(Of LatencyEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Funique.Network.LatencyEventArgs
    name: LatencyEventArgs
    nameWithType: LatencyEventArgs
    fullName: Funique.Network.LatencyEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Funique.Network.LatencyEventArgs
    name: LatencyEventArgs
    nameWithType: LatencyEventArgs
    fullName: Funique.Network.LatencyEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{Funique.Network.ErrorEventArgs}
  commentId: T:System.EventHandler{Funique.Network.ErrorEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ErrorEventArgs>
  nameWithType: EventHandler<ErrorEventArgs>
  fullName: System.EventHandler<Funique.Network.ErrorEventArgs>
  nameWithType.vb: EventHandler(Of ErrorEventArgs)
  fullName.vb: System.EventHandler(Of Funique.Network.ErrorEventArgs)
  name.vb: EventHandler(Of ErrorEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Funique.Network.ErrorEventArgs
    name: ErrorEventArgs
    nameWithType: ErrorEventArgs
    fullName: Funique.Network.ErrorEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Funique.Network.ErrorEventArgs
    name: ErrorEventArgs
    nameWithType: ErrorEventArgs
    fullName: Funique.Network.ErrorEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{Funique.Network.ReceivedEventArgs}
  commentId: T:System.EventHandler{Funique.Network.ReceivedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ReceivedEventArgs>
  nameWithType: EventHandler<ReceivedEventArgs>
  fullName: System.EventHandler<Funique.Network.ReceivedEventArgs>
  nameWithType.vb: EventHandler(Of ReceivedEventArgs)
  fullName.vb: System.EventHandler(Of Funique.Network.ReceivedEventArgs)
  name.vb: EventHandler(Of ReceivedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Funique.Network.ReceivedEventArgs
    name: ReceivedEventArgs
    nameWithType: ReceivedEventArgs
    fullName: Funique.Network.ReceivedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Funique.Network.ReceivedEventArgs
    name: ReceivedEventArgs
    nameWithType: ReceivedEventArgs
    fullName: Funique.Network.ReceivedEventArgs
  - name: )
    nameWithType: )
    fullName: )
