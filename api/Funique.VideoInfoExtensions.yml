### YamlMime:ManagedReference
items:
- uid: Funique.VideoInfoExtensions
  commentId: T:Funique.VideoInfoExtensions
  id: VideoInfoExtensions
  parent: Funique
  children:
  - Funique.VideoInfoExtensions.CheckSameVideoName(Funique.VideoInfo[],System.String)
  - Funique.VideoInfoExtensions.CheckSameVideoName(System.Collections.Generic.List{Funique.VideoInfo},System.String)
  langs:
  - csharp
  - vb
  name: VideoInfoExtensions
  nameWithType: VideoInfoExtensions
  fullName: Funique.VideoInfoExtensions
  type: Class
  source:
    remote:
      path: Extension/VideoInfoExtensions.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: VideoInfoExtensions
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Extension/VideoInfoExtensions.cs
    startLine: 10
  assemblies:
  - Funique.Core
  namespace: Funique
  summary: "\nExtensions: Video Info <br />\n------------------------------------------------ <br />\n擴充: 影片清單\n"
  example: []
  syntax:
    content: public static class VideoInfoExtensions
    content.vb: Public Module VideoInfoExtensions
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Funique.VideoInfoExtensions.CheckSameVideoName(Funique.VideoInfo[],System.String)
  commentId: M:Funique.VideoInfoExtensions.CheckSameVideoName(Funique.VideoInfo[],System.String)
  id: CheckSameVideoName(Funique.VideoInfo[],System.String)
  isExtensionMethod: true
  parent: Funique.VideoInfoExtensions
  langs:
  - csharp
  - vb
  name: CheckSameVideoName(VideoInfo[], String)
  nameWithType: VideoInfoExtensions.CheckSameVideoName(VideoInfo[], String)
  fullName: Funique.VideoInfoExtensions.CheckSameVideoName(Funique.VideoInfo[], System.String)
  type: Method
  source:
    remote:
      path: Extension/VideoInfoExtensions.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: CheckSameVideoName
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Extension/VideoInfoExtensions.cs
    startLine: 12
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: public static bool CheckSameVideoName(this VideoInfo[] videoList, string videoName)
    parameters:
    - id: videoList
      type: Funique.VideoInfo[]
    - id: videoName
      type: System.String
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CheckSameVideoName(videoList As VideoInfo(), videoName As String) As Boolean
  overload: Funique.VideoInfoExtensions.CheckSameVideoName*
  nameWithType.vb: VideoInfoExtensions.CheckSameVideoName(VideoInfo(), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Funique.VideoInfoExtensions.CheckSameVideoName(Funique.VideoInfo(), System.String)
  name.vb: CheckSameVideoName(VideoInfo(), String)
- uid: Funique.VideoInfoExtensions.CheckSameVideoName(System.Collections.Generic.List{Funique.VideoInfo},System.String)
  commentId: M:Funique.VideoInfoExtensions.CheckSameVideoName(System.Collections.Generic.List{Funique.VideoInfo},System.String)
  id: CheckSameVideoName(System.Collections.Generic.List{Funique.VideoInfo},System.String)
  isExtensionMethod: true
  parent: Funique.VideoInfoExtensions
  langs:
  - csharp
  - vb
  name: CheckSameVideoName(List<VideoInfo>, String)
  nameWithType: VideoInfoExtensions.CheckSameVideoName(List<VideoInfo>, String)
  fullName: Funique.VideoInfoExtensions.CheckSameVideoName(System.Collections.Generic.List<Funique.VideoInfo>, System.String)
  type: Method
  source:
    remote:
      path: Extension/VideoInfoExtensions.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: CheckSameVideoName
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Extension/VideoInfoExtensions.cs
    startLine: 16
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: public static bool CheckSameVideoName(this List<VideoInfo> videoList, string videoName)
    parameters:
    - id: videoList
      type: System.Collections.Generic.List{Funique.VideoInfo}
    - id: videoName
      type: System.String
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CheckSameVideoName(videoList As List(Of VideoInfo), videoName As String) As Boolean
  overload: Funique.VideoInfoExtensions.CheckSameVideoName*
  nameWithType.vb: VideoInfoExtensions.CheckSameVideoName(List(Of VideoInfo), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Funique.VideoInfoExtensions.CheckSameVideoName(System.Collections.Generic.List(Of Funique.VideoInfo), System.String)
  name.vb: CheckSameVideoName(List(Of VideoInfo), String)
references:
- uid: Funique
  commentId: N:Funique
  name: Funique
  nameWithType: Funique
  fullName: Funique
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Funique.VideoInfoExtensions.CheckSameVideoName*
  commentId: Overload:Funique.VideoInfoExtensions.CheckSameVideoName
  name: CheckSameVideoName
  nameWithType: VideoInfoExtensions.CheckSameVideoName
  fullName: Funique.VideoInfoExtensions.CheckSameVideoName
- uid: Funique.VideoInfo[]
  isExternal: true
  name: VideoInfo[]
  nameWithType: VideoInfo[]
  fullName: Funique.VideoInfo[]
  nameWithType.vb: VideoInfo()
  fullName.vb: Funique.VideoInfo()
  name.vb: VideoInfo()
  spec.csharp:
  - uid: Funique.VideoInfo
    name: VideoInfo
    nameWithType: VideoInfo
    fullName: Funique.VideoInfo
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Funique.VideoInfo
    name: VideoInfo
    nameWithType: VideoInfo
    fullName: Funique.VideoInfo
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.List{Funique.VideoInfo}
  commentId: T:System.Collections.Generic.List{Funique.VideoInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<VideoInfo>
  nameWithType: List<VideoInfo>
  fullName: System.Collections.Generic.List<Funique.VideoInfo>
  nameWithType.vb: List(Of VideoInfo)
  fullName.vb: System.Collections.Generic.List(Of Funique.VideoInfo)
  name.vb: List(Of VideoInfo)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Funique.VideoInfo
    name: VideoInfo
    nameWithType: VideoInfo
    fullName: Funique.VideoInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Funique.VideoInfo
    name: VideoInfo
    nameWithType: VideoInfo
    fullName: Funique.VideoInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
