### YamlMime:ManagedReference
items:
- uid: Funique.IToolUtility
  commentId: T:Funique.IToolUtility
  id: IToolUtility
  parent: Funique
  children:
  - Funique.IToolUtility.AddBtnEvent(UnityEngine.GameObject,UnityEngine.Events.UnityAction,UnityEngine.EventSystems.EventTriggerType)
  - Funique.IToolUtility.AddBtnEvent``1(UnityEngine.GameObject,UnityEngine.Events.UnityAction{``0},``0,UnityEngine.EventSystems.EventTriggerType)
  - Funique.IToolUtility.AddEventTrigger(UnityEngine.GameObject,System.Action,UnityEngine.EventSystems.EventTriggerType)
  - Funique.IToolUtility.CheckRaycast(System.String)
  - Funique.IToolUtility.DetectInWindows(UnityEngine.GameObject)
  - Funique.IToolUtility.FFmpegAudioChannel(System.String)
  - Funique.IToolUtility.FFmpegDurationTime(System.String)
  - Funique.IToolUtility.FFmpegSetVideoInfo(Funique.VideoInfo@)
  - Funique.IToolUtility.FileSearch(System.String,System.String)
  - Funique.IToolUtility.FileSearch(System.String,System.String,System.String@)
  - Funique.IToolUtility.GetIPRange(System.Net.IPAddress,System.Net.IPAddress,System.Int32)
  - Funique.IToolUtility.GetMenuUIPosition(UnityEngine.Transform,UnityEngine.Vector2)
  - Funique.IToolUtility.GetSelfIPAddress
  - Funique.IToolUtility.MoveListItem``1(System.Collections.Generic.IList{``0},System.Int32,System.Int32)
  - Funique.IToolUtility.ObjShowInHMD(UnityEngine.Transform,UnityEngine.Transform,System.Single,System.Single)
  - Funique.IToolUtility.ReadImg(System.String)
  - Funique.IToolUtility.ReadTexture(System.String,System.String)
  - Funique.IToolUtility.ReadTexture(System.String,UnityEngine.Texture2D@)
  - Funique.IToolUtility.ResetCalculation(UnityEngine.GameObject,System.Single)
  - Funique.IToolUtility.TextureCompression(UnityEngine.Texture2D,System.Single)
  langs:
  - csharp
  - vb
  name: IToolUtility
  nameWithType: IToolUtility
  fullName: Funique.IToolUtility
  type: Interface
  source:
    remote:
      path: Interface/Utility/IToolUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: IToolUtility
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Interface/Utility/IToolUtility.cs
    startLine: 14
  assemblies:
  - Funique.Core
  namespace: Funique
  summary: "\nTool utility, Unit testable <br />\n------------------------------------------------ <br />\n工具組功能. 可被單元測試\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Soon this will replace by C# extensions features")]

      public interface IToolUtility : IToolVideoInfoExtension, IToolStringExtension, IToolPlayerInformationExtension
    content.vb: >-
      <Obsolete("Soon this will replace by C# extensions features")>

      Public Interface IToolUtility

          Inherits IToolVideoInfoExtension, IToolStringExtension, IToolPlayerInformationExtension
  inheritedMembers:
  - Funique.IToolVideoInfoExtension.CheckSameVideoName(Funique.VideoInfo[],System.String)
  - Funique.IToolVideoInfoExtension.CheckSameVideoName(System.Collections.Generic.List{Funique.VideoInfo},System.String)
  - Funique.IToolStringExtension.FilterVideoName(System.String)
  - Funique.IToolStringExtension.FilterVideoTime(System.String)
  - Funique.IToolStringExtension.TranslateTime(System.String)
  - Funique.IToolStringExtension.FilterBtnName(System.String)
  - Funique.IToolStringExtension.MergeTime(System.String,System.Double)
  - Funique.IToolStringExtension.DetectStereoMode(System.String)
  - Funique.IToolPlayerInformationExtension.RandomID(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.Int32)
  - Funique.IToolPlayerInformationExtension.RandomIP(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.Int32)
  - Funique.IToolPlayerInformationExtension.CheckRepeatID(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.Int32)
  - Funique.IToolPlayerInformationExtension.CheckRepeatIP(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.String)
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Soon this will replace by C# extensions features
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Funique.IToolUtility.GetMenuUIPosition(UnityEngine.Transform,UnityEngine.Vector2)
  commentId: M:Funique.IToolUtility.GetMenuUIPosition(UnityEngine.Transform,UnityEngine.Vector2)
  id: GetMenuUIPosition(UnityEngine.Transform,UnityEngine.Vector2)
  parent: Funique.IToolUtility
  langs:
  - csharp
  - vb
  name: GetMenuUIPosition(Transform, Vector2)
  nameWithType: IToolUtility.GetMenuUIPosition(Transform, Vector2)
  fullName: Funique.IToolUtility.GetMenuUIPosition(UnityEngine.Transform, UnityEngine.Vector2)
  type: Method
  source:
    remote:
      path: Interface/Utility/IToolUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: GetMenuUIPosition
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Interface/Utility/IToolUtility.cs
    startLine: 18
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: Vector3 GetMenuUIPosition(Transform canvas, Vector2 mousePosition)
    parameters:
    - id: canvas
      type: UnityEngine.Transform
    - id: mousePosition
      type: UnityEngine.Vector2
    return:
      type: UnityEngine.Vector3
    content.vb: Function GetMenuUIPosition(canvas As Transform, mousePosition As Vector2) As Vector3
  overload: Funique.IToolUtility.GetMenuUIPosition*
- uid: Funique.IToolUtility.CheckRaycast(System.String)
  commentId: M:Funique.IToolUtility.CheckRaycast(System.String)
  id: CheckRaycast(System.String)
  parent: Funique.IToolUtility
  langs:
  - csharp
  - vb
  name: CheckRaycast(String)
  nameWithType: IToolUtility.CheckRaycast(String)
  fullName: Funique.IToolUtility.CheckRaycast(System.String)
  type: Method
  source:
    remote:
      path: Interface/Utility/IToolUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: CheckRaycast
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Interface/Utility/IToolUtility.cs
    startLine: 19
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: bool CheckRaycast(string tag)
    parameters:
    - id: tag
      type: System.String
    return:
      type: System.Boolean
    content.vb: Function CheckRaycast(tag As String) As Boolean
  overload: Funique.IToolUtility.CheckRaycast*
- uid: Funique.IToolUtility.AddBtnEvent(UnityEngine.GameObject,UnityEngine.Events.UnityAction,UnityEngine.EventSystems.EventTriggerType)
  commentId: M:Funique.IToolUtility.AddBtnEvent(UnityEngine.GameObject,UnityEngine.Events.UnityAction,UnityEngine.EventSystems.EventTriggerType)
  id: AddBtnEvent(UnityEngine.GameObject,UnityEngine.Events.UnityAction,UnityEngine.EventSystems.EventTriggerType)
  parent: Funique.IToolUtility
  langs:
  - csharp
  - vb
  name: AddBtnEvent(GameObject, UnityAction, EventTriggerType)
  nameWithType: IToolUtility.AddBtnEvent(GameObject, UnityAction, EventTriggerType)
  fullName: Funique.IToolUtility.AddBtnEvent(UnityEngine.GameObject, UnityEngine.Events.UnityAction, UnityEngine.EventSystems.EventTriggerType)
  type: Method
  source:
    remote:
      path: Interface/Utility/IToolUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: AddBtnEvent
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Interface/Utility/IToolUtility.cs
    startLine: 29
  assemblies:
  - Funique.Core
  namespace: Funique
  summary: "\nAdding event to button (Try casting) <br />\n------------------------------------------------ <br />\n新增事件到按鈕上 (嘗試抓取)\n"
  example: []
  syntax:
    content: void AddBtnEvent(GameObject BtnObj, UnityAction BtnAction, EventTriggerType TriggerType)
    parameters:
    - id: BtnObj
      type: UnityEngine.GameObject
      description: GameObject
    - id: BtnAction
      type: UnityEngine.Events.UnityAction
      description: Action Event
    - id: TriggerType
      type: UnityEngine.EventSystems.EventTriggerType
      description: Type
    content.vb: Sub AddBtnEvent(BtnObj As GameObject, BtnAction As UnityAction, TriggerType As EventTriggerType)
  overload: Funique.IToolUtility.AddBtnEvent*
- uid: Funique.IToolUtility.AddBtnEvent``1(UnityEngine.GameObject,UnityEngine.Events.UnityAction{``0},``0,UnityEngine.EventSystems.EventTriggerType)
  commentId: M:Funique.IToolUtility.AddBtnEvent``1(UnityEngine.GameObject,UnityEngine.Events.UnityAction{``0},``0,UnityEngine.EventSystems.EventTriggerType)
  id: AddBtnEvent``1(UnityEngine.GameObject,UnityEngine.Events.UnityAction{``0},``0,UnityEngine.EventSystems.EventTriggerType)
  parent: Funique.IToolUtility
  langs:
  - csharp
  - vb
  name: AddBtnEvent<T>(GameObject, UnityAction<T>, T, EventTriggerType)
  nameWithType: IToolUtility.AddBtnEvent<T>(GameObject, UnityAction<T>, T, EventTriggerType)
  fullName: Funique.IToolUtility.AddBtnEvent<T>(UnityEngine.GameObject, UnityEngine.Events.UnityAction<T>, T, UnityEngine.EventSystems.EventTriggerType)
  type: Method
  source:
    remote:
      path: Interface/Utility/IToolUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: AddBtnEvent
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Interface/Utility/IToolUtility.cs
    startLine: 33
  assemblies:
  - Funique.Core
  namespace: Funique
  summary: "\n<inheritdoc cref=\"M:Funique.IToolUtility.AddBtnEvent(UnityEngine.GameObject,UnityEngine.Events.UnityAction,UnityEngine.EventSystems.EventTriggerType)\"></inheritdoc>\n"
  example: []
  syntax:
    content: void AddBtnEvent<T>(GameObject BtnObj, UnityAction<T> BtnAction, T ActionString, EventTriggerType TriggerType)
    parameters:
    - id: BtnObj
      type: UnityEngine.GameObject
    - id: BtnAction
      type: UnityEngine.Events.UnityAction{{T}}
    - id: ActionString
      type: '{T}'
    - id: TriggerType
      type: UnityEngine.EventSystems.EventTriggerType
    typeParameters:
    - id: T
    content.vb: Sub AddBtnEvent(Of T)(BtnObj As GameObject, BtnAction As UnityAction(Of T), ActionString As T, TriggerType As EventTriggerType)
  overload: Funique.IToolUtility.AddBtnEvent*
  nameWithType.vb: IToolUtility.AddBtnEvent(Of T)(GameObject, UnityAction(Of T), T, EventTriggerType)
  fullName.vb: Funique.IToolUtility.AddBtnEvent(Of T)(UnityEngine.GameObject, UnityEngine.Events.UnityAction(Of T), T, UnityEngine.EventSystems.EventTriggerType)
  name.vb: AddBtnEvent(Of T)(GameObject, UnityAction(Of T), T, EventTriggerType)
- uid: Funique.IToolUtility.MoveListItem``1(System.Collections.Generic.IList{``0},System.Int32,System.Int32)
  commentId: M:Funique.IToolUtility.MoveListItem``1(System.Collections.Generic.IList{``0},System.Int32,System.Int32)
  id: MoveListItem``1(System.Collections.Generic.IList{``0},System.Int32,System.Int32)
  parent: Funique.IToolUtility
  langs:
  - csharp
  - vb
  name: MoveListItem<T>(IList<T>, Int32, Int32)
  nameWithType: IToolUtility.MoveListItem<T>(IList<T>, Int32, Int32)
  fullName: Funique.IToolUtility.MoveListItem<T>(System.Collections.Generic.IList<T>, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Interface/Utility/IToolUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: MoveListItem
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Interface/Utility/IToolUtility.cs
    startLine: 44
  assemblies:
  - Funique.Core
  namespace: Funique
  summary: "\nReplace two item in a list by two index <br />\n------------------------------------------------ <br />\n置換清單中的 兩物件\n"
  example: []
  syntax:
    content: IList<T> MoveListItem<T>(IList<T> list, int indexA, int indexB)
    parameters:
    - id: list
      type: System.Collections.Generic.IList{{T}}
      description: List Object
    - id: indexA
      type: System.Int32
      description: Index
    - id: indexB
      type: System.Int32
      description: Another Index
    typeParameters:
    - id: T
      description: Type
    return:
      type: System.Collections.Generic.IList{{T}}
      description: ''
    content.vb: Function MoveListItem(Of T)(list As IList(Of T), indexA As Integer, indexB As Integer) As IList(Of T)
  overload: Funique.IToolUtility.MoveListItem*
  nameWithType.vb: IToolUtility.MoveListItem(Of T)(IList(Of T), Int32, Int32)
  fullName.vb: Funique.IToolUtility.MoveListItem(Of T)(System.Collections.Generic.IList(Of T), System.Int32, System.Int32)
  name.vb: MoveListItem(Of T)(IList(Of T), Int32, Int32)
- uid: Funique.IToolUtility.DetectInWindows(UnityEngine.GameObject)
  commentId: M:Funique.IToolUtility.DetectInWindows(UnityEngine.GameObject)
  id: DetectInWindows(UnityEngine.GameObject)
  parent: Funique.IToolUtility
  langs:
  - csharp
  - vb
  name: DetectInWindows(GameObject)
  nameWithType: IToolUtility.DetectInWindows(GameObject)
  fullName: Funique.IToolUtility.DetectInWindows(UnityEngine.GameObject)
  type: Method
  source:
    remote:
      path: Interface/Utility/IToolUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: DetectInWindows
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Interface/Utility/IToolUtility.cs
    startLine: 45
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: bool DetectInWindows(GameObject target)
    parameters:
    - id: target
      type: UnityEngine.GameObject
    return:
      type: System.Boolean
    content.vb: Function DetectInWindows(target As GameObject) As Boolean
  overload: Funique.IToolUtility.DetectInWindows*
- uid: Funique.IToolUtility.GetSelfIPAddress
  commentId: M:Funique.IToolUtility.GetSelfIPAddress
  id: GetSelfIPAddress
  parent: Funique.IToolUtility
  langs:
  - csharp
  - vb
  name: GetSelfIPAddress()
  nameWithType: IToolUtility.GetSelfIPAddress()
  fullName: Funique.IToolUtility.GetSelfIPAddress()
  type: Method
  source:
    remote:
      path: Interface/Utility/IToolUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: GetSelfIPAddress
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Interface/Utility/IToolUtility.cs
    startLine: 52
  assemblies:
  - Funique.Core
  namespace: Funique
  summary: "\nGet self ip address <br />\n------------------------------------------------ <br />\n得到自己的 IP 位址\n"
  example: []
  syntax:
    content: string GetSelfIPAddress()
    return:
      type: System.String
      description: ''
    content.vb: Function GetSelfIPAddress As String
  overload: Funique.IToolUtility.GetSelfIPAddress*
- uid: Funique.IToolUtility.GetIPRange(System.Net.IPAddress,System.Net.IPAddress,System.Int32)
  commentId: M:Funique.IToolUtility.GetIPRange(System.Net.IPAddress,System.Net.IPAddress,System.Int32)
  id: GetIPRange(System.Net.IPAddress,System.Net.IPAddress,System.Int32)
  parent: Funique.IToolUtility
  langs:
  - csharp
  - vb
  name: GetIPRange(IPAddress, IPAddress, Int32)
  nameWithType: IToolUtility.GetIPRange(IPAddress, IPAddress, Int32)
  fullName: Funique.IToolUtility.GetIPRange(System.Net.IPAddress, System.Net.IPAddress, System.Int32)
  type: Method
  source:
    remote:
      path: Interface/Utility/IToolUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: GetIPRange
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Interface/Utility/IToolUtility.cs
    startLine: 53
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: IPAddress[] GetIPRange(IPAddress p1, IPAddress p2, int mask)
    parameters:
    - id: p1
      type: System.Net.IPAddress
    - id: p2
      type: System.Net.IPAddress
    - id: mask
      type: System.Int32
    return:
      type: System.Net.IPAddress[]
    content.vb: Function GetIPRange(p1 As IPAddress, p2 As IPAddress, mask As Integer) As IPAddress()
  overload: Funique.IToolUtility.GetIPRange*
- uid: Funique.IToolUtility.TextureCompression(UnityEngine.Texture2D,System.Single)
  commentId: M:Funique.IToolUtility.TextureCompression(UnityEngine.Texture2D,System.Single)
  id: TextureCompression(UnityEngine.Texture2D,System.Single)
  parent: Funique.IToolUtility
  langs:
  - csharp
  - vb
  name: TextureCompression(Texture2D, Single)
  nameWithType: IToolUtility.TextureCompression(Texture2D, Single)
  fullName: Funique.IToolUtility.TextureCompression(UnityEngine.Texture2D, System.Single)
  type: Method
  source:
    remote:
      path: Interface/Utility/IToolUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: TextureCompression
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Interface/Utility/IToolUtility.cs
    startLine: 57
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: Texture2D TextureCompression(Texture2D texture, float rate)
    parameters:
    - id: texture
      type: UnityEngine.Texture2D
    - id: rate
      type: System.Single
    return:
      type: UnityEngine.Texture2D
    content.vb: Function TextureCompression(texture As Texture2D, rate As Single) As Texture2D
  overload: Funique.IToolUtility.TextureCompression*
- uid: Funique.IToolUtility.ObjShowInHMD(UnityEngine.Transform,UnityEngine.Transform,System.Single,System.Single)
  commentId: M:Funique.IToolUtility.ObjShowInHMD(UnityEngine.Transform,UnityEngine.Transform,System.Single,System.Single)
  id: ObjShowInHMD(UnityEngine.Transform,UnityEngine.Transform,System.Single,System.Single)
  parent: Funique.IToolUtility
  langs:
  - csharp
  - vb
  name: ObjShowInHMD(Transform, Transform, Single, Single)
  nameWithType: IToolUtility.ObjShowInHMD(Transform, Transform, Single, Single)
  fullName: Funique.IToolUtility.ObjShowInHMD(UnityEngine.Transform, UnityEngine.Transform, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: Interface/Utility/IToolUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: ObjShowInHMD
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Interface/Utility/IToolUtility.cs
    startLine: 58
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: void ObjShowInHMD(Transform header, Transform objTrans, float Len, float offsetAngles)
    parameters:
    - id: header
      type: UnityEngine.Transform
    - id: objTrans
      type: UnityEngine.Transform
    - id: Len
      type: System.Single
    - id: offsetAngles
      type: System.Single
    content.vb: Sub ObjShowInHMD(header As Transform, objTrans As Transform, Len As Single, offsetAngles As Single)
  overload: Funique.IToolUtility.ObjShowInHMD*
- uid: Funique.IToolUtility.ReadImg(System.String)
  commentId: M:Funique.IToolUtility.ReadImg(System.String)
  id: ReadImg(System.String)
  parent: Funique.IToolUtility
  langs:
  - csharp
  - vb
  name: ReadImg(String)
  nameWithType: IToolUtility.ReadImg(String)
  fullName: Funique.IToolUtility.ReadImg(System.String)
  type: Method
  source:
    remote:
      path: Interface/Utility/IToolUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: ReadImg
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Interface/Utility/IToolUtility.cs
    startLine: 59
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: Sprite ReadImg(string imageName)
    parameters:
    - id: imageName
      type: System.String
    return:
      type: UnityEngine.Sprite
    content.vb: Function ReadImg(imageName As String) As Sprite
  overload: Funique.IToolUtility.ReadImg*
- uid: Funique.IToolUtility.ReadTexture(System.String,System.String)
  commentId: M:Funique.IToolUtility.ReadTexture(System.String,System.String)
  id: ReadTexture(System.String,System.String)
  parent: Funique.IToolUtility
  langs:
  - csharp
  - vb
  name: ReadTexture(String, String)
  nameWithType: IToolUtility.ReadTexture(String, String)
  fullName: Funique.IToolUtility.ReadTexture(System.String, System.String)
  type: Method
  source:
    remote:
      path: Interface/Utility/IToolUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: ReadTexture
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Interface/Utility/IToolUtility.cs
    startLine: 60
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: Texture2D ReadTexture(string imageName, string imgFolder = null)
    parameters:
    - id: imageName
      type: System.String
    - id: imgFolder
      type: System.String
    return:
      type: UnityEngine.Texture2D
    content.vb: Function ReadTexture(imageName As String, imgFolder As String = Nothing) As Texture2D
  overload: Funique.IToolUtility.ReadTexture*
- uid: Funique.IToolUtility.ReadTexture(System.String,UnityEngine.Texture2D@)
  commentId: M:Funique.IToolUtility.ReadTexture(System.String,UnityEngine.Texture2D@)
  id: ReadTexture(System.String,UnityEngine.Texture2D@)
  parent: Funique.IToolUtility
  langs:
  - csharp
  - vb
  name: ReadTexture(String, ref Texture2D)
  nameWithType: IToolUtility.ReadTexture(String, ref Texture2D)
  fullName: Funique.IToolUtility.ReadTexture(System.String, ref UnityEngine.Texture2D)
  type: Method
  source:
    remote:
      path: Interface/Utility/IToolUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: ReadTexture
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Interface/Utility/IToolUtility.cs
    startLine: 61
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: Texture2D ReadTexture(string imageName, ref Texture2D tex)
    parameters:
    - id: imageName
      type: System.String
    - id: tex
      type: UnityEngine.Texture2D
    return:
      type: UnityEngine.Texture2D
    content.vb: Function ReadTexture(imageName As String, ByRef tex As Texture2D) As Texture2D
  overload: Funique.IToolUtility.ReadTexture*
  nameWithType.vb: IToolUtility.ReadTexture(String, ByRef Texture2D)
  fullName.vb: Funique.IToolUtility.ReadTexture(System.String, ByRef UnityEngine.Texture2D)
  name.vb: ReadTexture(String, ByRef Texture2D)
- uid: Funique.IToolUtility.FFmpegSetVideoInfo(Funique.VideoInfo@)
  commentId: M:Funique.IToolUtility.FFmpegSetVideoInfo(Funique.VideoInfo@)
  id: FFmpegSetVideoInfo(Funique.VideoInfo@)
  parent: Funique.IToolUtility
  langs:
  - csharp
  - vb
  name: FFmpegSetVideoInfo(ref VideoInfo)
  nameWithType: IToolUtility.FFmpegSetVideoInfo(ref VideoInfo)
  fullName: Funique.IToolUtility.FFmpegSetVideoInfo(ref Funique.VideoInfo)
  type: Method
  source:
    remote:
      path: Interface/Utility/IToolUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: FFmpegSetVideoInfo
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Interface/Utility/IToolUtility.cs
    startLine: 62
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: void FFmpegSetVideoInfo(ref VideoInfo video)
    parameters:
    - id: video
      type: Funique.VideoInfo
    content.vb: Sub FFmpegSetVideoInfo(ByRef video As VideoInfo)
  overload: Funique.IToolUtility.FFmpegSetVideoInfo*
  nameWithType.vb: IToolUtility.FFmpegSetVideoInfo(ByRef VideoInfo)
  fullName.vb: Funique.IToolUtility.FFmpegSetVideoInfo(ByRef Funique.VideoInfo)
  name.vb: FFmpegSetVideoInfo(ByRef VideoInfo)
- uid: Funique.IToolUtility.FFmpegDurationTime(System.String)
  commentId: M:Funique.IToolUtility.FFmpegDurationTime(System.String)
  id: FFmpegDurationTime(System.String)
  parent: Funique.IToolUtility
  langs:
  - csharp
  - vb
  name: FFmpegDurationTime(String)
  nameWithType: IToolUtility.FFmpegDurationTime(String)
  fullName: Funique.IToolUtility.FFmpegDurationTime(System.String)
  type: Method
  source:
    remote:
      path: Interface/Utility/IToolUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: FFmpegDurationTime
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Interface/Utility/IToolUtility.cs
    startLine: 63
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: double FFmpegDurationTime(string ffmpegMsg)
    parameters:
    - id: ffmpegMsg
      type: System.String
    return:
      type: System.Double
    content.vb: Function FFmpegDurationTime(ffmpegMsg As String) As Double
  overload: Funique.IToolUtility.FFmpegDurationTime*
- uid: Funique.IToolUtility.FFmpegAudioChannel(System.String)
  commentId: M:Funique.IToolUtility.FFmpegAudioChannel(System.String)
  id: FFmpegAudioChannel(System.String)
  parent: Funique.IToolUtility
  langs:
  - csharp
  - vb
  name: FFmpegAudioChannel(String)
  nameWithType: IToolUtility.FFmpegAudioChannel(String)
  fullName: Funique.IToolUtility.FFmpegAudioChannel(System.String)
  type: Method
  source:
    remote:
      path: Interface/Utility/IToolUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: FFmpegAudioChannel
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Interface/Utility/IToolUtility.cs
    startLine: 64
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: string FFmpegAudioChannel(string ffmpegMsg)
    parameters:
    - id: ffmpegMsg
      type: System.String
    return:
      type: System.String
    content.vb: Function FFmpegAudioChannel(ffmpegMsg As String) As String
  overload: Funique.IToolUtility.FFmpegAudioChannel*
- uid: Funique.IToolUtility.FileSearch(System.String,System.String)
  commentId: M:Funique.IToolUtility.FileSearch(System.String,System.String)
  id: FileSearch(System.String,System.String)
  parent: Funique.IToolUtility
  langs:
  - csharp
  - vb
  name: FileSearch(String, String)
  nameWithType: IToolUtility.FileSearch(String, String)
  fullName: Funique.IToolUtility.FileSearch(System.String, System.String)
  type: Method
  source:
    remote:
      path: Interface/Utility/IToolUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: FileSearch
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Interface/Utility/IToolUtility.cs
    startLine: 73
  assemblies:
  - Funique.Core
  namespace: Funique
  summary: "\nSearch a file in the directory <br />\n------------------------------------------------ <br />\n根據檔案名稱 搜尋資料夾\n"
  example: []
  syntax:
    content: bool FileSearch(string sDir, string fileName)
    parameters:
    - id: sDir
      type: System.String
      description: Target directory
    - id: fileName
      type: System.String
      description: Target filename
    return:
      type: System.Boolean
      description: Find it or not
    content.vb: Function FileSearch(sDir As String, fileName As String) As Boolean
  overload: Funique.IToolUtility.FileSearch*
- uid: Funique.IToolUtility.FileSearch(System.String,System.String,System.String@)
  commentId: M:Funique.IToolUtility.FileSearch(System.String,System.String,System.String@)
  id: FileSearch(System.String,System.String,System.String@)
  parent: Funique.IToolUtility
  langs:
  - csharp
  - vb
  name: FileSearch(String, String, out String)
  nameWithType: IToolUtility.FileSearch(String, String, out String)
  fullName: Funique.IToolUtility.FileSearch(System.String, System.String, out System.String)
  type: Method
  source:
    remote:
      path: Interface/Utility/IToolUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: FileSearch
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Interface/Utility/IToolUtility.cs
    startLine: 81
  assemblies:
  - Funique.Core
  namespace: Funique
  summary: "\n<inheritdoc cref=\"M:Funique.IToolUtility.FileSearch(System.String,System.String)\"></inheritdoc>\n"
  example: []
  syntax:
    content: bool FileSearch(string sDir, string fileName, out string fullpath)
    parameters:
    - id: sDir
      type: System.String
      description: Target directory
    - id: fileName
      type: System.String
      description: Target filename
    - id: fullpath
      type: System.String
      description: Result fullpath
    return:
      type: System.Boolean
      description: Find it or not
    content.vb: Function FileSearch(sDir As String, fileName As String, ByRef fullpath As String) As Boolean
  overload: Funique.IToolUtility.FileSearch*
  nameWithType.vb: IToolUtility.FileSearch(String, String, ByRef String)
  fullName.vb: Funique.IToolUtility.FileSearch(System.String, System.String, ByRef System.String)
  name.vb: FileSearch(String, String, ByRef String)
- uid: Funique.IToolUtility.ResetCalculation(UnityEngine.GameObject,System.Single)
  commentId: M:Funique.IToolUtility.ResetCalculation(UnityEngine.GameObject,System.Single)
  id: ResetCalculation(UnityEngine.GameObject,System.Single)
  parent: Funique.IToolUtility
  langs:
  - csharp
  - vb
  name: ResetCalculation(GameObject, Single)
  nameWithType: IToolUtility.ResetCalculation(GameObject, Single)
  fullName: Funique.IToolUtility.ResetCalculation(UnityEngine.GameObject, System.Single)
  type: Method
  source:
    remote:
      path: Interface/Utility/IToolUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: ResetCalculation
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Interface/Utility/IToolUtility.cs
    startLine: 82
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: void ResetCalculation(GameObject targetObj, float len)
    parameters:
    - id: targetObj
      type: UnityEngine.GameObject
    - id: len
      type: System.Single
    content.vb: Sub ResetCalculation(targetObj As GameObject, len As Single)
  overload: Funique.IToolUtility.ResetCalculation*
- uid: Funique.IToolUtility.AddEventTrigger(UnityEngine.GameObject,System.Action,UnityEngine.EventSystems.EventTriggerType)
  commentId: M:Funique.IToolUtility.AddEventTrigger(UnityEngine.GameObject,System.Action,UnityEngine.EventSystems.EventTriggerType)
  id: AddEventTrigger(UnityEngine.GameObject,System.Action,UnityEngine.EventSystems.EventTriggerType)
  parent: Funique.IToolUtility
  langs:
  - csharp
  - vb
  name: AddEventTrigger(GameObject, Action, EventTriggerType)
  nameWithType: IToolUtility.AddEventTrigger(GameObject, Action, EventTriggerType)
  fullName: Funique.IToolUtility.AddEventTrigger(UnityEngine.GameObject, System.Action, UnityEngine.EventSystems.EventTriggerType)
  type: Method
  source:
    remote:
      path: Interface/Utility/IToolUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: AddEventTrigger
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Interface/Utility/IToolUtility.cs
    startLine: 83
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: void AddEventTrigger(GameObject Object, Action TriggerAction, EventTriggerType TriggerType)
    parameters:
    - id: Object
      type: UnityEngine.GameObject
    - id: TriggerAction
      type: System.Action
    - id: TriggerType
      type: UnityEngine.EventSystems.EventTriggerType
    content.vb: Sub AddEventTrigger(Object As GameObject, TriggerAction As Action, TriggerType As EventTriggerType)
  overload: Funique.IToolUtility.AddEventTrigger*
references:
- uid: Funique
  commentId: N:Funique
  name: Funique
  nameWithType: Funique
  fullName: Funique
- uid: Funique.IToolVideoInfoExtension.CheckSameVideoName(Funique.VideoInfo[],System.String)
  commentId: M:Funique.IToolVideoInfoExtension.CheckSameVideoName(Funique.VideoInfo[],System.String)
  parent: Funique.IToolVideoInfoExtension
  isExternal: true
  name: CheckSameVideoName(VideoInfo[], String)
  nameWithType: IToolVideoInfoExtension.CheckSameVideoName(VideoInfo[], String)
  fullName: Funique.IToolVideoInfoExtension.CheckSameVideoName(Funique.VideoInfo[], System.String)
  nameWithType.vb: IToolVideoInfoExtension.CheckSameVideoName(VideoInfo(), String)
  fullName.vb: Funique.IToolVideoInfoExtension.CheckSameVideoName(Funique.VideoInfo(), System.String)
  name.vb: CheckSameVideoName(VideoInfo(), String)
  spec.csharp:
  - uid: Funique.IToolVideoInfoExtension.CheckSameVideoName(Funique.VideoInfo[],System.String)
    name: CheckSameVideoName
    nameWithType: IToolVideoInfoExtension.CheckSameVideoName
    fullName: Funique.IToolVideoInfoExtension.CheckSameVideoName
  - name: (
    nameWithType: (
    fullName: (
  - uid: Funique.VideoInfo
    name: VideoInfo
    nameWithType: VideoInfo
    fullName: Funique.VideoInfo
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolVideoInfoExtension.CheckSameVideoName(Funique.VideoInfo[],System.String)
    name: CheckSameVideoName
    nameWithType: IToolVideoInfoExtension.CheckSameVideoName
    fullName: Funique.IToolVideoInfoExtension.CheckSameVideoName
  - name: (
    nameWithType: (
    fullName: (
  - uid: Funique.VideoInfo
    name: VideoInfo
    nameWithType: VideoInfo
    fullName: Funique.VideoInfo
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.IToolVideoInfoExtension.CheckSameVideoName(System.Collections.Generic.List{Funique.VideoInfo},System.String)
  commentId: M:Funique.IToolVideoInfoExtension.CheckSameVideoName(System.Collections.Generic.List{Funique.VideoInfo},System.String)
  parent: Funique.IToolVideoInfoExtension
  isExternal: true
  name: CheckSameVideoName(List<VideoInfo>, String)
  nameWithType: IToolVideoInfoExtension.CheckSameVideoName(List<VideoInfo>, String)
  fullName: Funique.IToolVideoInfoExtension.CheckSameVideoName(System.Collections.Generic.List<Funique.VideoInfo>, System.String)
  nameWithType.vb: IToolVideoInfoExtension.CheckSameVideoName(List(Of VideoInfo), String)
  fullName.vb: Funique.IToolVideoInfoExtension.CheckSameVideoName(System.Collections.Generic.List(Of Funique.VideoInfo), System.String)
  name.vb: CheckSameVideoName(List(Of VideoInfo), String)
  spec.csharp:
  - uid: Funique.IToolVideoInfoExtension.CheckSameVideoName(System.Collections.Generic.List{Funique.VideoInfo},System.String)
    name: CheckSameVideoName
    nameWithType: IToolVideoInfoExtension.CheckSameVideoName
    fullName: Funique.IToolVideoInfoExtension.CheckSameVideoName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Funique.VideoInfo
    name: VideoInfo
    nameWithType: VideoInfo
    fullName: Funique.VideoInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolVideoInfoExtension.CheckSameVideoName(System.Collections.Generic.List{Funique.VideoInfo},System.String)
    name: CheckSameVideoName
    nameWithType: IToolVideoInfoExtension.CheckSameVideoName
    fullName: Funique.IToolVideoInfoExtension.CheckSameVideoName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Funique.VideoInfo
    name: VideoInfo
    nameWithType: VideoInfo
    fullName: Funique.VideoInfo
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.IToolStringExtension.FilterVideoName(System.String)
  commentId: M:Funique.IToolStringExtension.FilterVideoName(System.String)
  parent: Funique.IToolStringExtension
  isExternal: true
  name: FilterVideoName(String)
  nameWithType: IToolStringExtension.FilterVideoName(String)
  fullName: Funique.IToolStringExtension.FilterVideoName(System.String)
  spec.csharp:
  - uid: Funique.IToolStringExtension.FilterVideoName(System.String)
    name: FilterVideoName
    nameWithType: IToolStringExtension.FilterVideoName
    fullName: Funique.IToolStringExtension.FilterVideoName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolStringExtension.FilterVideoName(System.String)
    name: FilterVideoName
    nameWithType: IToolStringExtension.FilterVideoName
    fullName: Funique.IToolStringExtension.FilterVideoName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.IToolStringExtension.FilterVideoTime(System.String)
  commentId: M:Funique.IToolStringExtension.FilterVideoTime(System.String)
  parent: Funique.IToolStringExtension
  isExternal: true
  name: FilterVideoTime(String)
  nameWithType: IToolStringExtension.FilterVideoTime(String)
  fullName: Funique.IToolStringExtension.FilterVideoTime(System.String)
  spec.csharp:
  - uid: Funique.IToolStringExtension.FilterVideoTime(System.String)
    name: FilterVideoTime
    nameWithType: IToolStringExtension.FilterVideoTime
    fullName: Funique.IToolStringExtension.FilterVideoTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolStringExtension.FilterVideoTime(System.String)
    name: FilterVideoTime
    nameWithType: IToolStringExtension.FilterVideoTime
    fullName: Funique.IToolStringExtension.FilterVideoTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.IToolStringExtension.TranslateTime(System.String)
  commentId: M:Funique.IToolStringExtension.TranslateTime(System.String)
  parent: Funique.IToolStringExtension
  isExternal: true
  name: TranslateTime(String)
  nameWithType: IToolStringExtension.TranslateTime(String)
  fullName: Funique.IToolStringExtension.TranslateTime(System.String)
  spec.csharp:
  - uid: Funique.IToolStringExtension.TranslateTime(System.String)
    name: TranslateTime
    nameWithType: IToolStringExtension.TranslateTime
    fullName: Funique.IToolStringExtension.TranslateTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolStringExtension.TranslateTime(System.String)
    name: TranslateTime
    nameWithType: IToolStringExtension.TranslateTime
    fullName: Funique.IToolStringExtension.TranslateTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.IToolStringExtension.FilterBtnName(System.String)
  commentId: M:Funique.IToolStringExtension.FilterBtnName(System.String)
  parent: Funique.IToolStringExtension
  isExternal: true
  name: FilterBtnName(String)
  nameWithType: IToolStringExtension.FilterBtnName(String)
  fullName: Funique.IToolStringExtension.FilterBtnName(System.String)
  spec.csharp:
  - uid: Funique.IToolStringExtension.FilterBtnName(System.String)
    name: FilterBtnName
    nameWithType: IToolStringExtension.FilterBtnName
    fullName: Funique.IToolStringExtension.FilterBtnName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolStringExtension.FilterBtnName(System.String)
    name: FilterBtnName
    nameWithType: IToolStringExtension.FilterBtnName
    fullName: Funique.IToolStringExtension.FilterBtnName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.IToolStringExtension.MergeTime(System.String,System.Double)
  commentId: M:Funique.IToolStringExtension.MergeTime(System.String,System.Double)
  parent: Funique.IToolStringExtension
  isExternal: true
  name: MergeTime(String, Double)
  nameWithType: IToolStringExtension.MergeTime(String, Double)
  fullName: Funique.IToolStringExtension.MergeTime(System.String, System.Double)
  spec.csharp:
  - uid: Funique.IToolStringExtension.MergeTime(System.String,System.Double)
    name: MergeTime
    nameWithType: IToolStringExtension.MergeTime
    fullName: Funique.IToolStringExtension.MergeTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolStringExtension.MergeTime(System.String,System.Double)
    name: MergeTime
    nameWithType: IToolStringExtension.MergeTime
    fullName: Funique.IToolStringExtension.MergeTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.IToolStringExtension.DetectStereoMode(System.String)
  commentId: M:Funique.IToolStringExtension.DetectStereoMode(System.String)
  parent: Funique.IToolStringExtension
  isExternal: true
  name: DetectStereoMode(String)
  nameWithType: IToolStringExtension.DetectStereoMode(String)
  fullName: Funique.IToolStringExtension.DetectStereoMode(System.String)
  spec.csharp:
  - uid: Funique.IToolStringExtension.DetectStereoMode(System.String)
    name: DetectStereoMode
    nameWithType: IToolStringExtension.DetectStereoMode
    fullName: Funique.IToolStringExtension.DetectStereoMode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolStringExtension.DetectStereoMode(System.String)
    name: DetectStereoMode
    nameWithType: IToolStringExtension.DetectStereoMode
    fullName: Funique.IToolStringExtension.DetectStereoMode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.IToolPlayerInformationExtension.RandomID(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.Int32)
  commentId: M:Funique.IToolPlayerInformationExtension.RandomID(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.Int32)
  parent: Funique.IToolPlayerInformationExtension
  isExternal: true
  name: RandomID(Dictionary<String, PlayerInformation>, Int32)
  nameWithType: IToolPlayerInformationExtension.RandomID(Dictionary<String, PlayerInformation>, Int32)
  fullName: Funique.IToolPlayerInformationExtension.RandomID(System.Collections.Generic.Dictionary<System.String, Funique.PlayerInformation>, System.Int32)
  nameWithType.vb: IToolPlayerInformationExtension.RandomID(Dictionary(Of String, PlayerInformation), Int32)
  fullName.vb: Funique.IToolPlayerInformationExtension.RandomID(System.Collections.Generic.Dictionary(Of System.String, Funique.PlayerInformation), System.Int32)
  name.vb: RandomID(Dictionary(Of String, PlayerInformation), Int32)
  spec.csharp:
  - uid: Funique.IToolPlayerInformationExtension.RandomID(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.Int32)
    name: RandomID
    nameWithType: IToolPlayerInformationExtension.RandomID
    fullName: Funique.IToolPlayerInformationExtension.RandomID
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Funique.PlayerInformation
    name: PlayerInformation
    nameWithType: PlayerInformation
    fullName: Funique.PlayerInformation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolPlayerInformationExtension.RandomID(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.Int32)
    name: RandomID
    nameWithType: IToolPlayerInformationExtension.RandomID
    fullName: Funique.IToolPlayerInformationExtension.RandomID
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Funique.PlayerInformation
    name: PlayerInformation
    nameWithType: PlayerInformation
    fullName: Funique.PlayerInformation
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.IToolPlayerInformationExtension.RandomIP(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.Int32)
  commentId: M:Funique.IToolPlayerInformationExtension.RandomIP(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.Int32)
  parent: Funique.IToolPlayerInformationExtension
  isExternal: true
  name: RandomIP(Dictionary<String, PlayerInformation>, Int32)
  nameWithType: IToolPlayerInformationExtension.RandomIP(Dictionary<String, PlayerInformation>, Int32)
  fullName: Funique.IToolPlayerInformationExtension.RandomIP(System.Collections.Generic.Dictionary<System.String, Funique.PlayerInformation>, System.Int32)
  nameWithType.vb: IToolPlayerInformationExtension.RandomIP(Dictionary(Of String, PlayerInformation), Int32)
  fullName.vb: Funique.IToolPlayerInformationExtension.RandomIP(System.Collections.Generic.Dictionary(Of System.String, Funique.PlayerInformation), System.Int32)
  name.vb: RandomIP(Dictionary(Of String, PlayerInformation), Int32)
  spec.csharp:
  - uid: Funique.IToolPlayerInformationExtension.RandomIP(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.Int32)
    name: RandomIP
    nameWithType: IToolPlayerInformationExtension.RandomIP
    fullName: Funique.IToolPlayerInformationExtension.RandomIP
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Funique.PlayerInformation
    name: PlayerInformation
    nameWithType: PlayerInformation
    fullName: Funique.PlayerInformation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolPlayerInformationExtension.RandomIP(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.Int32)
    name: RandomIP
    nameWithType: IToolPlayerInformationExtension.RandomIP
    fullName: Funique.IToolPlayerInformationExtension.RandomIP
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Funique.PlayerInformation
    name: PlayerInformation
    nameWithType: PlayerInformation
    fullName: Funique.PlayerInformation
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.IToolPlayerInformationExtension.CheckRepeatID(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.Int32)
  commentId: M:Funique.IToolPlayerInformationExtension.CheckRepeatID(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.Int32)
  parent: Funique.IToolPlayerInformationExtension
  isExternal: true
  name: CheckRepeatID(Dictionary<String, PlayerInformation>, Int32)
  nameWithType: IToolPlayerInformationExtension.CheckRepeatID(Dictionary<String, PlayerInformation>, Int32)
  fullName: Funique.IToolPlayerInformationExtension.CheckRepeatID(System.Collections.Generic.Dictionary<System.String, Funique.PlayerInformation>, System.Int32)
  nameWithType.vb: IToolPlayerInformationExtension.CheckRepeatID(Dictionary(Of String, PlayerInformation), Int32)
  fullName.vb: Funique.IToolPlayerInformationExtension.CheckRepeatID(System.Collections.Generic.Dictionary(Of System.String, Funique.PlayerInformation), System.Int32)
  name.vb: CheckRepeatID(Dictionary(Of String, PlayerInformation), Int32)
  spec.csharp:
  - uid: Funique.IToolPlayerInformationExtension.CheckRepeatID(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.Int32)
    name: CheckRepeatID
    nameWithType: IToolPlayerInformationExtension.CheckRepeatID
    fullName: Funique.IToolPlayerInformationExtension.CheckRepeatID
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Funique.PlayerInformation
    name: PlayerInformation
    nameWithType: PlayerInformation
    fullName: Funique.PlayerInformation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolPlayerInformationExtension.CheckRepeatID(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.Int32)
    name: CheckRepeatID
    nameWithType: IToolPlayerInformationExtension.CheckRepeatID
    fullName: Funique.IToolPlayerInformationExtension.CheckRepeatID
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Funique.PlayerInformation
    name: PlayerInformation
    nameWithType: PlayerInformation
    fullName: Funique.PlayerInformation
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.IToolPlayerInformationExtension.CheckRepeatIP(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.String)
  commentId: M:Funique.IToolPlayerInformationExtension.CheckRepeatIP(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.String)
  parent: Funique.IToolPlayerInformationExtension
  isExternal: true
  name: CheckRepeatIP(Dictionary<String, PlayerInformation>, String)
  nameWithType: IToolPlayerInformationExtension.CheckRepeatIP(Dictionary<String, PlayerInformation>, String)
  fullName: Funique.IToolPlayerInformationExtension.CheckRepeatIP(System.Collections.Generic.Dictionary<System.String, Funique.PlayerInformation>, System.String)
  nameWithType.vb: IToolPlayerInformationExtension.CheckRepeatIP(Dictionary(Of String, PlayerInformation), String)
  fullName.vb: Funique.IToolPlayerInformationExtension.CheckRepeatIP(System.Collections.Generic.Dictionary(Of System.String, Funique.PlayerInformation), System.String)
  name.vb: CheckRepeatIP(Dictionary(Of String, PlayerInformation), String)
  spec.csharp:
  - uid: Funique.IToolPlayerInformationExtension.CheckRepeatIP(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.String)
    name: CheckRepeatIP
    nameWithType: IToolPlayerInformationExtension.CheckRepeatIP
    fullName: Funique.IToolPlayerInformationExtension.CheckRepeatIP
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Funique.PlayerInformation
    name: PlayerInformation
    nameWithType: PlayerInformation
    fullName: Funique.PlayerInformation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolPlayerInformationExtension.CheckRepeatIP(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.String)
    name: CheckRepeatIP
    nameWithType: IToolPlayerInformationExtension.CheckRepeatIP
    fullName: Funique.IToolPlayerInformationExtension.CheckRepeatIP
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Funique.PlayerInformation
    name: PlayerInformation
    nameWithType: PlayerInformation
    fullName: Funique.PlayerInformation
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.IToolVideoInfoExtension
  commentId: T:Funique.IToolVideoInfoExtension
  parent: Funique
  name: IToolVideoInfoExtension
  nameWithType: IToolVideoInfoExtension
  fullName: Funique.IToolVideoInfoExtension
- uid: Funique.IToolStringExtension
  commentId: T:Funique.IToolStringExtension
  parent: Funique
  name: IToolStringExtension
  nameWithType: IToolStringExtension
  fullName: Funique.IToolStringExtension
- uid: Funique.IToolPlayerInformationExtension
  commentId: T:Funique.IToolPlayerInformationExtension
  parent: Funique
  name: IToolPlayerInformationExtension
  nameWithType: IToolPlayerInformationExtension
  fullName: Funique.IToolPlayerInformationExtension
- uid: Funique.IToolUtility.GetMenuUIPosition*
  commentId: Overload:Funique.IToolUtility.GetMenuUIPosition
  name: GetMenuUIPosition
  nameWithType: IToolUtility.GetMenuUIPosition
  fullName: Funique.IToolUtility.GetMenuUIPosition
- uid: UnityEngine.Transform
  commentId: T:UnityEngine.Transform
  parent: UnityEngine
  isExternal: true
  name: Transform
  nameWithType: Transform
  fullName: UnityEngine.Transform
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: UnityEngine.Vector3
  commentId: T:UnityEngine.Vector3
  parent: UnityEngine
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: UnityEngine.Vector3
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Funique.IToolUtility.CheckRaycast*
  commentId: Overload:Funique.IToolUtility.CheckRaycast
  name: CheckRaycast
  nameWithType: IToolUtility.CheckRaycast
  fullName: Funique.IToolUtility.CheckRaycast
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Funique.IToolUtility.AddBtnEvent*
  commentId: Overload:Funique.IToolUtility.AddBtnEvent
  name: AddBtnEvent
  nameWithType: IToolUtility.AddBtnEvent
  fullName: Funique.IToolUtility.AddBtnEvent
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: UnityEngine.Events.UnityAction
  commentId: T:UnityEngine.Events.UnityAction
  parent: UnityEngine.Events
  isExternal: true
  name: UnityAction
  nameWithType: UnityAction
  fullName: UnityEngine.Events.UnityAction
- uid: UnityEngine.EventSystems.EventTriggerType
  commentId: T:UnityEngine.EventSystems.EventTriggerType
  parent: UnityEngine.EventSystems
  isExternal: true
  name: EventTriggerType
  nameWithType: EventTriggerType
  fullName: UnityEngine.EventSystems.EventTriggerType
- uid: UnityEngine.Events
  commentId: N:UnityEngine.Events
  isExternal: true
  name: UnityEngine.Events
  nameWithType: UnityEngine.Events
  fullName: UnityEngine.Events
- uid: UnityEngine.EventSystems
  commentId: N:UnityEngine.EventSystems
  isExternal: true
  name: UnityEngine.EventSystems
  nameWithType: UnityEngine.EventSystems
  fullName: UnityEngine.EventSystems
- uid: UnityEngine.Events.UnityAction{{T}}
  commentId: T:UnityEngine.Events.UnityAction{``0}
  parent: UnityEngine.Events
  definition: UnityEngine.Events.UnityAction`1
  name: UnityAction<T>
  nameWithType: UnityAction<T>
  fullName: UnityEngine.Events.UnityAction<T>
  nameWithType.vb: UnityAction(Of T)
  fullName.vb: UnityEngine.Events.UnityAction(Of T)
  name.vb: UnityAction(Of T)
  spec.csharp:
  - uid: UnityEngine.Events.UnityAction`1
    name: UnityAction
    nameWithType: UnityAction
    fullName: UnityEngine.Events.UnityAction
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: UnityEngine.Events.UnityAction`1
    name: UnityAction
    nameWithType: UnityAction
    fullName: UnityEngine.Events.UnityAction
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: UnityEngine.Events.UnityAction`1
  commentId: T:UnityEngine.Events.UnityAction`1
  isExternal: true
  name: UnityAction<T0>
  nameWithType: UnityAction<T0>
  fullName: UnityEngine.Events.UnityAction<T0>
  nameWithType.vb: UnityAction(Of T0)
  fullName.vb: UnityEngine.Events.UnityAction(Of T0)
  name.vb: UnityAction(Of T0)
  spec.csharp:
  - uid: UnityEngine.Events.UnityAction`1
    name: UnityAction
    nameWithType: UnityAction
    fullName: UnityEngine.Events.UnityAction
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T0
    nameWithType: T0
    fullName: T0
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: UnityEngine.Events.UnityAction`1
    name: UnityAction
    nameWithType: UnityAction
    fullName: UnityEngine.Events.UnityAction
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T0
    nameWithType: T0
    fullName: T0
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Funique.IToolUtility.MoveListItem*
  commentId: Overload:Funique.IToolUtility.MoveListItem
  name: MoveListItem
  nameWithType: IToolUtility.MoveListItem
  fullName: Funique.IToolUtility.MoveListItem
- uid: System.Collections.Generic.IList{{T}}
  commentId: T:System.Collections.Generic.IList{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Funique.IToolUtility.DetectInWindows*
  commentId: Overload:Funique.IToolUtility.DetectInWindows
  name: DetectInWindows
  nameWithType: IToolUtility.DetectInWindows
  fullName: Funique.IToolUtility.DetectInWindows
- uid: Funique.IToolUtility.GetSelfIPAddress*
  commentId: Overload:Funique.IToolUtility.GetSelfIPAddress
  name: GetSelfIPAddress
  nameWithType: IToolUtility.GetSelfIPAddress
  fullName: Funique.IToolUtility.GetSelfIPAddress
- uid: Funique.IToolUtility.GetIPRange*
  commentId: Overload:Funique.IToolUtility.GetIPRange
  name: GetIPRange
  nameWithType: IToolUtility.GetIPRange
  fullName: Funique.IToolUtility.GetIPRange
- uid: System.Net.IPAddress
  commentId: T:System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Net.IPAddress[]
  isExternal: true
  name: IPAddress[]
  nameWithType: IPAddress[]
  fullName: System.Net.IPAddress[]
  nameWithType.vb: IPAddress()
  fullName.vb: System.Net.IPAddress()
  name.vb: IPAddress()
  spec.csharp:
  - uid: System.Net.IPAddress
    name: IPAddress
    nameWithType: IPAddress
    fullName: System.Net.IPAddress
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Net.IPAddress
    name: IPAddress
    nameWithType: IPAddress
    fullName: System.Net.IPAddress
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: Funique.IToolUtility.TextureCompression*
  commentId: Overload:Funique.IToolUtility.TextureCompression
  name: TextureCompression
  nameWithType: IToolUtility.TextureCompression
  fullName: Funique.IToolUtility.TextureCompression
- uid: UnityEngine.Texture2D
  commentId: T:UnityEngine.Texture2D
  parent: UnityEngine
  isExternal: true
  name: Texture2D
  nameWithType: Texture2D
  fullName: UnityEngine.Texture2D
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Funique.IToolUtility.ObjShowInHMD*
  commentId: Overload:Funique.IToolUtility.ObjShowInHMD
  name: ObjShowInHMD
  nameWithType: IToolUtility.ObjShowInHMD
  fullName: Funique.IToolUtility.ObjShowInHMD
- uid: Funique.IToolUtility.ReadImg*
  commentId: Overload:Funique.IToolUtility.ReadImg
  name: ReadImg
  nameWithType: IToolUtility.ReadImg
  fullName: Funique.IToolUtility.ReadImg
- uid: UnityEngine.Sprite
  commentId: T:UnityEngine.Sprite
  parent: UnityEngine
  isExternal: true
  name: Sprite
  nameWithType: Sprite
  fullName: UnityEngine.Sprite
- uid: Funique.IToolUtility.ReadTexture*
  commentId: Overload:Funique.IToolUtility.ReadTexture
  name: ReadTexture
  nameWithType: IToolUtility.ReadTexture
  fullName: Funique.IToolUtility.ReadTexture
- uid: Funique.IToolUtility.FFmpegSetVideoInfo*
  commentId: Overload:Funique.IToolUtility.FFmpegSetVideoInfo
  name: FFmpegSetVideoInfo
  nameWithType: IToolUtility.FFmpegSetVideoInfo
  fullName: Funique.IToolUtility.FFmpegSetVideoInfo
- uid: Funique.VideoInfo
  commentId: T:Funique.VideoInfo
  parent: Funique
  name: VideoInfo
  nameWithType: VideoInfo
  fullName: Funique.VideoInfo
- uid: Funique.IToolUtility.FFmpegDurationTime*
  commentId: Overload:Funique.IToolUtility.FFmpegDurationTime
  name: FFmpegDurationTime
  nameWithType: IToolUtility.FFmpegDurationTime
  fullName: Funique.IToolUtility.FFmpegDurationTime
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Funique.IToolUtility.FFmpegAudioChannel*
  commentId: Overload:Funique.IToolUtility.FFmpegAudioChannel
  name: FFmpegAudioChannel
  nameWithType: IToolUtility.FFmpegAudioChannel
  fullName: Funique.IToolUtility.FFmpegAudioChannel
- uid: Funique.IToolUtility.FileSearch*
  commentId: Overload:Funique.IToolUtility.FileSearch
  name: FileSearch
  nameWithType: IToolUtility.FileSearch
  fullName: Funique.IToolUtility.FileSearch
- uid: Funique.IToolUtility.ResetCalculation*
  commentId: Overload:Funique.IToolUtility.ResetCalculation
  name: ResetCalculation
  nameWithType: IToolUtility.ResetCalculation
  fullName: Funique.IToolUtility.ResetCalculation
- uid: Funique.IToolUtility.AddEventTrigger*
  commentId: Overload:Funique.IToolUtility.AddEventTrigger
  name: AddEventTrigger
  nameWithType: IToolUtility.AddEventTrigger
  fullName: Funique.IToolUtility.AddEventTrigger
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
