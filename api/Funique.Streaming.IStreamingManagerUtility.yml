### YamlMime:ManagedReference
items:
- uid: Funique.Streaming.IStreamingManagerUtility
  commentId: T:Funique.Streaming.IStreamingManagerUtility
  id: IStreamingManagerUtility
  parent: Funique.Streaming
  children:
  - Funique.Streaming.IStreamingManagerUtility.Controller
  - Funique.Streaming.IStreamingManagerUtility.CurrentStreaming
  - Funique.Streaming.IStreamingManagerUtility.DecodeStreamingVideoList(System.String)
  - Funique.Streaming.IStreamingManagerUtility.DetectURLVideoFilename(System.String)
  - Funique.Streaming.IStreamingManagerUtility.GetCinemaStreamingWorker(System.Int32)
  - Funique.Streaming.IStreamingManagerUtility.HasStreaming(System.Int32)
  - Funique.Streaming.IStreamingManagerUtility.RestartNginx
  - Funique.Streaming.IStreamingManagerUtility.SetURLInformation(System.String)
  - Funique.Streaming.IStreamingManagerUtility.SetURLPlayerState(System.Boolean,Funique.PlayerState)
  - Funique.Streaming.IStreamingManagerUtility.StreamingButton
  - Funique.Streaming.IStreamingManagerUtility.StreamingStrConvertVideoInfo(System.String,System.Collections.Generic.List{Funique.StreamingVideoInfo}@)
  - Funique.Streaming.IStreamingManagerUtility.StreamingVideoList
  - Funique.Streaming.IStreamingManagerUtility.WorkerChanged
  langs:
  - csharp
  - vb
  name: IStreamingManagerUtility
  nameWithType: IStreamingManagerUtility
  fullName: Funique.Streaming.IStreamingManagerUtility
  type: Interface
  source:
    remote:
      path: Interface/IStreamingManagerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: IStreamingManagerUtility
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/Interface/IStreamingManagerUtility.cs
    startLine: 6
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  syntax:
    content: 'public interface IStreamingManagerUtility : Im3u8Streaming'
    content.vb: >-
      Public Interface IStreamingManagerUtility

          Inherits Im3u8Streaming
  inheritedMembers:
  - Funique.Im3u8Streaming.CurrentCinemaIndex
  - Funique.Im3u8Streaming.URL
  - Funique.Im3u8Streaming.VideoURL
  - Funique.Im3u8Streaming.NginxVideoPath
  - Funique.Im3u8Streaming.CurrentCinemaforDirectoryName
  - Funique.Im3u8Streaming.TheFileDetectedtoMoveinitmp4
  - Funique.Im3u8Streaming.m3u8fileName
  - Funique.Im3u8Streaming.CheckInitCinema
  - Funique.Im3u8Streaming.CanCreatm3u8
  - Funique.Im3u8Streaming.WaitingCallClinetPlay(Funique.Streaming.IFFmpegWorker,System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Funique.Streaming.IStreamingManagerUtility.StreamingVideoList
  commentId: P:Funique.Streaming.IStreamingManagerUtility.StreamingVideoList
  id: StreamingVideoList
  parent: Funique.Streaming.IStreamingManagerUtility
  langs:
  - csharp
  - vb
  name: StreamingVideoList
  nameWithType: IStreamingManagerUtility.StreamingVideoList
  fullName: Funique.Streaming.IStreamingManagerUtility.StreamingVideoList
  type: Property
  source:
    remote:
      path: Interface/IStreamingManagerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: StreamingVideoList
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/Interface/IStreamingManagerUtility.cs
    startLine: 13
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  summary: "\nList for stored streaming video <br />\n------------------------------------------------ <br />\n串流影像清單\n"
  example: []
  syntax:
    content: List<StreamingVideoInfo> StreamingVideoList { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Funique.StreamingVideoInfo}
    content.vb: ReadOnly Property StreamingVideoList As List(Of StreamingVideoInfo)
  overload: Funique.Streaming.IStreamingManagerUtility.StreamingVideoList*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Funique.Streaming.IStreamingManagerUtility.CurrentStreaming
  commentId: P:Funique.Streaming.IStreamingManagerUtility.CurrentStreaming
  id: CurrentStreaming
  parent: Funique.Streaming.IStreamingManagerUtility
  langs:
  - csharp
  - vb
  name: CurrentStreaming
  nameWithType: IStreamingManagerUtility.CurrentStreaming
  fullName: Funique.Streaming.IStreamingManagerUtility.CurrentStreaming
  type: Property
  source:
    remote:
      path: Interface/IStreamingManagerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: CurrentStreaming
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/Interface/IStreamingManagerUtility.cs
    startLine: 19
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  summary: "\nCurrent streaming content <br />\n------------------------------------------------ <br />\n現今串流的內容\n"
  example: []
  syntax:
    content: StreamingVideoInfo CurrentStreaming { get; }
    parameters: []
    return:
      type: Funique.StreamingVideoInfo
    content.vb: ReadOnly Property CurrentStreaming As StreamingVideoInfo
  overload: Funique.Streaming.IStreamingManagerUtility.CurrentStreaming*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Funique.Streaming.IStreamingManagerUtility.StreamingButton
  commentId: P:Funique.Streaming.IStreamingManagerUtility.StreamingButton
  id: StreamingButton
  parent: Funique.Streaming.IStreamingManagerUtility
  langs:
  - csharp
  - vb
  name: StreamingButton
  nameWithType: IStreamingManagerUtility.StreamingButton
  fullName: Funique.Streaming.IStreamingManagerUtility.StreamingButton
  type: Property
  source:
    remote:
      path: Interface/IStreamingManagerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: StreamingButton
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/Interface/IStreamingManagerUtility.cs
    startLine: 20
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  syntax:
    content: GameObject StreamingButton { get; }
    parameters: []
    return:
      type: UnityEngine.GameObject
    content.vb: ReadOnly Property StreamingButton As GameObject
  overload: Funique.Streaming.IStreamingManagerUtility.StreamingButton*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Funique.Streaming.IStreamingManagerUtility.Controller
  commentId: P:Funique.Streaming.IStreamingManagerUtility.Controller
  id: Controller
  parent: Funique.Streaming.IStreamingManagerUtility
  langs:
  - csharp
  - vb
  name: Controller
  nameWithType: IStreamingManagerUtility.Controller
  fullName: Funique.Streaming.IStreamingManagerUtility.Controller
  type: Property
  source:
    remote:
      path: Interface/IStreamingManagerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: Controller
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/Interface/IStreamingManagerUtility.cs
    startLine: 21
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  syntax:
    content: StreamingControllerBase Controller { get; }
    parameters: []
    return:
      type: Funique.Streaming.StreamingControllerBase
    content.vb: ReadOnly Property Controller As StreamingControllerBase
  overload: Funique.Streaming.IStreamingManagerUtility.Controller*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Funique.Streaming.IStreamingManagerUtility.WorkerChanged
  commentId: E:Funique.Streaming.IStreamingManagerUtility.WorkerChanged
  id: WorkerChanged
  parent: Funique.Streaming.IStreamingManagerUtility
  langs:
  - csharp
  - vb
  name: WorkerChanged
  nameWithType: IStreamingManagerUtility.WorkerChanged
  fullName: Funique.Streaming.IStreamingManagerUtility.WorkerChanged
  type: Event
  source:
    remote:
      path: Interface/IStreamingManagerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: WorkerChanged
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/Interface/IStreamingManagerUtility.cs
    startLine: 22
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  syntax:
    content: event EventHandler<IFFmpegWorker> WorkerChanged
    return:
      type: System.EventHandler{Funique.Streaming.IFFmpegWorker}
    content.vb: Event WorkerChanged As EventHandler(Of IFFmpegWorker)
- uid: Funique.Streaming.IStreamingManagerUtility.HasStreaming(System.Int32)
  commentId: M:Funique.Streaming.IStreamingManagerUtility.HasStreaming(System.Int32)
  id: HasStreaming(System.Int32)
  parent: Funique.Streaming.IStreamingManagerUtility
  langs:
  - csharp
  - vb
  name: HasStreaming(Int32)
  nameWithType: IStreamingManagerUtility.HasStreaming(Int32)
  fullName: Funique.Streaming.IStreamingManagerUtility.HasStreaming(System.Int32)
  type: Method
  source:
    remote:
      path: Interface/IStreamingManagerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: HasStreaming
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/Interface/IStreamingManagerUtility.cs
    startLine: 24
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  syntax:
    content: bool HasStreaming(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Function HasStreaming(index As Integer) As Boolean
  overload: Funique.Streaming.IStreamingManagerUtility.HasStreaming*
- uid: Funique.Streaming.IStreamingManagerUtility.GetCinemaStreamingWorker(System.Int32)
  commentId: M:Funique.Streaming.IStreamingManagerUtility.GetCinemaStreamingWorker(System.Int32)
  id: GetCinemaStreamingWorker(System.Int32)
  parent: Funique.Streaming.IStreamingManagerUtility
  langs:
  - csharp
  - vb
  name: GetCinemaStreamingWorker(Int32)
  nameWithType: IStreamingManagerUtility.GetCinemaStreamingWorker(Int32)
  fullName: Funique.Streaming.IStreamingManagerUtility.GetCinemaStreamingWorker(System.Int32)
  type: Method
  source:
    remote:
      path: Interface/IStreamingManagerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: GetCinemaStreamingWorker
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/Interface/IStreamingManagerUtility.cs
    startLine: 25
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  syntax:
    content: IFFmpegWorker GetCinemaStreamingWorker(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: Funique.Streaming.IFFmpegWorker
    content.vb: Function GetCinemaStreamingWorker(index As Integer) As IFFmpegWorker
  overload: Funique.Streaming.IStreamingManagerUtility.GetCinemaStreamingWorker*
- uid: Funique.Streaming.IStreamingManagerUtility.SetURLPlayerState(System.Boolean,Funique.PlayerState)
  commentId: M:Funique.Streaming.IStreamingManagerUtility.SetURLPlayerState(System.Boolean,Funique.PlayerState)
  id: SetURLPlayerState(System.Boolean,Funique.PlayerState)
  parent: Funique.Streaming.IStreamingManagerUtility
  langs:
  - csharp
  - vb
  name: SetURLPlayerState(Boolean, PlayerState)
  nameWithType: IStreamingManagerUtility.SetURLPlayerState(Boolean, PlayerState)
  fullName: Funique.Streaming.IStreamingManagerUtility.SetURLPlayerState(System.Boolean, Funique.PlayerState)
  type: Method
  source:
    remote:
      path: Interface/IStreamingManagerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: SetURLPlayerState
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/Interface/IStreamingManagerUtility.cs
    startLine: 33
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  summary: "\nUpdate the streaming panel user interface state <br />\n------------------------------------------------ <br />\n更新串流面板使用者面的狀態\n"
  example: []
  syntax:
    content: void SetURLPlayerState(bool status, PlayerState playerState = PlayerState.Playing)
    parameters:
    - id: status
      type: System.Boolean
      description: State
    - id: playerState
      type: Funique.PlayerState
      description: Play State
    content.vb: Sub SetURLPlayerState(status As Boolean, playerState As PlayerState = PlayerState.Playing)
  overload: Funique.Streaming.IStreamingManagerUtility.SetURLPlayerState*
- uid: Funique.Streaming.IStreamingManagerUtility.DecodeStreamingVideoList(System.String)
  commentId: M:Funique.Streaming.IStreamingManagerUtility.DecodeStreamingVideoList(System.String)
  id: DecodeStreamingVideoList(System.String)
  parent: Funique.Streaming.IStreamingManagerUtility
  langs:
  - csharp
  - vb
  name: DecodeStreamingVideoList(String)
  nameWithType: IStreamingManagerUtility.DecodeStreamingVideoList(String)
  fullName: Funique.Streaming.IStreamingManagerUtility.DecodeStreamingVideoList(System.String)
  type: Method
  source:
    remote:
      path: Interface/IStreamingManagerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: DecodeStreamingVideoList
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/Interface/IStreamingManagerUtility.cs
    startLine: 41
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  summary: "\nDecode a string into list of streaming <br />\n------------------------------------------------ <br />\n解碼字串至串流清單\n"
  example: []
  syntax:
    content: List<StreamingVideoInfo> DecodeStreamingVideoList(string streamingVideoString)
    parameters:
    - id: streamingVideoString
      type: System.String
      description: Target string to decode
    return:
      type: System.Collections.Generic.List{Funique.StreamingVideoInfo}
      description: ''
    content.vb: Function DecodeStreamingVideoList(streamingVideoString As String) As List(Of StreamingVideoInfo)
  overload: Funique.Streaming.IStreamingManagerUtility.DecodeStreamingVideoList*
- uid: Funique.Streaming.IStreamingManagerUtility.StreamingStrConvertVideoInfo(System.String,System.Collections.Generic.List{Funique.StreamingVideoInfo}@)
  commentId: M:Funique.Streaming.IStreamingManagerUtility.StreamingStrConvertVideoInfo(System.String,System.Collections.Generic.List{Funique.StreamingVideoInfo}@)
  id: StreamingStrConvertVideoInfo(System.String,System.Collections.Generic.List{Funique.StreamingVideoInfo}@)
  parent: Funique.Streaming.IStreamingManagerUtility
  langs:
  - csharp
  - vb
  name: StreamingStrConvertVideoInfo(String, ref List<StreamingVideoInfo>)
  nameWithType: IStreamingManagerUtility.StreamingStrConvertVideoInfo(String, ref List<StreamingVideoInfo>)
  fullName: Funique.Streaming.IStreamingManagerUtility.StreamingStrConvertVideoInfo(System.String, ref System.Collections.Generic.List<Funique.StreamingVideoInfo>)
  type: Method
  source:
    remote:
      path: Interface/IStreamingManagerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: StreamingStrConvertVideoInfo
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/Interface/IStreamingManagerUtility.cs
    startLine: 49
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  summary: "\nDecode a string and append to gaven streaming list\n------------------------------------------------ <br />\n解碼字串至串流影像資料, 並加入至給予清單中\n"
  example: []
  syntax:
    content: void StreamingStrConvertVideoInfo(string streamingString, ref List<StreamingVideoInfo> streamingVideoList)
    parameters:
    - id: streamingString
      type: System.String
      description: Target string to decode
    - id: streamingVideoList
      type: System.Collections.Generic.List{Funique.StreamingVideoInfo}
      description: Gaven streaming list
    content.vb: Sub StreamingStrConvertVideoInfo(streamingString As String, ByRef streamingVideoList As List(Of StreamingVideoInfo))
  overload: Funique.Streaming.IStreamingManagerUtility.StreamingStrConvertVideoInfo*
  nameWithType.vb: IStreamingManagerUtility.StreamingStrConvertVideoInfo(String, ByRef List(Of StreamingVideoInfo))
  fullName.vb: Funique.Streaming.IStreamingManagerUtility.StreamingStrConvertVideoInfo(System.String, ByRef System.Collections.Generic.List(Of Funique.StreamingVideoInfo))
  name.vb: StreamingStrConvertVideoInfo(String, ByRef List(Of StreamingVideoInfo))
- uid: Funique.Streaming.IStreamingManagerUtility.DetectURLVideoFilename(System.String)
  commentId: M:Funique.Streaming.IStreamingManagerUtility.DetectURLVideoFilename(System.String)
  id: DetectURLVideoFilename(System.String)
  parent: Funique.Streaming.IStreamingManagerUtility
  langs:
  - csharp
  - vb
  name: DetectURLVideoFilename(String)
  nameWithType: IStreamingManagerUtility.DetectURLVideoFilename(String)
  fullName: Funique.Streaming.IStreamingManagerUtility.DetectURLVideoFilename(System.String)
  type: Method
  source:
    remote:
      path: Interface/IStreamingManagerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: DetectURLVideoFilename
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/Interface/IStreamingManagerUtility.cs
    startLine: 59
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  summary: "\nURL to filename <br />\n------------------------------------------------ <br />\n位址轉碼檔名 <br />\n&quot;ip/video/filename.mp4&quot; = &quot;filename&quot; <br />\n&quot;ip/video/filename.3dv.mp4&quot; = &quot;filename.3dv&quot;\n"
  example: []
  syntax:
    content: string DetectURLVideoFilename(string URL)
    parameters:
    - id: URL
      type: System.String
      description: Target URL string
    return:
      type: System.String
      description: ''
    content.vb: Function DetectURLVideoFilename(URL As String) As String
  overload: Funique.Streaming.IStreamingManagerUtility.DetectURLVideoFilename*
- uid: Funique.Streaming.IStreamingManagerUtility.SetURLInformation(System.String)
  commentId: M:Funique.Streaming.IStreamingManagerUtility.SetURLInformation(System.String)
  id: SetURLInformation(System.String)
  parent: Funique.Streaming.IStreamingManagerUtility
  langs:
  - csharp
  - vb
  name: SetURLInformation(String)
  nameWithType: IStreamingManagerUtility.SetURLInformation(String)
  fullName: Funique.Streaming.IStreamingManagerUtility.SetURLInformation(System.String)
  type: Method
  source:
    remote:
      path: Interface/IStreamingManagerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: SetURLInformation
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/Interface/IStreamingManagerUtility.cs
    startLine: 68
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  summary: "\nSetup the url and file and configuration <br />\nThis method usually call before exeution <br />\n------------------------------------------------ <br />\n設置位址跟設定資料 <br />\n這個函式通常在執行前會呼叫\n"
  example: []
  syntax:
    content: void SetURLInformation(string url)
    parameters:
    - id: url
      type: System.String
      description: ''
    content.vb: Sub SetURLInformation(url As String)
  overload: Funique.Streaming.IStreamingManagerUtility.SetURLInformation*
- uid: Funique.Streaming.IStreamingManagerUtility.RestartNginx
  commentId: M:Funique.Streaming.IStreamingManagerUtility.RestartNginx
  id: RestartNginx
  parent: Funique.Streaming.IStreamingManagerUtility
  langs:
  - csharp
  - vb
  name: RestartNginx()
  nameWithType: IStreamingManagerUtility.RestartNginx()
  fullName: Funique.Streaming.IStreamingManagerUtility.RestartNginx()
  type: Method
  source:
    remote:
      path: Interface/IStreamingManagerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: RestartNginx
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/Interface/IStreamingManagerUtility.cs
    startLine: 69
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  syntax:
    content: void RestartNginx()
    content.vb: Sub RestartNginx
  overload: Funique.Streaming.IStreamingManagerUtility.RestartNginx*
references:
- uid: Funique.Streaming
  commentId: N:Funique.Streaming
  name: Funique.Streaming
  nameWithType: Funique.Streaming
  fullName: Funique.Streaming
- uid: Funique.Im3u8Streaming.CurrentCinemaIndex
  commentId: P:Funique.Im3u8Streaming.CurrentCinemaIndex
  parent: Funique.Im3u8Streaming
  name: CurrentCinemaIndex
  nameWithType: Im3u8Streaming.CurrentCinemaIndex
  fullName: Funique.Im3u8Streaming.CurrentCinemaIndex
- uid: Funique.Im3u8Streaming.URL
  commentId: P:Funique.Im3u8Streaming.URL
  parent: Funique.Im3u8Streaming
  name: URL
  nameWithType: Im3u8Streaming.URL
  fullName: Funique.Im3u8Streaming.URL
- uid: Funique.Im3u8Streaming.VideoURL
  commentId: P:Funique.Im3u8Streaming.VideoURL
  parent: Funique.Im3u8Streaming
  name: VideoURL
  nameWithType: Im3u8Streaming.VideoURL
  fullName: Funique.Im3u8Streaming.VideoURL
- uid: Funique.Im3u8Streaming.NginxVideoPath
  commentId: P:Funique.Im3u8Streaming.NginxVideoPath
  parent: Funique.Im3u8Streaming
  name: NginxVideoPath
  nameWithType: Im3u8Streaming.NginxVideoPath
  fullName: Funique.Im3u8Streaming.NginxVideoPath
- uid: Funique.Im3u8Streaming.CurrentCinemaforDirectoryName
  commentId: P:Funique.Im3u8Streaming.CurrentCinemaforDirectoryName
  parent: Funique.Im3u8Streaming
  name: CurrentCinemaforDirectoryName
  nameWithType: Im3u8Streaming.CurrentCinemaforDirectoryName
  fullName: Funique.Im3u8Streaming.CurrentCinemaforDirectoryName
- uid: Funique.Im3u8Streaming.TheFileDetectedtoMoveinitmp4
  commentId: P:Funique.Im3u8Streaming.TheFileDetectedtoMoveinitmp4
  parent: Funique.Im3u8Streaming
  name: TheFileDetectedtoMoveinitmp4
  nameWithType: Im3u8Streaming.TheFileDetectedtoMoveinitmp4
  fullName: Funique.Im3u8Streaming.TheFileDetectedtoMoveinitmp4
- uid: Funique.Im3u8Streaming.m3u8fileName
  commentId: P:Funique.Im3u8Streaming.m3u8fileName
  parent: Funique.Im3u8Streaming
  name: m3u8fileName
  nameWithType: Im3u8Streaming.m3u8fileName
  fullName: Funique.Im3u8Streaming.m3u8fileName
- uid: Funique.Im3u8Streaming.CheckInitCinema
  commentId: P:Funique.Im3u8Streaming.CheckInitCinema
  parent: Funique.Im3u8Streaming
  name: CheckInitCinema
  nameWithType: Im3u8Streaming.CheckInitCinema
  fullName: Funique.Im3u8Streaming.CheckInitCinema
- uid: Funique.Im3u8Streaming.CanCreatm3u8
  commentId: P:Funique.Im3u8Streaming.CanCreatm3u8
  parent: Funique.Im3u8Streaming
  name: CanCreatm3u8
  nameWithType: Im3u8Streaming.CanCreatm3u8
  fullName: Funique.Im3u8Streaming.CanCreatm3u8
- uid: Funique.Im3u8Streaming.WaitingCallClinetPlay(Funique.Streaming.IFFmpegWorker,System.String)
  commentId: M:Funique.Im3u8Streaming.WaitingCallClinetPlay(Funique.Streaming.IFFmpegWorker,System.String)
  parent: Funique.Im3u8Streaming
  isExternal: true
  name: WaitingCallClinetPlay(IFFmpegWorker, String)
  nameWithType: Im3u8Streaming.WaitingCallClinetPlay(IFFmpegWorker, String)
  fullName: Funique.Im3u8Streaming.WaitingCallClinetPlay(Funique.Streaming.IFFmpegWorker, System.String)
  spec.csharp:
  - uid: Funique.Im3u8Streaming.WaitingCallClinetPlay(Funique.Streaming.IFFmpegWorker,System.String)
    name: WaitingCallClinetPlay
    nameWithType: Im3u8Streaming.WaitingCallClinetPlay
    fullName: Funique.Im3u8Streaming.WaitingCallClinetPlay
  - name: (
    nameWithType: (
    fullName: (
  - uid: Funique.Streaming.IFFmpegWorker
    name: IFFmpegWorker
    nameWithType: IFFmpegWorker
    fullName: Funique.Streaming.IFFmpegWorker
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Im3u8Streaming.WaitingCallClinetPlay(Funique.Streaming.IFFmpegWorker,System.String)
    name: WaitingCallClinetPlay
    nameWithType: Im3u8Streaming.WaitingCallClinetPlay
    fullName: Funique.Im3u8Streaming.WaitingCallClinetPlay
  - name: (
    nameWithType: (
    fullName: (
  - uid: Funique.Streaming.IFFmpegWorker
    name: IFFmpegWorker
    nameWithType: IFFmpegWorker
    fullName: Funique.Streaming.IFFmpegWorker
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Im3u8Streaming
  commentId: T:Funique.Im3u8Streaming
  parent: Funique
  name: Im3u8Streaming
  nameWithType: Im3u8Streaming
  fullName: Funique.Im3u8Streaming
- uid: Funique
  commentId: N:Funique
  name: Funique
  nameWithType: Funique
  fullName: Funique
- uid: Funique.Streaming.IStreamingManagerUtility.StreamingVideoList*
  commentId: Overload:Funique.Streaming.IStreamingManagerUtility.StreamingVideoList
  name: StreamingVideoList
  nameWithType: IStreamingManagerUtility.StreamingVideoList
  fullName: Funique.Streaming.IStreamingManagerUtility.StreamingVideoList
- uid: System.Collections.Generic.List{Funique.StreamingVideoInfo}
  commentId: T:System.Collections.Generic.List{Funique.StreamingVideoInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<StreamingVideoInfo>
  nameWithType: List<StreamingVideoInfo>
  fullName: System.Collections.Generic.List<Funique.StreamingVideoInfo>
  nameWithType.vb: List(Of StreamingVideoInfo)
  fullName.vb: System.Collections.Generic.List(Of Funique.StreamingVideoInfo)
  name.vb: List(Of StreamingVideoInfo)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Funique.StreamingVideoInfo
    name: StreamingVideoInfo
    nameWithType: StreamingVideoInfo
    fullName: Funique.StreamingVideoInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Funique.StreamingVideoInfo
    name: StreamingVideoInfo
    nameWithType: StreamingVideoInfo
    fullName: Funique.StreamingVideoInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Funique.Streaming.IStreamingManagerUtility.CurrentStreaming*
  commentId: Overload:Funique.Streaming.IStreamingManagerUtility.CurrentStreaming
  name: CurrentStreaming
  nameWithType: IStreamingManagerUtility.CurrentStreaming
  fullName: Funique.Streaming.IStreamingManagerUtility.CurrentStreaming
- uid: Funique.StreamingVideoInfo
  commentId: T:Funique.StreamingVideoInfo
  parent: Funique
  name: StreamingVideoInfo
  nameWithType: StreamingVideoInfo
  fullName: Funique.StreamingVideoInfo
- uid: Funique.Streaming.IStreamingManagerUtility.StreamingButton*
  commentId: Overload:Funique.Streaming.IStreamingManagerUtility.StreamingButton
  name: StreamingButton
  nameWithType: IStreamingManagerUtility.StreamingButton
  fullName: Funique.Streaming.IStreamingManagerUtility.StreamingButton
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Funique.Streaming.IStreamingManagerUtility.Controller*
  commentId: Overload:Funique.Streaming.IStreamingManagerUtility.Controller
  name: Controller
  nameWithType: IStreamingManagerUtility.Controller
  fullName: Funique.Streaming.IStreamingManagerUtility.Controller
- uid: Funique.Streaming.StreamingControllerBase
  commentId: T:Funique.Streaming.StreamingControllerBase
  parent: Funique.Streaming
  name: StreamingControllerBase
  nameWithType: StreamingControllerBase
  fullName: Funique.Streaming.StreamingControllerBase
- uid: System.EventHandler{Funique.Streaming.IFFmpegWorker}
  commentId: T:System.EventHandler{Funique.Streaming.IFFmpegWorker}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<IFFmpegWorker>
  nameWithType: EventHandler<IFFmpegWorker>
  fullName: System.EventHandler<Funique.Streaming.IFFmpegWorker>
  nameWithType.vb: EventHandler(Of IFFmpegWorker)
  fullName.vb: System.EventHandler(Of Funique.Streaming.IFFmpegWorker)
  name.vb: EventHandler(Of IFFmpegWorker)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Funique.Streaming.IFFmpegWorker
    name: IFFmpegWorker
    nameWithType: IFFmpegWorker
    fullName: Funique.Streaming.IFFmpegWorker
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Funique.Streaming.IFFmpegWorker
    name: IFFmpegWorker
    nameWithType: IFFmpegWorker
    fullName: Funique.Streaming.IFFmpegWorker
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Funique.Streaming.IStreamingManagerUtility.HasStreaming*
  commentId: Overload:Funique.Streaming.IStreamingManagerUtility.HasStreaming
  name: HasStreaming
  nameWithType: IStreamingManagerUtility.HasStreaming
  fullName: Funique.Streaming.IStreamingManagerUtility.HasStreaming
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Funique.Streaming.IStreamingManagerUtility.GetCinemaStreamingWorker*
  commentId: Overload:Funique.Streaming.IStreamingManagerUtility.GetCinemaStreamingWorker
  name: GetCinemaStreamingWorker
  nameWithType: IStreamingManagerUtility.GetCinemaStreamingWorker
  fullName: Funique.Streaming.IStreamingManagerUtility.GetCinemaStreamingWorker
- uid: Funique.Streaming.IFFmpegWorker
  commentId: T:Funique.Streaming.IFFmpegWorker
  parent: Funique.Streaming
  name: IFFmpegWorker
  nameWithType: IFFmpegWorker
  fullName: Funique.Streaming.IFFmpegWorker
- uid: Funique.Streaming.IStreamingManagerUtility.SetURLPlayerState*
  commentId: Overload:Funique.Streaming.IStreamingManagerUtility.SetURLPlayerState
  name: SetURLPlayerState
  nameWithType: IStreamingManagerUtility.SetURLPlayerState
  fullName: Funique.Streaming.IStreamingManagerUtility.SetURLPlayerState
- uid: Funique.PlayerState
  commentId: T:Funique.PlayerState
  parent: Funique
  name: PlayerState
  nameWithType: PlayerState
  fullName: Funique.PlayerState
- uid: Funique.Streaming.IStreamingManagerUtility.DecodeStreamingVideoList*
  commentId: Overload:Funique.Streaming.IStreamingManagerUtility.DecodeStreamingVideoList
  name: DecodeStreamingVideoList
  nameWithType: IStreamingManagerUtility.DecodeStreamingVideoList
  fullName: Funique.Streaming.IStreamingManagerUtility.DecodeStreamingVideoList
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Funique.Streaming.IStreamingManagerUtility.StreamingStrConvertVideoInfo*
  commentId: Overload:Funique.Streaming.IStreamingManagerUtility.StreamingStrConvertVideoInfo
  name: StreamingStrConvertVideoInfo
  nameWithType: IStreamingManagerUtility.StreamingStrConvertVideoInfo
  fullName: Funique.Streaming.IStreamingManagerUtility.StreamingStrConvertVideoInfo
- uid: Funique.Streaming.IStreamingManagerUtility.DetectURLVideoFilename*
  commentId: Overload:Funique.Streaming.IStreamingManagerUtility.DetectURLVideoFilename
  name: DetectURLVideoFilename
  nameWithType: IStreamingManagerUtility.DetectURLVideoFilename
  fullName: Funique.Streaming.IStreamingManagerUtility.DetectURLVideoFilename
- uid: Funique.Streaming.IStreamingManagerUtility.SetURLInformation*
  commentId: Overload:Funique.Streaming.IStreamingManagerUtility.SetURLInformation
  name: SetURLInformation
  nameWithType: IStreamingManagerUtility.SetURLInformation
  fullName: Funique.Streaming.IStreamingManagerUtility.SetURLInformation
- uid: Funique.Streaming.IStreamingManagerUtility.RestartNginx*
  commentId: Overload:Funique.Streaming.IStreamingManagerUtility.RestartNginx
  name: RestartNginx
  nameWithType: IStreamingManagerUtility.RestartNginx
  fullName: Funique.Streaming.IStreamingManagerUtility.RestartNginx
