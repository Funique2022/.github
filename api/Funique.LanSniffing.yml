### YamlMime:ManagedReference
items:
- uid: Funique.LanSniffing
  commentId: T:Funique.LanSniffing
  id: LanSniffing
  parent: Funique
  children:
  - Funique.LanSniffing.#ctor
  - Funique.LanSniffing.isRunning
  - Funique.LanSniffing.Rerun
  - Funique.LanSniffing.SniffingProgram
  langs:
  - csharp
  - vb
  name: LanSniffing
  nameWithType: LanSniffing
  fullName: Funique.LanSniffing
  type: Class
  source:
    remote:
      path: Plugins/Lan/LanSniffing.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: LanSniffing
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/Plugins/Lan/LanSniffing.cs
    startLine: 6
  assemblies:
  - Funique.Network
  namespace: Funique
  syntax:
    content: public class LanSniffing
    content.vb: Public Class LanSniffing
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Funique.LanSniffing.SniffingProgram
  commentId: P:Funique.LanSniffing.SniffingProgram
  id: SniffingProgram
  parent: Funique.LanSniffing
  langs:
  - csharp
  - vb
  name: SniffingProgram
  nameWithType: LanSniffing.SniffingProgram
  fullName: Funique.LanSniffing.SniffingProgram
  type: Property
  source:
    remote:
      path: Plugins/Lan/LanSniffing.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: SniffingProgram
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/Plugins/Lan/LanSniffing.cs
    startLine: 8
  assemblies:
  - Funique.Network
  namespace: Funique
  syntax:
    content: public static string SniffingProgram { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property SniffingProgram As String
  overload: Funique.LanSniffing.SniffingProgram*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Funique.LanSniffing.isRunning
  commentId: P:Funique.LanSniffing.isRunning
  id: isRunning
  parent: Funique.LanSniffing
  langs:
  - csharp
  - vb
  name: isRunning
  nameWithType: LanSniffing.isRunning
  fullName: Funique.LanSniffing.isRunning
  type: Property
  source:
    remote:
      path: Plugins/Lan/LanSniffing.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: isRunning
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/Plugins/Lan/LanSniffing.cs
    startLine: 9
  assemblies:
  - Funique.Network
  namespace: Funique
  syntax:
    content: public bool isRunning { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property isRunning As Boolean
  overload: Funique.LanSniffing.isRunning*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Funique.LanSniffing.#ctor
  commentId: M:Funique.LanSniffing.#ctor
  id: '#ctor'
  parent: Funique.LanSniffing
  langs:
  - csharp
  - vb
  name: LanSniffing()
  nameWithType: LanSniffing.LanSniffing()
  fullName: Funique.LanSniffing.LanSniffing()
  type: Constructor
  source:
    remote:
      path: Plugins/Lan/LanSniffing.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: .ctor
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/Plugins/Lan/LanSniffing.cs
    startLine: 12
  assemblies:
  - Funique.Network
  namespace: Funique
  syntax:
    content: public LanSniffing()
    content.vb: Public Sub New
  overload: Funique.LanSniffing.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.LanSniffing.Rerun
  commentId: M:Funique.LanSniffing.Rerun
  id: Rerun
  parent: Funique.LanSniffing
  langs:
  - csharp
  - vb
  name: Rerun()
  nameWithType: LanSniffing.Rerun()
  fullName: Funique.LanSniffing.Rerun()
  type: Method
  source:
    remote:
      path: Plugins/Lan/LanSniffing.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_network.git
    id: Rerun
    path: ../../../project_unity_development/Assets/FuniquePlugin/Network/Plugins/Lan/LanSniffing.cs
    startLine: 17
  assemblies:
  - Funique.Network
  namespace: Funique
  syntax:
    content: public void Rerun()
    content.vb: Public Sub Rerun
  overload: Funique.LanSniffing.Rerun*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Funique
  commentId: N:Funique
  name: Funique
  nameWithType: Funique
  fullName: Funique
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Funique.LanSniffing.SniffingProgram*
  commentId: Overload:Funique.LanSniffing.SniffingProgram
  name: SniffingProgram
  nameWithType: LanSniffing.SniffingProgram
  fullName: Funique.LanSniffing.SniffingProgram
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Funique.LanSniffing.isRunning*
  commentId: Overload:Funique.LanSniffing.isRunning
  name: isRunning
  nameWithType: LanSniffing.isRunning
  fullName: Funique.LanSniffing.isRunning
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Funique.LanSniffing.#ctor*
  commentId: Overload:Funique.LanSniffing.#ctor
  name: LanSniffing
  nameWithType: LanSniffing.LanSniffing
  fullName: Funique.LanSniffing.LanSniffing
- uid: Funique.LanSniffing.Rerun*
  commentId: Overload:Funique.LanSniffing.Rerun
  name: Rerun
  nameWithType: LanSniffing.Rerun
  fullName: Funique.LanSniffing.Rerun
