### YamlMime:ManagedReference
items:
- uid: Funique.Streaming.M3U8Handler
  commentId: T:Funique.Streaming.M3U8Handler
  id: M3U8Handler
  parent: Funique.Streaming
  children:
  - Funique.Streaming.M3U8Handler.#ctor(System.Int32,Funique.Im3u8Streaming)
  - Funique.Streaming.M3U8Handler.Cancel(System.Int32)
  - Funique.Streaming.M3U8Handler.Createm3u8(Funique.PlayListMode)
  - Funique.Streaming.M3U8Handler.Dispose
  - Funique.Streaming.M3U8Handler.GetCinemaByString(System.String)
  - Funique.Streaming.M3U8Handler.GetWorker(System.Int32)
  - Funique.Streaming.M3U8Handler.HasWorker(System.Int32)
  langs:
  - csharp
  - vb
  name: M3U8Handler
  nameWithType: M3U8Handler
  fullName: Funique.Streaming.M3U8Handler
  type: Class
  source:
    remote:
      path: M3U8Handler.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: M3U8Handler
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/M3U8Handler.cs
    startLine: 20
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  summary: "\nM3U8 Streaming handler <br />\nUse ffmpeg to generate streaming files <br />\nffmpeg workplace and nginx workplace are in different folder <br />\nSo when generate the file using streaming asset ffmpeg.exe <br />\nThe init.mp4 will stay in ffmpeg workplace, even tho we point the output in nginx folder <br />\nWe need to menually moving the file itself <br />\n------------------------------------------------ <br />\nM3U8 串流管理者 <br />\n使用 ffmpeg 生成串流檔案 <br /> \nffmpeg 工作環境與 nginx 工作環境 在不同資料夾 \n所以當使用 streaming asset 資料夾中的 ffmpeg.exe 生成串流檔案時 <br />\ninit.mp4 會生在 ffmpeg 的工作環境, 即使我們在指令中指向 nginx 資料夾輸出 <br />\n所以需要手動的移動檔案\n"
  example: []
  syntax:
    content: 'public sealed class M3U8Handler : IDisposable'
    content.vb: >-
      Public NotInheritable Class M3U8Handler

          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Funique.Streaming.M3U8Handler.#ctor(System.Int32,Funique.Im3u8Streaming)
  commentId: M:Funique.Streaming.M3U8Handler.#ctor(System.Int32,Funique.Im3u8Streaming)
  id: '#ctor(System.Int32,Funique.Im3u8Streaming)'
  parent: Funique.Streaming.M3U8Handler
  langs:
  - csharp
  - vb
  name: M3U8Handler(Int32, Im3u8Streaming)
  nameWithType: M3U8Handler.M3U8Handler(Int32, Im3u8Streaming)
  fullName: Funique.Streaming.M3U8Handler.M3U8Handler(System.Int32, Funique.Im3u8Streaming)
  type: Constructor
  source:
    remote:
      path: M3U8Handler.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: .ctor
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/M3U8Handler.cs
    startLine: 41
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  syntax:
    content: public M3U8Handler(int count, Im3u8Streaming resource)
    parameters:
    - id: count
      type: System.Int32
    - id: resource
      type: Funique.Im3u8Streaming
    content.vb: Public Sub New(count As Integer, resource As Im3u8Streaming)
  overload: Funique.Streaming.M3U8Handler.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Streaming.M3U8Handler.Createm3u8(Funique.PlayListMode)
  commentId: M:Funique.Streaming.M3U8Handler.Createm3u8(Funique.PlayListMode)
  id: Createm3u8(Funique.PlayListMode)
  parent: Funique.Streaming.M3U8Handler
  langs:
  - csharp
  - vb
  name: Createm3u8(PlayListMode)
  nameWithType: M3U8Handler.Createm3u8(PlayListMode)
  fullName: Funique.Streaming.M3U8Handler.Createm3u8(Funique.PlayListMode)
  type: Method
  source:
    remote:
      path: M3U8Handler.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: Createm3u8
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/M3U8Handler.cs
    startLine: 55
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  summary: "\nCreate m3u8 streaming <br />\nThis will generate files, call ffmpeg, start background worker <br />\n------------------------------------------------ <br />\n建立 m3u8 串流 <br />\n這會生成檔案出來, 呼叫 ffmpeg, 開啟串流背景執行序\n"
  example: []
  syntax:
    content: public void Createm3u8(PlayListMode PlayListMode = PlayListMode.StreamingCasterVod)
    parameters:
    - id: PlayListMode
      type: Funique.PlayListMode
      description: ''
    content.vb: Public Sub Createm3u8(PlayListMode As PlayListMode = PlayListMode.StreamingCasterVod)
  overload: Funique.Streaming.M3U8Handler.Createm3u8*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Streaming.M3U8Handler.HasWorker(System.Int32)
  commentId: M:Funique.Streaming.M3U8Handler.HasWorker(System.Int32)
  id: HasWorker(System.Int32)
  parent: Funique.Streaming.M3U8Handler
  langs:
  - csharp
  - vb
  name: HasWorker(Int32)
  nameWithType: M3U8Handler.HasWorker(Int32)
  fullName: Funique.Streaming.M3U8Handler.HasWorker(System.Int32)
  type: Method
  source:
    remote:
      path: M3U8Handler.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: HasWorker
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/M3U8Handler.cs
    startLine: 70
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  syntax:
    content: public bool HasWorker(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function HasWorker(index As Integer) As Boolean
  overload: Funique.Streaming.M3U8Handler.HasWorker*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Streaming.M3U8Handler.GetWorker(System.Int32)
  commentId: M:Funique.Streaming.M3U8Handler.GetWorker(System.Int32)
  id: GetWorker(System.Int32)
  parent: Funique.Streaming.M3U8Handler
  langs:
  - csharp
  - vb
  name: GetWorker(Int32)
  nameWithType: M3U8Handler.GetWorker(Int32)
  fullName: Funique.Streaming.M3U8Handler.GetWorker(System.Int32)
  type: Method
  source:
    remote:
      path: M3U8Handler.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: GetWorker
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/M3U8Handler.cs
    startLine: 75
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  syntax:
    content: public IFFmpegWorker GetWorker(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: Funique.Streaming.IFFmpegWorker
    content.vb: Public Function GetWorker(index As Integer) As IFFmpegWorker
  overload: Funique.Streaming.M3U8Handler.GetWorker*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Streaming.M3U8Handler.Cancel(System.Int32)
  commentId: M:Funique.Streaming.M3U8Handler.Cancel(System.Int32)
  id: Cancel(System.Int32)
  parent: Funique.Streaming.M3U8Handler
  langs:
  - csharp
  - vb
  name: Cancel(Int32)
  nameWithType: M3U8Handler.Cancel(Int32)
  fullName: Funique.Streaming.M3U8Handler.Cancel(System.Int32)
  type: Method
  source:
    remote:
      path: M3U8Handler.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: Cancel
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/M3U8Handler.cs
    startLine: 120
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  summary: "\nClose streaming service <br />\n------------------------------------------------ <br />\n關閉劇場串流福助\n"
  example: []
  syntax:
    content: public void Cancel(int index = -1)
    parameters:
    - id: index
      type: System.Int32
      description: If -1, Close all
    content.vb: Public Sub Cancel(index As Integer = -1)
  overload: Funique.Streaming.M3U8Handler.Cancel*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Streaming.M3U8Handler.GetCinemaByString(System.String)
  commentId: M:Funique.Streaming.M3U8Handler.GetCinemaByString(System.String)
  id: GetCinemaByString(System.String)
  parent: Funique.Streaming.M3U8Handler
  langs:
  - csharp
  - vb
  name: GetCinemaByString(String)
  nameWithType: M3U8Handler.GetCinemaByString(String)
  fullName: Funique.Streaming.M3U8Handler.GetCinemaByString(System.String)
  type: Method
  source:
    remote:
      path: M3U8Handler.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: GetCinemaByString
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/M3U8Handler.cs
    startLine: 184
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  summary: "\nRemove brackets and parse to integer<br />\n(0) => 0 <br />\n(1) => 1\n"
  example: []
  syntax:
    content: public static int GetCinemaByString(string objectstring)
    parameters:
    - id: objectstring
      type: System.String
      description: Target string
    return:
      type: System.Int32
      description: Result integer
    content.vb: Public Shared Function GetCinemaByString(objectstring As String) As Integer
  overload: Funique.Streaming.M3U8Handler.GetCinemaByString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Funique.Streaming.M3U8Handler.Dispose
  commentId: M:Funique.Streaming.M3U8Handler.Dispose
  id: Dispose
  parent: Funique.Streaming.M3U8Handler
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: M3U8Handler.Dispose()
  fullName: Funique.Streaming.M3U8Handler.Dispose()
  type: Method
  source:
    remote:
      path: M3U8Handler.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: Dispose
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/M3U8Handler.cs
    startLine: 191
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Funique.Streaming.M3U8Handler.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Funique.Streaming
  commentId: N:Funique.Streaming
  name: Funique.Streaming
  nameWithType: Funique.Streaming
  fullName: Funique.Streaming
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Funique.Streaming.M3U8Handler.#ctor*
  commentId: Overload:Funique.Streaming.M3U8Handler.#ctor
  name: M3U8Handler
  nameWithType: M3U8Handler.M3U8Handler
  fullName: Funique.Streaming.M3U8Handler.M3U8Handler
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Funique.Im3u8Streaming
  commentId: T:Funique.Im3u8Streaming
  parent: Funique
  name: Im3u8Streaming
  nameWithType: Im3u8Streaming
  fullName: Funique.Im3u8Streaming
- uid: Funique
  commentId: N:Funique
  name: Funique
  nameWithType: Funique
  fullName: Funique
- uid: Funique.Streaming.M3U8Handler.Createm3u8*
  commentId: Overload:Funique.Streaming.M3U8Handler.Createm3u8
  name: Createm3u8
  nameWithType: M3U8Handler.Createm3u8
  fullName: Funique.Streaming.M3U8Handler.Createm3u8
- uid: Funique.PlayListMode
  commentId: T:Funique.PlayListMode
  parent: Funique
  name: PlayListMode
  nameWithType: PlayListMode
  fullName: Funique.PlayListMode
- uid: Funique.Streaming.M3U8Handler.HasWorker*
  commentId: Overload:Funique.Streaming.M3U8Handler.HasWorker
  name: HasWorker
  nameWithType: M3U8Handler.HasWorker
  fullName: Funique.Streaming.M3U8Handler.HasWorker
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Funique.Streaming.M3U8Handler.GetWorker*
  commentId: Overload:Funique.Streaming.M3U8Handler.GetWorker
  name: GetWorker
  nameWithType: M3U8Handler.GetWorker
  fullName: Funique.Streaming.M3U8Handler.GetWorker
- uid: Funique.Streaming.IFFmpegWorker
  commentId: T:Funique.Streaming.IFFmpegWorker
  parent: Funique.Streaming
  name: IFFmpegWorker
  nameWithType: IFFmpegWorker
  fullName: Funique.Streaming.IFFmpegWorker
- uid: Funique.Streaming.M3U8Handler.Cancel*
  commentId: Overload:Funique.Streaming.M3U8Handler.Cancel
  name: Cancel
  nameWithType: M3U8Handler.Cancel
  fullName: Funique.Streaming.M3U8Handler.Cancel
- uid: Funique.Streaming.M3U8Handler.GetCinemaByString*
  commentId: Overload:Funique.Streaming.M3U8Handler.GetCinemaByString
  name: GetCinemaByString
  nameWithType: M3U8Handler.GetCinemaByString
  fullName: Funique.Streaming.M3U8Handler.GetCinemaByString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Funique.Streaming.M3U8Handler.Dispose*
  commentId: Overload:Funique.Streaming.M3U8Handler.Dispose
  name: Dispose
  nameWithType: M3U8Handler.Dispose
  fullName: Funique.Streaming.M3U8Handler.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
