### YamlMime:ManagedReference
items:
- uid: Funique.Manager.ManagerBase`1
  commentId: T:Funique.Manager.ManagerBase`1
  id: ManagerBase`1
  parent: Funique.Manager
  children:
  - Funique.Manager.ManagerBase`1.config
  - Funique.Manager.ManagerBase`1.Loaded(`0)
  - Funique.Manager.ManagerBase`1.RegisterConfig(`0)
  langs:
  - csharp
  - vb
  name: ManagerBase<T>
  nameWithType: ManagerBase<T>
  fullName: Funique.Manager.ManagerBase<T>
  type: Class
  source:
    remote:
      path: ManagerBase.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: ManagerBase
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/ManagerBase.cs
    startLine: 10
  assemblies:
  - Funique.Core
  namespace: Funique.Manager
  summary: "\nBase class for manager class, easy to manage worker <br />\n------------------------------------------------ <br />\n管理基礎類別, 簡單管理\n"
  example: []
  syntax:
    content: 'public abstract class ManagerBase<T> : ManagerBase, IDisposable where T : struct'
    typeParameters:
    - id: T
      description: Config data
    content.vb: >-
      Public MustInherit Class ManagerBase(Of T As Structure)

          Inherits ManagerBase

          Implements IDisposable
  inheritance:
  - System.Object
  - Funique.Manager.ManagerBase
  derivedClasses:
  - Funique.Manager.CinemaManagerClientUtility
  - Funique.Manager.CinemaManagerServerUtility
  - Funique.Manager.ClientAndroidManagerUtility
  - Funique.Manager.ClientStandAloneManagerUtility
  - Funique.Manager.ClientTheaterManagerUtility
  - Funique.Manager.ClientXRManagerUtility
  - Funique.Manager.FileClientManagerUtility
  - Funique.Manager.MediaManagerServerUtility
  - Funique.Manager.NetworkManagerClientUtility
  - Funique.Manager.NetworkManagerServerUtility
  - Funique.Manager.PlayerManagerUtility
  - Funique.Manager.SettingManagerServerUtility
  - Funique.Manager.StreamingManagerUtility
  - Funique.Manager.UIClientManagerUtility
  - Funique.Manager.UIManagerUtility
  - Funique.Manager.VerifyClientUtility
  - Funique.Manager.VideoManagerUtility
  implements:
  - System.IDisposable
  inheritedMembers:
  - Funique.Manager.ManagerBase.Initialization
  - Funique.Manager.ManagerBase.FrameUpdate
  - Funique.Manager.ManagerBase.Shutdown
  - Funique.Manager.ManagerBase.Dispose
  nameWithType.vb: ManagerBase(Of T)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Funique.Manager.ManagerBase(Of T)
  name.vb: ManagerBase(Of T)
- uid: Funique.Manager.ManagerBase`1.config
  commentId: P:Funique.Manager.ManagerBase`1.config
  id: config
  parent: Funique.Manager.ManagerBase`1
  langs:
  - csharp
  - vb
  name: config
  nameWithType: ManagerBase<T>.config
  fullName: Funique.Manager.ManagerBase<T>.config
  type: Property
  source:
    remote:
      path: ManagerBase.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: config
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/ManagerBase.cs
    startLine: 17
  assemblies:
  - Funique.Core
  namespace: Funique.Manager
  summary: "\nConfiguration <br />\n------------------------------------------------ <br />\n設定資料\n"
  example: []
  syntax:
    content: public T config { get; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public ReadOnly Property config As T
  overload: Funique.Manager.ManagerBase`1.config*
  nameWithType.vb: ManagerBase(Of T).config
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Funique.Manager.ManagerBase(Of T).config
- uid: Funique.Manager.ManagerBase`1.RegisterConfig(`0)
  commentId: M:Funique.Manager.ManagerBase`1.RegisterConfig(`0)
  id: RegisterConfig(`0)
  parent: Funique.Manager.ManagerBase`1
  langs:
  - csharp
  - vb
  name: RegisterConfig(T)
  nameWithType: ManagerBase<T>.RegisterConfig(T)
  fullName: Funique.Manager.ManagerBase<T>.RegisterConfig(T)
  type: Method
  source:
    remote:
      path: ManagerBase.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: RegisterConfig
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/ManagerBase.cs
    startLine: 25
  assemblies:
  - Funique.Core
  namespace: Funique.Manager
  summary: "\nSet config <br />\n------------------------------------------------ <br />\n註冊設定資料\n"
  example: []
  syntax:
    content: public void RegisterConfig(T _config)
    parameters:
    - id: _config
      type: '{T}'
    content.vb: Public Sub RegisterConfig(_config As T)
  overload: Funique.Manager.ManagerBase`1.RegisterConfig*
  nameWithType.vb: ManagerBase(Of T).RegisterConfig(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Funique.Manager.ManagerBase(Of T).RegisterConfig(T)
- uid: Funique.Manager.ManagerBase`1.Loaded(`0)
  commentId: M:Funique.Manager.ManagerBase`1.Loaded(`0)
  id: Loaded(`0)
  parent: Funique.Manager.ManagerBase`1
  langs:
  - csharp
  - vb
  name: Loaded(T)
  nameWithType: ManagerBase<T>.Loaded(T)
  fullName: Funique.Manager.ManagerBase<T>.Loaded(T)
  type: Method
  source:
    remote:
      path: ManagerBase.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: Loaded
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/ManagerBase.cs
    startLine: 38
  assemblies:
  - Funique.Core
  namespace: Funique.Manager
  summary: "\nCalled after data in registered <br />\n------------------------------------------------ <br />\n在結構被載入後呼叫\n"
  example: []
  syntax:
    content: public virtual void Loaded(T Data)
    parameters:
    - id: Data
      type: '{T}'
      description: ''
    content.vb: Public Overridable Sub Loaded(Data As T)
  overload: Funique.Manager.ManagerBase`1.Loaded*
  nameWithType.vb: ManagerBase(Of T).Loaded(T)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Funique.Manager.ManagerBase(Of T).Loaded(T)
references:
- uid: Funique.Manager
  commentId: N:Funique.Manager
  name: Funique.Manager
  nameWithType: Funique.Manager
  fullName: Funique.Manager
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Funique.Manager.ManagerBase
  commentId: T:Funique.Manager.ManagerBase
  parent: Funique.Manager
  name: ManagerBase
  nameWithType: ManagerBase
  fullName: Funique.Manager.ManagerBase
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Funique.Manager.ManagerBase.Initialization
  commentId: M:Funique.Manager.ManagerBase.Initialization
  parent: Funique.Manager.ManagerBase
  name: Initialization()
  nameWithType: ManagerBase.Initialization()
  fullName: Funique.Manager.ManagerBase.Initialization()
  spec.csharp:
  - uid: Funique.Manager.ManagerBase.Initialization
    name: Initialization
    nameWithType: ManagerBase.Initialization
    fullName: Funique.Manager.ManagerBase.Initialization
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase.Initialization
    name: Initialization
    nameWithType: ManagerBase.Initialization
    fullName: Funique.Manager.ManagerBase.Initialization
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.ManagerBase.FrameUpdate
  commentId: M:Funique.Manager.ManagerBase.FrameUpdate
  parent: Funique.Manager.ManagerBase
  name: FrameUpdate()
  nameWithType: ManagerBase.FrameUpdate()
  fullName: Funique.Manager.ManagerBase.FrameUpdate()
  spec.csharp:
  - uid: Funique.Manager.ManagerBase.FrameUpdate
    name: FrameUpdate
    nameWithType: ManagerBase.FrameUpdate
    fullName: Funique.Manager.ManagerBase.FrameUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase.FrameUpdate
    name: FrameUpdate
    nameWithType: ManagerBase.FrameUpdate
    fullName: Funique.Manager.ManagerBase.FrameUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.ManagerBase.Shutdown
  commentId: M:Funique.Manager.ManagerBase.Shutdown
  parent: Funique.Manager.ManagerBase
  name: Shutdown()
  nameWithType: ManagerBase.Shutdown()
  fullName: Funique.Manager.ManagerBase.Shutdown()
  spec.csharp:
  - uid: Funique.Manager.ManagerBase.Shutdown
    name: Shutdown
    nameWithType: ManagerBase.Shutdown
    fullName: Funique.Manager.ManagerBase.Shutdown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase.Shutdown
    name: Shutdown
    nameWithType: ManagerBase.Shutdown
    fullName: Funique.Manager.ManagerBase.Shutdown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.ManagerBase.Dispose
  commentId: M:Funique.Manager.ManagerBase.Dispose
  parent: Funique.Manager.ManagerBase
  name: Dispose()
  nameWithType: ManagerBase.Dispose()
  fullName: Funique.Manager.ManagerBase.Dispose()
  spec.csharp:
  - uid: Funique.Manager.ManagerBase.Dispose
    name: Dispose
    nameWithType: ManagerBase.Dispose
    fullName: Funique.Manager.ManagerBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase.Dispose
    name: Dispose
    nameWithType: ManagerBase.Dispose
    fullName: Funique.Manager.ManagerBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Funique.Manager.ManagerBase`1.config*
  commentId: Overload:Funique.Manager.ManagerBase`1.config
  name: config
  nameWithType: ManagerBase<T>.config
  fullName: Funique.Manager.ManagerBase<T>.config
  nameWithType.vb: ManagerBase(Of T).config
  fullName.vb: Funique.Manager.ManagerBase(Of T).config
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Funique.Manager.ManagerBase`1.RegisterConfig*
  commentId: Overload:Funique.Manager.ManagerBase`1.RegisterConfig
  name: RegisterConfig
  nameWithType: ManagerBase<T>.RegisterConfig
  fullName: Funique.Manager.ManagerBase<T>.RegisterConfig
  nameWithType.vb: ManagerBase(Of T).RegisterConfig
  fullName.vb: Funique.Manager.ManagerBase(Of T).RegisterConfig
- uid: Funique.Manager.ManagerBase`1.Loaded*
  commentId: Overload:Funique.Manager.ManagerBase`1.Loaded
  name: Loaded
  nameWithType: ManagerBase<T>.Loaded
  fullName: Funique.Manager.ManagerBase<T>.Loaded
  nameWithType.vb: ManagerBase(Of T).Loaded
  fullName.vb: Funique.Manager.ManagerBase(Of T).Loaded
