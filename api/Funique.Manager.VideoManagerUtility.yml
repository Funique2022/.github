### YamlMime:ManagedReference
items:
- uid: Funique.Manager.VideoManagerUtility
  commentId: T:Funique.Manager.VideoManagerUtility
  id: VideoManagerUtility
  parent: Funique.Manager
  children:
  - Funique.Manager.VideoManagerUtility.AddVideoInfo(Funique.VideoInfo)
  - Funique.Manager.VideoManagerUtility.FilePath
  - Funique.Manager.VideoManagerUtility.LoadVideoFile
  - Funique.Manager.VideoManagerUtility.playingVideoBtn
  - Funique.Manager.VideoManagerUtility.RefVideoBtn
  - Funique.Manager.VideoManagerUtility.RemovePanelBtn(UnityEngine.Transform)
  - Funique.Manager.VideoManagerUtility.SaveVideoListFile
  - Funique.Manager.VideoManagerUtility.SelectedVideoBtnList
  - Funique.Manager.VideoManagerUtility.VideoList
  langs:
  - csharp
  - vb
  name: VideoManagerUtility
  nameWithType: VideoManagerUtility
  fullName: Funique.Manager.VideoManagerUtility
  type: Class
  source:
    remote:
      path: VideoManagerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_video.git
    id: VideoManagerUtility
    path: ../../../project_unity_development/Assets/FuniquePlugin/Video/VideoManagerUtility.cs
    startLine: 12
  assemblies:
  - Funique.Video
  namespace: Funique.Manager
  summary: "\nVideo manager handles video list and loading video list record files <br />\n------------------------------------------------ <br />\n影片管理員 處理 影片清單跟讀取紀錄\n"
  example: []
  syntax:
    content: 'public class VideoManagerUtility : ManagerBase<VideoManagerData>, IDisposable, IVideoUtility'
    content.vb: >-
      Public Class VideoManagerUtility

          Inherits ManagerBase(Of VideoManagerData)

          Implements IDisposable, IVideoUtility
  inheritance:
  - System.Object
  - Funique.Manager.ManagerBase
  - Funique.Manager.ManagerBase{Funique.Video.VideoManagerData}
  implements:
  - System.IDisposable
  - Funique.Video.IVideoUtility
  inheritedMembers:
  - Funique.Manager.ManagerBase{Funique.Video.VideoManagerData}.config
  - Funique.Manager.ManagerBase{Funique.Video.VideoManagerData}.RegisterConfig(Funique.Video.VideoManagerData)
  - Funique.Manager.ManagerBase{Funique.Video.VideoManagerData}.Loaded(Funique.Video.VideoManagerData)
  - Funique.Manager.ManagerBase.Initialization
  - Funique.Manager.ManagerBase.FrameUpdate
  - Funique.Manager.ManagerBase.Shutdown
  - Funique.Manager.ManagerBase.Dispose
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Funique.Manager.VideoManagerUtility.playingVideoBtn
  commentId: F:Funique.Manager.VideoManagerUtility.playingVideoBtn
  id: playingVideoBtn
  parent: Funique.Manager.VideoManagerUtility
  langs:
  - csharp
  - vb
  name: playingVideoBtn
  nameWithType: VideoManagerUtility.playingVideoBtn
  fullName: Funique.Manager.VideoManagerUtility.playingVideoBtn
  type: Field
  source:
    remote:
      path: VideoManagerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_video.git
    id: playingVideoBtn
    path: ../../../project_unity_development/Assets/FuniquePlugin/Video/VideoManagerUtility.cs
    startLine: 21
  assemblies:
  - Funique.Video
  namespace: Funique.Manager
  summary: "\nCurrently playing element <br />\n------------------------------------------------ <br />\n目前播放的元素\n"
  example: []
  syntax:
    content: protected GameObject playingVideoBtn
    return:
      type: UnityEngine.GameObject
    content.vb: Protected playingVideoBtn As GameObject
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Funique.Manager.VideoManagerUtility.RefVideoBtn
  commentId: P:Funique.Manager.VideoManagerUtility.RefVideoBtn
  id: RefVideoBtn
  parent: Funique.Manager.VideoManagerUtility
  langs:
  - csharp
  - vb
  name: RefVideoBtn
  nameWithType: VideoManagerUtility.RefVideoBtn
  fullName: Funique.Manager.VideoManagerUtility.RefVideoBtn
  type: Property
  source:
    remote:
      path: VideoManagerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_video.git
    id: RefVideoBtn
    path: ../../../project_unity_development/Assets/FuniquePlugin/Video/VideoManagerUtility.cs
    startLine: 27
  assemblies:
  - Funique.Video
  namespace: Funique.Manager
  syntax:
    content: public GameObject RefVideoBtn { get; }
    parameters: []
    return:
      type: UnityEngine.GameObject
    content.vb: Public ReadOnly Property RefVideoBtn As GameObject
  overload: Funique.Manager.VideoManagerUtility.RefVideoBtn*
  implements:
  - Funique.Video.IVideoUtility.RefVideoBtn
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Funique.Manager.VideoManagerUtility.VideoList
  commentId: P:Funique.Manager.VideoManagerUtility.VideoList
  id: VideoList
  parent: Funique.Manager.VideoManagerUtility
  langs:
  - csharp
  - vb
  name: VideoList
  nameWithType: VideoManagerUtility.VideoList
  fullName: Funique.Manager.VideoManagerUtility.VideoList
  type: Property
  source:
    remote:
      path: VideoManagerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_video.git
    id: VideoList
    path: ../../../project_unity_development/Assets/FuniquePlugin/Video/VideoManagerUtility.cs
    startLine: 28
  assemblies:
  - Funique.Video
  namespace: Funique.Manager
  syntax:
    content: public List<VideoInfo> VideoList { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Funique.VideoInfo}
    content.vb: Public Property VideoList As List(Of VideoInfo)
  overload: Funique.Manager.VideoManagerUtility.VideoList*
  implements:
  - Funique.Video.IVideoUtility.VideoList
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Funique.Manager.VideoManagerUtility.FilePath
  commentId: P:Funique.Manager.VideoManagerUtility.FilePath
  id: FilePath
  parent: Funique.Manager.VideoManagerUtility
  langs:
  - csharp
  - vb
  name: FilePath
  nameWithType: VideoManagerUtility.FilePath
  fullName: Funique.Manager.VideoManagerUtility.FilePath
  type: Property
  source:
    remote:
      path: VideoManagerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_video.git
    id: FilePath
    path: ../../../project_unity_development/Assets/FuniquePlugin/Video/VideoManagerUtility.cs
    startLine: 29
  assemblies:
  - Funique.Video
  namespace: Funique.Manager
  syntax:
    content: public string FilePath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property FilePath As String
  overload: Funique.Manager.VideoManagerUtility.FilePath*
  implements:
  - Funique.Video.IVideoUtility.FilePath
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Funique.Manager.VideoManagerUtility.SelectedVideoBtnList
  commentId: P:Funique.Manager.VideoManagerUtility.SelectedVideoBtnList
  id: SelectedVideoBtnList
  parent: Funique.Manager.VideoManagerUtility
  langs:
  - csharp
  - vb
  name: SelectedVideoBtnList
  nameWithType: VideoManagerUtility.SelectedVideoBtnList
  fullName: Funique.Manager.VideoManagerUtility.SelectedVideoBtnList
  type: Property
  source:
    remote:
      path: VideoManagerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_video.git
    id: SelectedVideoBtnList
    path: ../../../project_unity_development/Assets/FuniquePlugin/Video/VideoManagerUtility.cs
    startLine: 30
  assemblies:
  - Funique.Video
  namespace: Funique.Manager
  syntax:
    content: public List<VideoInfo> SelectedVideoBtnList { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Funique.VideoInfo}
    content.vb: Public ReadOnly Property SelectedVideoBtnList As List(Of VideoInfo)
  overload: Funique.Manager.VideoManagerUtility.SelectedVideoBtnList*
  implements:
  - Funique.Video.IVideoUtility.SelectedVideoBtnList
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Funique.Manager.VideoManagerUtility.RemovePanelBtn(UnityEngine.Transform)
  commentId: M:Funique.Manager.VideoManagerUtility.RemovePanelBtn(UnityEngine.Transform)
  id: RemovePanelBtn(UnityEngine.Transform)
  parent: Funique.Manager.VideoManagerUtility
  langs:
  - csharp
  - vb
  name: RemovePanelBtn(Transform)
  nameWithType: VideoManagerUtility.RemovePanelBtn(Transform)
  fullName: Funique.Manager.VideoManagerUtility.RemovePanelBtn(UnityEngine.Transform)
  type: Method
  source:
    remote:
      path: VideoManagerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_video.git
    id: RemovePanelBtn
    path: ../../../project_unity_development/Assets/FuniquePlugin/Video/VideoManagerUtility.cs
    startLine: 36
  assemblies:
  - Funique.Video
  namespace: Funique.Manager
  syntax:
    content: public void RemovePanelBtn(Transform panel)
    parameters:
    - id: panel
      type: UnityEngine.Transform
    content.vb: Public Sub RemovePanelBtn(panel As Transform)
  overload: Funique.Manager.VideoManagerUtility.RemovePanelBtn*
  implements:
  - Funique.Video.IVideoUtility.RemovePanelBtn(UnityEngine.Transform)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Manager.VideoManagerUtility.AddVideoInfo(Funique.VideoInfo)
  commentId: M:Funique.Manager.VideoManagerUtility.AddVideoInfo(Funique.VideoInfo)
  id: AddVideoInfo(Funique.VideoInfo)
  parent: Funique.Manager.VideoManagerUtility
  langs:
  - csharp
  - vb
  name: AddVideoInfo(VideoInfo)
  nameWithType: VideoManagerUtility.AddVideoInfo(VideoInfo)
  fullName: Funique.Manager.VideoManagerUtility.AddVideoInfo(Funique.VideoInfo)
  type: Method
  source:
    remote:
      path: VideoManagerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_video.git
    id: AddVideoInfo
    path: ../../../project_unity_development/Assets/FuniquePlugin/Video/VideoManagerUtility.cs
    startLine: 44
  assemblies:
  - Funique.Video
  namespace: Funique.Manager
  syntax:
    content: public void AddVideoInfo(VideoInfo videoInfo)
    parameters:
    - id: videoInfo
      type: Funique.VideoInfo
    content.vb: Public Sub AddVideoInfo(videoInfo As VideoInfo)
  overload: Funique.Manager.VideoManagerUtility.AddVideoInfo*
  implements:
  - Funique.Video.IVideoUtility.AddVideoInfo(Funique.VideoInfo)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Manager.VideoManagerUtility.LoadVideoFile
  commentId: M:Funique.Manager.VideoManagerUtility.LoadVideoFile
  id: LoadVideoFile
  parent: Funique.Manager.VideoManagerUtility
  langs:
  - csharp
  - vb
  name: LoadVideoFile()
  nameWithType: VideoManagerUtility.LoadVideoFile()
  fullName: Funique.Manager.VideoManagerUtility.LoadVideoFile()
  type: Method
  source:
    remote:
      path: VideoManagerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_video.git
    id: LoadVideoFile
    path: ../../../project_unity_development/Assets/FuniquePlugin/Video/VideoManagerUtility.cs
    startLine: 49
  assemblies:
  - Funique.Video
  namespace: Funique.Manager
  syntax:
    content: public void LoadVideoFile()
    content.vb: Public Sub LoadVideoFile
  overload: Funique.Manager.VideoManagerUtility.LoadVideoFile*
  implements:
  - Funique.Video.IVideoUtility.LoadVideoFile
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Manager.VideoManagerUtility.SaveVideoListFile
  commentId: M:Funique.Manager.VideoManagerUtility.SaveVideoListFile
  id: SaveVideoListFile
  parent: Funique.Manager.VideoManagerUtility
  langs:
  - csharp
  - vb
  name: SaveVideoListFile()
  nameWithType: VideoManagerUtility.SaveVideoListFile()
  fullName: Funique.Manager.VideoManagerUtility.SaveVideoListFile()
  type: Method
  source:
    remote:
      path: VideoManagerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_video.git
    id: SaveVideoListFile
    path: ../../../project_unity_development/Assets/FuniquePlugin/Video/VideoManagerUtility.cs
    startLine: 60
  assemblies:
  - Funique.Video
  namespace: Funique.Manager
  syntax:
    content: public void SaveVideoListFile()
    content.vb: Public Sub SaveVideoListFile
  overload: Funique.Manager.VideoManagerUtility.SaveVideoListFile*
  implements:
  - Funique.Video.IVideoUtility.SaveVideoListFile
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Funique.Manager
  commentId: N:Funique.Manager
  name: Funique.Manager
  nameWithType: Funique.Manager
  fullName: Funique.Manager
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Funique.Manager.ManagerBase
  commentId: T:Funique.Manager.ManagerBase
  parent: Funique.Manager
  name: ManagerBase
  nameWithType: ManagerBase
  fullName: Funique.Manager.ManagerBase
- uid: Funique.Manager.ManagerBase{Funique.Video.VideoManagerData}
  commentId: T:Funique.Manager.ManagerBase{Funique.Video.VideoManagerData}
  parent: Funique.Manager
  definition: Funique.Manager.ManagerBase`1
  name: ManagerBase<VideoManagerData>
  nameWithType: ManagerBase<VideoManagerData>
  fullName: Funique.Manager.ManagerBase<Funique.Video.VideoManagerData>
  nameWithType.vb: ManagerBase(Of VideoManagerData)
  fullName.vb: Funique.Manager.ManagerBase(Of Funique.Video.VideoManagerData)
  name.vb: ManagerBase(Of VideoManagerData)
  spec.csharp:
  - uid: Funique.Manager.ManagerBase`1
    name: ManagerBase
    nameWithType: ManagerBase
    fullName: Funique.Manager.ManagerBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Funique.Video.VideoManagerData
    name: VideoManagerData
    nameWithType: VideoManagerData
    fullName: Funique.Video.VideoManagerData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Funique.Manager.ManagerBase`1
    name: ManagerBase
    nameWithType: ManagerBase
    fullName: Funique.Manager.ManagerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Funique.Video.VideoManagerData
    name: VideoManagerData
    nameWithType: VideoManagerData
    fullName: Funique.Video.VideoManagerData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Funique.Video.IVideoUtility
  commentId: T:Funique.Video.IVideoUtility
  parent: Funique.Video
  name: IVideoUtility
  nameWithType: IVideoUtility
  fullName: Funique.Video.IVideoUtility
- uid: Funique.Manager.ManagerBase{Funique.Video.VideoManagerData}.config
  commentId: P:Funique.Manager.ManagerBase{Funique.Video.VideoManagerData}.config
  parent: Funique.Manager.ManagerBase{Funique.Video.VideoManagerData}
  definition: Funique.Manager.ManagerBase`1.config
  name: config
  nameWithType: ManagerBase<VideoManagerData>.config
  fullName: Funique.Manager.ManagerBase<Funique.Video.VideoManagerData>.config
  nameWithType.vb: ManagerBase(Of VideoManagerData).config
  fullName.vb: Funique.Manager.ManagerBase(Of Funique.Video.VideoManagerData).config
- uid: Funique.Manager.ManagerBase{Funique.Video.VideoManagerData}.RegisterConfig(Funique.Video.VideoManagerData)
  commentId: M:Funique.Manager.ManagerBase{Funique.Video.VideoManagerData}.RegisterConfig(Funique.Video.VideoManagerData)
  parent: Funique.Manager.ManagerBase{Funique.Video.VideoManagerData}
  definition: Funique.Manager.ManagerBase`1.RegisterConfig(`0)
  name: RegisterConfig(VideoManagerData)
  nameWithType: ManagerBase<VideoManagerData>.RegisterConfig(VideoManagerData)
  fullName: Funique.Manager.ManagerBase<Funique.Video.VideoManagerData>.RegisterConfig(Funique.Video.VideoManagerData)
  nameWithType.vb: ManagerBase(Of VideoManagerData).RegisterConfig(VideoManagerData)
  fullName.vb: Funique.Manager.ManagerBase(Of Funique.Video.VideoManagerData).RegisterConfig(Funique.Video.VideoManagerData)
  spec.csharp:
  - uid: Funique.Manager.ManagerBase`1.RegisterConfig(`0)
    name: RegisterConfig
    nameWithType: ManagerBase<VideoManagerData>.RegisterConfig
    fullName: Funique.Manager.ManagerBase<Funique.Video.VideoManagerData>.RegisterConfig
  - name: (
    nameWithType: (
    fullName: (
  - uid: Funique.Video.VideoManagerData
    name: VideoManagerData
    nameWithType: VideoManagerData
    fullName: Funique.Video.VideoManagerData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase`1.RegisterConfig(`0)
    name: RegisterConfig
    nameWithType: ManagerBase(Of VideoManagerData).RegisterConfig
    fullName: Funique.Manager.ManagerBase(Of Funique.Video.VideoManagerData).RegisterConfig
  - name: (
    nameWithType: (
    fullName: (
  - uid: Funique.Video.VideoManagerData
    name: VideoManagerData
    nameWithType: VideoManagerData
    fullName: Funique.Video.VideoManagerData
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.ManagerBase{Funique.Video.VideoManagerData}.Loaded(Funique.Video.VideoManagerData)
  commentId: M:Funique.Manager.ManagerBase{Funique.Video.VideoManagerData}.Loaded(Funique.Video.VideoManagerData)
  parent: Funique.Manager.ManagerBase{Funique.Video.VideoManagerData}
  definition: Funique.Manager.ManagerBase`1.Loaded(`0)
  name: Loaded(VideoManagerData)
  nameWithType: ManagerBase<VideoManagerData>.Loaded(VideoManagerData)
  fullName: Funique.Manager.ManagerBase<Funique.Video.VideoManagerData>.Loaded(Funique.Video.VideoManagerData)
  nameWithType.vb: ManagerBase(Of VideoManagerData).Loaded(VideoManagerData)
  fullName.vb: Funique.Manager.ManagerBase(Of Funique.Video.VideoManagerData).Loaded(Funique.Video.VideoManagerData)
  spec.csharp:
  - uid: Funique.Manager.ManagerBase`1.Loaded(`0)
    name: Loaded
    nameWithType: ManagerBase<VideoManagerData>.Loaded
    fullName: Funique.Manager.ManagerBase<Funique.Video.VideoManagerData>.Loaded
  - name: (
    nameWithType: (
    fullName: (
  - uid: Funique.Video.VideoManagerData
    name: VideoManagerData
    nameWithType: VideoManagerData
    fullName: Funique.Video.VideoManagerData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase`1.Loaded(`0)
    name: Loaded
    nameWithType: ManagerBase(Of VideoManagerData).Loaded
    fullName: Funique.Manager.ManagerBase(Of Funique.Video.VideoManagerData).Loaded
  - name: (
    nameWithType: (
    fullName: (
  - uid: Funique.Video.VideoManagerData
    name: VideoManagerData
    nameWithType: VideoManagerData
    fullName: Funique.Video.VideoManagerData
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.ManagerBase.Initialization
  commentId: M:Funique.Manager.ManagerBase.Initialization
  parent: Funique.Manager.ManagerBase
  name: Initialization()
  nameWithType: ManagerBase.Initialization()
  fullName: Funique.Manager.ManagerBase.Initialization()
  spec.csharp:
  - uid: Funique.Manager.ManagerBase.Initialization
    name: Initialization
    nameWithType: ManagerBase.Initialization
    fullName: Funique.Manager.ManagerBase.Initialization
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase.Initialization
    name: Initialization
    nameWithType: ManagerBase.Initialization
    fullName: Funique.Manager.ManagerBase.Initialization
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.ManagerBase.FrameUpdate
  commentId: M:Funique.Manager.ManagerBase.FrameUpdate
  parent: Funique.Manager.ManagerBase
  name: FrameUpdate()
  nameWithType: ManagerBase.FrameUpdate()
  fullName: Funique.Manager.ManagerBase.FrameUpdate()
  spec.csharp:
  - uid: Funique.Manager.ManagerBase.FrameUpdate
    name: FrameUpdate
    nameWithType: ManagerBase.FrameUpdate
    fullName: Funique.Manager.ManagerBase.FrameUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase.FrameUpdate
    name: FrameUpdate
    nameWithType: ManagerBase.FrameUpdate
    fullName: Funique.Manager.ManagerBase.FrameUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.ManagerBase.Shutdown
  commentId: M:Funique.Manager.ManagerBase.Shutdown
  parent: Funique.Manager.ManagerBase
  name: Shutdown()
  nameWithType: ManagerBase.Shutdown()
  fullName: Funique.Manager.ManagerBase.Shutdown()
  spec.csharp:
  - uid: Funique.Manager.ManagerBase.Shutdown
    name: Shutdown
    nameWithType: ManagerBase.Shutdown
    fullName: Funique.Manager.ManagerBase.Shutdown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase.Shutdown
    name: Shutdown
    nameWithType: ManagerBase.Shutdown
    fullName: Funique.Manager.ManagerBase.Shutdown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.ManagerBase.Dispose
  commentId: M:Funique.Manager.ManagerBase.Dispose
  parent: Funique.Manager.ManagerBase
  name: Dispose()
  nameWithType: ManagerBase.Dispose()
  fullName: Funique.Manager.ManagerBase.Dispose()
  spec.csharp:
  - uid: Funique.Manager.ManagerBase.Dispose
    name: Dispose
    nameWithType: ManagerBase.Dispose
    fullName: Funique.Manager.ManagerBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase.Dispose
    name: Dispose
    nameWithType: ManagerBase.Dispose
    fullName: Funique.Manager.ManagerBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Funique.Manager.ManagerBase`1
  commentId: T:Funique.Manager.ManagerBase`1
  name: ManagerBase<T>
  nameWithType: ManagerBase<T>
  fullName: Funique.Manager.ManagerBase<T>
  nameWithType.vb: ManagerBase(Of T)
  fullName.vb: Funique.Manager.ManagerBase(Of T)
  name.vb: ManagerBase(Of T)
  spec.csharp:
  - uid: Funique.Manager.ManagerBase`1
    name: ManagerBase
    nameWithType: ManagerBase
    fullName: Funique.Manager.ManagerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Funique.Manager.ManagerBase`1
    name: ManagerBase
    nameWithType: ManagerBase
    fullName: Funique.Manager.ManagerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Video
  commentId: N:Funique.Video
  name: Funique.Video
  nameWithType: Funique.Video
  fullName: Funique.Video
- uid: Funique.Manager.ManagerBase`1.config
  commentId: P:Funique.Manager.ManagerBase`1.config
  name: config
  nameWithType: ManagerBase<T>.config
  fullName: Funique.Manager.ManagerBase<T>.config
  nameWithType.vb: ManagerBase(Of T).config
  fullName.vb: Funique.Manager.ManagerBase(Of T).config
- uid: Funique.Manager.ManagerBase`1.RegisterConfig(`0)
  commentId: M:Funique.Manager.ManagerBase`1.RegisterConfig(`0)
  name: RegisterConfig(T)
  nameWithType: ManagerBase<T>.RegisterConfig(T)
  fullName: Funique.Manager.ManagerBase<T>.RegisterConfig(T)
  nameWithType.vb: ManagerBase(Of T).RegisterConfig(T)
  fullName.vb: Funique.Manager.ManagerBase(Of T).RegisterConfig(T)
  spec.csharp:
  - uid: Funique.Manager.ManagerBase`1.RegisterConfig(`0)
    name: RegisterConfig
    nameWithType: ManagerBase<T>.RegisterConfig
    fullName: Funique.Manager.ManagerBase<T>.RegisterConfig
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase`1.RegisterConfig(`0)
    name: RegisterConfig
    nameWithType: ManagerBase(Of T).RegisterConfig
    fullName: Funique.Manager.ManagerBase(Of T).RegisterConfig
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.ManagerBase`1.Loaded(`0)
  commentId: M:Funique.Manager.ManagerBase`1.Loaded(`0)
  name: Loaded(T)
  nameWithType: ManagerBase<T>.Loaded(T)
  fullName: Funique.Manager.ManagerBase<T>.Loaded(T)
  nameWithType.vb: ManagerBase(Of T).Loaded(T)
  fullName.vb: Funique.Manager.ManagerBase(Of T).Loaded(T)
  spec.csharp:
  - uid: Funique.Manager.ManagerBase`1.Loaded(`0)
    name: Loaded
    nameWithType: ManagerBase<T>.Loaded
    fullName: Funique.Manager.ManagerBase<T>.Loaded
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase`1.Loaded(`0)
    name: Loaded
    nameWithType: ManagerBase(Of T).Loaded
    fullName: Funique.Manager.ManagerBase(Of T).Loaded
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Funique.Manager.VideoManagerUtility.RefVideoBtn*
  commentId: Overload:Funique.Manager.VideoManagerUtility.RefVideoBtn
  name: RefVideoBtn
  nameWithType: VideoManagerUtility.RefVideoBtn
  fullName: Funique.Manager.VideoManagerUtility.RefVideoBtn
- uid: Funique.Video.IVideoUtility.RefVideoBtn
  commentId: P:Funique.Video.IVideoUtility.RefVideoBtn
  parent: Funique.Video.IVideoUtility
  name: RefVideoBtn
  nameWithType: IVideoUtility.RefVideoBtn
  fullName: Funique.Video.IVideoUtility.RefVideoBtn
- uid: Funique.Manager.VideoManagerUtility.VideoList*
  commentId: Overload:Funique.Manager.VideoManagerUtility.VideoList
  name: VideoList
  nameWithType: VideoManagerUtility.VideoList
  fullName: Funique.Manager.VideoManagerUtility.VideoList
- uid: Funique.Video.IVideoUtility.VideoList
  commentId: P:Funique.Video.IVideoUtility.VideoList
  parent: Funique.Video.IVideoUtility
  name: VideoList
  nameWithType: IVideoUtility.VideoList
  fullName: Funique.Video.IVideoUtility.VideoList
- uid: System.Collections.Generic.List{Funique.VideoInfo}
  commentId: T:System.Collections.Generic.List{Funique.VideoInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<VideoInfo>
  nameWithType: List<VideoInfo>
  fullName: System.Collections.Generic.List<Funique.VideoInfo>
  nameWithType.vb: List(Of VideoInfo)
  fullName.vb: System.Collections.Generic.List(Of Funique.VideoInfo)
  name.vb: List(Of VideoInfo)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Funique.VideoInfo
    name: VideoInfo
    nameWithType: VideoInfo
    fullName: Funique.VideoInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Funique.VideoInfo
    name: VideoInfo
    nameWithType: VideoInfo
    fullName: Funique.VideoInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Funique.Manager.VideoManagerUtility.FilePath*
  commentId: Overload:Funique.Manager.VideoManagerUtility.FilePath
  name: FilePath
  nameWithType: VideoManagerUtility.FilePath
  fullName: Funique.Manager.VideoManagerUtility.FilePath
- uid: Funique.Video.IVideoUtility.FilePath
  commentId: P:Funique.Video.IVideoUtility.FilePath
  parent: Funique.Video.IVideoUtility
  name: FilePath
  nameWithType: IVideoUtility.FilePath
  fullName: Funique.Video.IVideoUtility.FilePath
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Funique.Manager.VideoManagerUtility.SelectedVideoBtnList*
  commentId: Overload:Funique.Manager.VideoManagerUtility.SelectedVideoBtnList
  name: SelectedVideoBtnList
  nameWithType: VideoManagerUtility.SelectedVideoBtnList
  fullName: Funique.Manager.VideoManagerUtility.SelectedVideoBtnList
- uid: Funique.Video.IVideoUtility.SelectedVideoBtnList
  commentId: P:Funique.Video.IVideoUtility.SelectedVideoBtnList
  parent: Funique.Video.IVideoUtility
  name: SelectedVideoBtnList
  nameWithType: IVideoUtility.SelectedVideoBtnList
  fullName: Funique.Video.IVideoUtility.SelectedVideoBtnList
- uid: Funique.Manager.VideoManagerUtility.RemovePanelBtn*
  commentId: Overload:Funique.Manager.VideoManagerUtility.RemovePanelBtn
  name: RemovePanelBtn
  nameWithType: VideoManagerUtility.RemovePanelBtn
  fullName: Funique.Manager.VideoManagerUtility.RemovePanelBtn
- uid: Funique.Video.IVideoUtility.RemovePanelBtn(UnityEngine.Transform)
  commentId: M:Funique.Video.IVideoUtility.RemovePanelBtn(UnityEngine.Transform)
  parent: Funique.Video.IVideoUtility
  isExternal: true
  name: RemovePanelBtn(Transform)
  nameWithType: IVideoUtility.RemovePanelBtn(Transform)
  fullName: Funique.Video.IVideoUtility.RemovePanelBtn(UnityEngine.Transform)
  spec.csharp:
  - uid: Funique.Video.IVideoUtility.RemovePanelBtn(UnityEngine.Transform)
    name: RemovePanelBtn
    nameWithType: IVideoUtility.RemovePanelBtn
    fullName: Funique.Video.IVideoUtility.RemovePanelBtn
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Video.IVideoUtility.RemovePanelBtn(UnityEngine.Transform)
    name: RemovePanelBtn
    nameWithType: IVideoUtility.RemovePanelBtn
    fullName: Funique.Video.IVideoUtility.RemovePanelBtn
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Transform
  commentId: T:UnityEngine.Transform
  parent: UnityEngine
  isExternal: true
  name: Transform
  nameWithType: Transform
  fullName: UnityEngine.Transform
- uid: Funique.Manager.VideoManagerUtility.AddVideoInfo*
  commentId: Overload:Funique.Manager.VideoManagerUtility.AddVideoInfo
  name: AddVideoInfo
  nameWithType: VideoManagerUtility.AddVideoInfo
  fullName: Funique.Manager.VideoManagerUtility.AddVideoInfo
- uid: Funique.Video.IVideoUtility.AddVideoInfo(Funique.VideoInfo)
  commentId: M:Funique.Video.IVideoUtility.AddVideoInfo(Funique.VideoInfo)
  parent: Funique.Video.IVideoUtility
  name: AddVideoInfo(VideoInfo)
  nameWithType: IVideoUtility.AddVideoInfo(VideoInfo)
  fullName: Funique.Video.IVideoUtility.AddVideoInfo(Funique.VideoInfo)
  spec.csharp:
  - uid: Funique.Video.IVideoUtility.AddVideoInfo(Funique.VideoInfo)
    name: AddVideoInfo
    nameWithType: IVideoUtility.AddVideoInfo
    fullName: Funique.Video.IVideoUtility.AddVideoInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: Funique.VideoInfo
    name: VideoInfo
    nameWithType: VideoInfo
    fullName: Funique.VideoInfo
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Video.IVideoUtility.AddVideoInfo(Funique.VideoInfo)
    name: AddVideoInfo
    nameWithType: IVideoUtility.AddVideoInfo
    fullName: Funique.Video.IVideoUtility.AddVideoInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: Funique.VideoInfo
    name: VideoInfo
    nameWithType: VideoInfo
    fullName: Funique.VideoInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.VideoInfo
  commentId: T:Funique.VideoInfo
  parent: Funique
  name: VideoInfo
  nameWithType: VideoInfo
  fullName: Funique.VideoInfo
- uid: Funique
  commentId: N:Funique
  name: Funique
  nameWithType: Funique
  fullName: Funique
- uid: Funique.Manager.VideoManagerUtility.LoadVideoFile*
  commentId: Overload:Funique.Manager.VideoManagerUtility.LoadVideoFile
  name: LoadVideoFile
  nameWithType: VideoManagerUtility.LoadVideoFile
  fullName: Funique.Manager.VideoManagerUtility.LoadVideoFile
- uid: Funique.Video.IVideoUtility.LoadVideoFile
  commentId: M:Funique.Video.IVideoUtility.LoadVideoFile
  parent: Funique.Video.IVideoUtility
  name: LoadVideoFile()
  nameWithType: IVideoUtility.LoadVideoFile()
  fullName: Funique.Video.IVideoUtility.LoadVideoFile()
  spec.csharp:
  - uid: Funique.Video.IVideoUtility.LoadVideoFile
    name: LoadVideoFile
    nameWithType: IVideoUtility.LoadVideoFile
    fullName: Funique.Video.IVideoUtility.LoadVideoFile
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Video.IVideoUtility.LoadVideoFile
    name: LoadVideoFile
    nameWithType: IVideoUtility.LoadVideoFile
    fullName: Funique.Video.IVideoUtility.LoadVideoFile
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.VideoManagerUtility.SaveVideoListFile*
  commentId: Overload:Funique.Manager.VideoManagerUtility.SaveVideoListFile
  name: SaveVideoListFile
  nameWithType: VideoManagerUtility.SaveVideoListFile
  fullName: Funique.Manager.VideoManagerUtility.SaveVideoListFile
- uid: Funique.Video.IVideoUtility.SaveVideoListFile
  commentId: M:Funique.Video.IVideoUtility.SaveVideoListFile
  parent: Funique.Video.IVideoUtility
  name: SaveVideoListFile()
  nameWithType: IVideoUtility.SaveVideoListFile()
  fullName: Funique.Video.IVideoUtility.SaveVideoListFile()
  spec.csharp:
  - uid: Funique.Video.IVideoUtility.SaveVideoListFile
    name: SaveVideoListFile
    nameWithType: IVideoUtility.SaveVideoListFile
    fullName: Funique.Video.IVideoUtility.SaveVideoListFile
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Video.IVideoUtility.SaveVideoListFile
    name: SaveVideoListFile
    nameWithType: IVideoUtility.SaveVideoListFile
    fullName: Funique.Video.IVideoUtility.SaveVideoListFile
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
