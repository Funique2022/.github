### YamlMime:ManagedReference
items:
- uid: Funique.UI.IUIUtility
  commentId: T:Funique.UI.IUIUtility
  id: IUIUtility
  parent: Funique.UI
  children:
  - Funique.UI.IUIUtility.ActionPanelControl
  - Funique.UI.IUIUtility.ApplyToolbarEvent(Funique.UI.ToolbarButtonToggleStructure,System.Int32)
  - Funique.UI.IUIUtility.ChainDict
  - Funique.UI.IUIUtility.CloseAllModalPanel
  - Funique.UI.IUIUtility.CloseAllPanel
  - Funique.UI.IUIUtility.Contents
  - Funique.UI.IUIUtility.InfoPanelControl
  - Funique.UI.IUIUtility.IsLobby
  - Funique.UI.IUIUtility.IsPlaylist
  - Funique.UI.IUIUtility.IsStreaming
  - Funique.UI.IUIUtility.IsVideo
  - Funique.UI.IUIUtility.Panels
  - Funique.UI.IUIUtility.RefRightBtn
  - Funique.UI.IUIUtility.RefRightBtnMenu
  - Funique.UI.IUIUtility.RefRightCinemaLabel
  - Funique.UI.IUIUtility.RefRightCinemaLabelList
  - Funique.UI.IUIUtility.RefRightFoldBtn
  - Funique.UI.IUIUtility.SetLobbyPanelState(System.Boolean)
  - Funique.UI.IUIUtility.SettingPanelControl
  - Funique.UI.IUIUtility.SwitchPanel(System.Int32)
  - Funique.UI.IUIUtility.Toolbar
  - Funique.UI.IUIUtility.TooltipController
  - Funique.UI.IUIUtility.VideoListPanelControl
  langs:
  - csharp
  - vb
  name: IUIUtility
  nameWithType: IUIUtility
  fullName: Funique.UI.IUIUtility
  type: Interface
  source:
    remote:
      path: Interface/IUIUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_ui.git
    id: IUIUtility
    path: ../../../project_unity_development/Assets/FuniquePlugin/UI/Interface/IUIUtility.cs
    startLine: 11
  assemblies:
  - Funique.UI
  namespace: Funique.UI
  summary: "\nUser Interface Features <br />\n------------------------------------------------ <br />\n使用者介面管理功能\n"
  example: []
  syntax:
    content: 'public interface IUIUtility : IModuleBase<UIManagerData>'
    content.vb: >-
      Public Interface IUIUtility

          Inherits IModuleBase(Of UIManagerData)
  inheritedMembers:
  - Funique.IModuleBase{Funique.UI.UIManagerData}.config
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Funique.UI.IUIUtility.RefRightBtnMenu
  commentId: P:Funique.UI.IUIUtility.RefRightBtnMenu
  id: RefRightBtnMenu
  parent: Funique.UI.IUIUtility
  langs:
  - csharp
  - vb
  name: RefRightBtnMenu
  nameWithType: IUIUtility.RefRightBtnMenu
  fullName: Funique.UI.IUIUtility.RefRightBtnMenu
  type: Property
  source:
    remote:
      path: Interface/IUIUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_ui.git
    id: RefRightBtnMenu
    path: ../../../project_unity_development/Assets/FuniquePlugin/UI/Interface/IUIUtility.cs
    startLine: 13
  assemblies:
  - Funique.UI
  namespace: Funique.UI
  syntax:
    content: GameObject RefRightBtnMenu { get; }
    parameters: []
    return:
      type: UnityEngine.GameObject
    content.vb: ReadOnly Property RefRightBtnMenu As GameObject
  overload: Funique.UI.IUIUtility.RefRightBtnMenu*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Funique.UI.IUIUtility.RefRightBtn
  commentId: P:Funique.UI.IUIUtility.RefRightBtn
  id: RefRightBtn
  parent: Funique.UI.IUIUtility
  langs:
  - csharp
  - vb
  name: RefRightBtn
  nameWithType: IUIUtility.RefRightBtn
  fullName: Funique.UI.IUIUtility.RefRightBtn
  type: Property
  source:
    remote:
      path: Interface/IUIUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_ui.git
    id: RefRightBtn
    path: ../../../project_unity_development/Assets/FuniquePlugin/UI/Interface/IUIUtility.cs
    startLine: 14
  assemblies:
  - Funique.UI
  namespace: Funique.UI
  syntax:
    content: GameObject RefRightBtn { get; }
    parameters: []
    return:
      type: UnityEngine.GameObject
    content.vb: ReadOnly Property RefRightBtn As GameObject
  overload: Funique.UI.IUIUtility.RefRightBtn*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Funique.UI.IUIUtility.RefRightFoldBtn
  commentId: P:Funique.UI.IUIUtility.RefRightFoldBtn
  id: RefRightFoldBtn
  parent: Funique.UI.IUIUtility
  langs:
  - csharp
  - vb
  name: RefRightFoldBtn
  nameWithType: IUIUtility.RefRightFoldBtn
  fullName: Funique.UI.IUIUtility.RefRightFoldBtn
  type: Property
  source:
    remote:
      path: Interface/IUIUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_ui.git
    id: RefRightFoldBtn
    path: ../../../project_unity_development/Assets/FuniquePlugin/UI/Interface/IUIUtility.cs
    startLine: 15
  assemblies:
  - Funique.UI
  namespace: Funique.UI
  syntax:
    content: GameObject RefRightFoldBtn { get; }
    parameters: []
    return:
      type: UnityEngine.GameObject
    content.vb: ReadOnly Property RefRightFoldBtn As GameObject
  overload: Funique.UI.IUIUtility.RefRightFoldBtn*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Funique.UI.IUIUtility.RefRightCinemaLabelList
  commentId: P:Funique.UI.IUIUtility.RefRightCinemaLabelList
  id: RefRightCinemaLabelList
  parent: Funique.UI.IUIUtility
  langs:
  - csharp
  - vb
  name: RefRightCinemaLabelList
  nameWithType: IUIUtility.RefRightCinemaLabelList
  fullName: Funique.UI.IUIUtility.RefRightCinemaLabelList
  type: Property
  source:
    remote:
      path: Interface/IUIUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_ui.git
    id: RefRightCinemaLabelList
    path: ../../../project_unity_development/Assets/FuniquePlugin/UI/Interface/IUIUtility.cs
    startLine: 16
  assemblies:
  - Funique.UI
  namespace: Funique.UI
  syntax:
    content: GameObject RefRightCinemaLabelList { get; }
    parameters: []
    return:
      type: UnityEngine.GameObject
    content.vb: ReadOnly Property RefRightCinemaLabelList As GameObject
  overload: Funique.UI.IUIUtility.RefRightCinemaLabelList*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Funique.UI.IUIUtility.RefRightCinemaLabel
  commentId: P:Funique.UI.IUIUtility.RefRightCinemaLabel
  id: RefRightCinemaLabel
  parent: Funique.UI.IUIUtility
  langs:
  - csharp
  - vb
  name: RefRightCinemaLabel
  nameWithType: IUIUtility.RefRightCinemaLabel
  fullName: Funique.UI.IUIUtility.RefRightCinemaLabel
  type: Property
  source:
    remote:
      path: Interface/IUIUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_ui.git
    id: RefRightCinemaLabel
    path: ../../../project_unity_development/Assets/FuniquePlugin/UI/Interface/IUIUtility.cs
    startLine: 17
  assemblies:
  - Funique.UI
  namespace: Funique.UI
  syntax:
    content: GameObject RefRightCinemaLabel { get; }
    parameters: []
    return:
      type: UnityEngine.GameObject
    content.vb: ReadOnly Property RefRightCinemaLabel As GameObject
  overload: Funique.UI.IUIUtility.RefRightCinemaLabel*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Funique.UI.IUIUtility.TooltipController
  commentId: P:Funique.UI.IUIUtility.TooltipController
  id: TooltipController
  parent: Funique.UI.IUIUtility
  langs:
  - csharp
  - vb
  name: TooltipController
  nameWithType: IUIUtility.TooltipController
  fullName: Funique.UI.IUIUtility.TooltipController
  type: Property
  source:
    remote:
      path: Interface/IUIUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_ui.git
    id: TooltipController
    path: ../../../project_unity_development/Assets/FuniquePlugin/UI/Interface/IUIUtility.cs
    startLine: 18
  assemblies:
  - Funique.UI
  namespace: Funique.UI
  syntax:
    content: TooltipPanel TooltipController { get; }
    parameters: []
    return:
      type: Funique.UI.TooltipPanel
    content.vb: ReadOnly Property TooltipController As TooltipPanel
  overload: Funique.UI.IUIUtility.TooltipController*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Funique.UI.IUIUtility.Toolbar
  commentId: P:Funique.UI.IUIUtility.Toolbar
  id: Toolbar
  parent: Funique.UI.IUIUtility
  langs:
  - csharp
  - vb
  name: Toolbar
  nameWithType: IUIUtility.Toolbar
  fullName: Funique.UI.IUIUtility.Toolbar
  type: Property
  source:
    remote:
      path: Interface/IUIUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_ui.git
    id: Toolbar
    path: ../../../project_unity_development/Assets/FuniquePlugin/UI/Interface/IUIUtility.cs
    startLine: 32
  assemblies:
  - Funique.UI
  namespace: Funique.UI
  summary: "\nAll the registered toolbar panels <br />\n0: Info <br />\n1: Setting <br />\n2: Action <br />\n3: Video List <br />\n------------------------------------------------ <br />\n所有註冊的工具列介面 <br />\n0: 資訊 <br />\n1: 設定 <br />\n2: 動作 <br />\n3: 影片列表 <br />\n"
  example: []
  syntax:
    content: GameObject[] Toolbar { get; }
    parameters: []
    return:
      type: UnityEngine.GameObject[]
    content.vb: ReadOnly Property Toolbar As GameObject()
  overload: Funique.UI.IUIUtility.Toolbar*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Funique.UI.IUIUtility.Panels
  commentId: P:Funique.UI.IUIUtility.Panels
  id: Panels
  parent: Funique.UI.IUIUtility
  langs:
  - csharp
  - vb
  name: Panels
  nameWithType: IUIUtility.Panels
  fullName: Funique.UI.IUIUtility.Panels
  type: Property
  source:
    remote:
      path: Interface/IUIUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_ui.git
    id: Panels
    path: ../../../project_unity_development/Assets/FuniquePlugin/UI/Interface/IUIUtility.cs
    startLine: 46
  assemblies:
  - Funique.UI
  namespace: Funique.UI
  summary: "\nAll the registered panels <br />\n0: Lobby <br />\n1: Video <br />\n2: Playlist <br />\n3: Login <br />\n------------------------------------------------ <br />\n所有註冊的介面 <br />\n0: 大廳 <br />\n1: 影片 <br />\n2: 播放清單 <br />\n3: 登入\n"
  example: []
  syntax:
    content: GameObject[] Panels { get; }
    parameters: []
    return:
      type: UnityEngine.GameObject[]
    content.vb: ReadOnly Property Panels As GameObject()
  overload: Funique.UI.IUIUtility.Panels*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Funique.UI.IUIUtility.Contents
  commentId: P:Funique.UI.IUIUtility.Contents
  id: Contents
  parent: Funique.UI.IUIUtility
  langs:
  - csharp
  - vb
  name: Contents
  nameWithType: IUIUtility.Contents
  fullName: Funique.UI.IUIUtility.Contents
  type: Property
  source:
    remote:
      path: Interface/IUIUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_ui.git
    id: Contents
    path: ../../../project_unity_development/Assets/FuniquePlugin/UI/Interface/IUIUtility.cs
    startLine: 56
  assemblies:
  - Funique.UI
  namespace: Funique.UI
  summary: "\nAll content transform <br />\n0: Video <br />\n1: Playlist <br />\n------------------------------------------------ <br />\n所有清單內容場景物件 <br />\n0: 影片 <br />\n1: 播放清單 <br />\n"
  example: []
  syntax:
    content: Transform[] Contents { get; }
    parameters: []
    return:
      type: UnityEngine.Transform[]
    content.vb: ReadOnly Property Contents As Transform()
  overload: Funique.UI.IUIUtility.Contents*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Funique.UI.IUIUtility.IsLobby
  commentId: P:Funique.UI.IUIUtility.IsLobby
  id: IsLobby
  parent: Funique.UI.IUIUtility
  langs:
  - csharp
  - vb
  name: IsLobby
  nameWithType: IUIUtility.IsLobby
  fullName: Funique.UI.IUIUtility.IsLobby
  type: Property
  source:
    remote:
      path: Interface/IUIUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_ui.git
    id: IsLobby
    path: ../../../project_unity_development/Assets/FuniquePlugin/UI/Interface/IUIUtility.cs
    startLine: 62
  assemblies:
  - Funique.UI
  namespace: Funique.UI
  summary: "\nCheck if current page is lobby or not <br />\n------------------------------------------------ <br />\n查看狀態來判斷目前是否在大廳介面\n"
  example: []
  syntax:
    content: bool IsLobby { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsLobby As Boolean
  overload: Funique.UI.IUIUtility.IsLobby*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Funique.UI.IUIUtility.IsVideo
  commentId: P:Funique.UI.IUIUtility.IsVideo
  id: IsVideo
  parent: Funique.UI.IUIUtility
  langs:
  - csharp
  - vb
  name: IsVideo
  nameWithType: IUIUtility.IsVideo
  fullName: Funique.UI.IUIUtility.IsVideo
  type: Property
  source:
    remote:
      path: Interface/IUIUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_ui.git
    id: IsVideo
    path: ../../../project_unity_development/Assets/FuniquePlugin/UI/Interface/IUIUtility.cs
    startLine: 68
  assemblies:
  - Funique.UI
  namespace: Funique.UI
  summary: "\nCheck if current page is video or not <br />\n------------------------------------------------ <br />\n查看狀態來判斷目前是否在影片列表介面\n"
  example: []
  syntax:
    content: bool IsVideo { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsVideo As Boolean
  overload: Funique.UI.IUIUtility.IsVideo*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Funique.UI.IUIUtility.IsPlaylist
  commentId: P:Funique.UI.IUIUtility.IsPlaylist
  id: IsPlaylist
  parent: Funique.UI.IUIUtility
  langs:
  - csharp
  - vb
  name: IsPlaylist
  nameWithType: IUIUtility.IsPlaylist
  fullName: Funique.UI.IUIUtility.IsPlaylist
  type: Property
  source:
    remote:
      path: Interface/IUIUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_ui.git
    id: IsPlaylist
    path: ../../../project_unity_development/Assets/FuniquePlugin/UI/Interface/IUIUtility.cs
    startLine: 74
  assemblies:
  - Funique.UI
  namespace: Funique.UI
  summary: "\nCheck if current page is playlist or not <br />\n------------------------------------------------ <br />\n查看狀態來判斷目前是否在播放清單介面\n"
  example: []
  syntax:
    content: bool IsPlaylist { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsPlaylist As Boolean
  overload: Funique.UI.IUIUtility.IsPlaylist*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Funique.UI.IUIUtility.IsStreaming
  commentId: P:Funique.UI.IUIUtility.IsStreaming
  id: IsStreaming
  parent: Funique.UI.IUIUtility
  langs:
  - csharp
  - vb
  name: IsStreaming
  nameWithType: IUIUtility.IsStreaming
  fullName: Funique.UI.IUIUtility.IsStreaming
  type: Property
  source:
    remote:
      path: Interface/IUIUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_ui.git
    id: IsStreaming
    path: ../../../project_unity_development/Assets/FuniquePlugin/UI/Interface/IUIUtility.cs
    startLine: 80
  assemblies:
  - Funique.UI
  namespace: Funique.UI
  summary: "\nCheck if current page is streaming or not <br />\n------------------------------------------------ <br />\n查看狀態來判斷目前是否在串流介面\n"
  example: []
  syntax:
    content: bool IsStreaming { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsStreaming As Boolean
  overload: Funique.UI.IUIUtility.IsStreaming*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Funique.UI.IUIUtility.ChainDict
  commentId: P:Funique.UI.IUIUtility.ChainDict
  id: ChainDict
  parent: Funique.UI.IUIUtility
  langs:
  - csharp
  - vb
  name: ChainDict
  nameWithType: IUIUtility.ChainDict
  fullName: Funique.UI.IUIUtility.ChainDict
  type: Property
  source:
    remote:
      path: Interface/IUIUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_ui.git
    id: ChainDict
    path: ../../../project_unity_development/Assets/FuniquePlugin/UI/Interface/IUIUtility.cs
    startLine: 81
  assemblies:
  - Funique.UI
  namespace: Funique.UI
  syntax:
    content: Dictionary<RightClickMenuOption, Action<GameObject>> ChainDict { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{Funique.UI.RightClickMenuOption,System.Action{UnityEngine.GameObject}}
    content.vb: ReadOnly Property ChainDict As Dictionary(Of RightClickMenuOption, Action(Of GameObject))
  overload: Funique.UI.IUIUtility.ChainDict*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Funique.UI.IUIUtility.CloseAllPanel
  commentId: M:Funique.UI.IUIUtility.CloseAllPanel
  id: CloseAllPanel
  parent: Funique.UI.IUIUtility
  langs:
  - csharp
  - vb
  name: CloseAllPanel()
  nameWithType: IUIUtility.CloseAllPanel()
  fullName: Funique.UI.IUIUtility.CloseAllPanel()
  type: Method
  source:
    remote:
      path: Interface/IUIUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_ui.git
    id: CloseAllPanel
    path: ../../../project_unity_development/Assets/FuniquePlugin/UI/Interface/IUIUtility.cs
    startLine: 87
  assemblies:
  - Funique.UI
  namespace: Funique.UI
  summary: "\nFolding all user interface elements <br />\n------------------------------------------------ <br />\n收起所有使用者介面\n"
  example: []
  syntax:
    content: void CloseAllPanel()
    content.vb: Sub CloseAllPanel
  overload: Funique.UI.IUIUtility.CloseAllPanel*
- uid: Funique.UI.IUIUtility.SwitchPanel(System.Int32)
  commentId: M:Funique.UI.IUIUtility.SwitchPanel(System.Int32)
  id: SwitchPanel(System.Int32)
  parent: Funique.UI.IUIUtility
  langs:
  - csharp
  - vb
  name: SwitchPanel(Int32)
  nameWithType: IUIUtility.SwitchPanel(Int32)
  fullName: Funique.UI.IUIUtility.SwitchPanel(System.Int32)
  type: Method
  source:
    remote:
      path: Interface/IUIUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_ui.git
    id: SwitchPanel
    path: ../../../project_unity_development/Assets/FuniquePlugin/UI/Interface/IUIUtility.cs
    startLine: 94
  assemblies:
  - Funique.UI
  namespace: Funique.UI
  summary: "\nSwitch to specific page by index <br />\n------------------------------------------------ <br />\n切換到指定的頁面\n"
  example: []
  syntax:
    content: void SwitchPanel(int index)
    parameters:
    - id: index
      type: System.Int32
      description: ''
    content.vb: Sub SwitchPanel(index As Integer)
  overload: Funique.UI.IUIUtility.SwitchPanel*
- uid: Funique.UI.IUIUtility.SetLobbyPanelState(System.Boolean)
  commentId: M:Funique.UI.IUIUtility.SetLobbyPanelState(System.Boolean)
  id: SetLobbyPanelState(System.Boolean)
  parent: Funique.UI.IUIUtility
  langs:
  - csharp
  - vb
  name: SetLobbyPanelState(Boolean)
  nameWithType: IUIUtility.SetLobbyPanelState(Boolean)
  fullName: Funique.UI.IUIUtility.SetLobbyPanelState(System.Boolean)
  type: Method
  source:
    remote:
      path: Interface/IUIUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_ui.git
    id: SetLobbyPanelState
    path: ../../../project_unity_development/Assets/FuniquePlugin/UI/Interface/IUIUtility.cs
    startLine: 101
  assemblies:
  - Funique.UI
  namespace: Funique.UI
  summary: "\nSet lobby panel state <br />\n------------------------------------------------ <br />\n設定大廳狀態\n"
  example: []
  syntax:
    content: void SetLobbyPanelState(bool state)
    parameters:
    - id: state
      type: System.Boolean
      description: ''
    content.vb: Sub SetLobbyPanelState(state As Boolean)
  overload: Funique.UI.IUIUtility.SetLobbyPanelState*
- uid: Funique.UI.IUIUtility.CloseAllModalPanel
  commentId: M:Funique.UI.IUIUtility.CloseAllModalPanel
  id: CloseAllModalPanel
  parent: Funique.UI.IUIUtility
  langs:
  - csharp
  - vb
  name: CloseAllModalPanel()
  nameWithType: IUIUtility.CloseAllModalPanel()
  fullName: Funique.UI.IUIUtility.CloseAllModalPanel()
  type: Method
  source:
    remote:
      path: Interface/IUIUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_ui.git
    id: CloseAllModalPanel
    path: ../../../project_unity_development/Assets/FuniquePlugin/UI/Interface/IUIUtility.cs
    startLine: 108
  assemblies:
  - Funique.UI
  namespace: Funique.UI
  summary: "\nClose all modal panel <br />\n------------------------------------------------ <br />\n關閉所有介面\n"
  example: []
  syntax:
    content: void CloseAllModalPanel()
    content.vb: Sub CloseAllModalPanel
  overload: Funique.UI.IUIUtility.CloseAllModalPanel*
- uid: Funique.UI.IUIUtility.InfoPanelControl
  commentId: M:Funique.UI.IUIUtility.InfoPanelControl
  id: InfoPanelControl
  parent: Funique.UI.IUIUtility
  langs:
  - csharp
  - vb
  name: InfoPanelControl()
  nameWithType: IUIUtility.InfoPanelControl()
  fullName: Funique.UI.IUIUtility.InfoPanelControl()
  type: Method
  source:
    remote:
      path: Interface/IUIUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_ui.git
    id: InfoPanelControl
    path: ../../../project_unity_development/Assets/FuniquePlugin/UI/Interface/IUIUtility.cs
    startLine: 114
  assemblies:
  - Funique.UI
  namespace: Funique.UI
  summary: "\nClose all panels, Then toggle info panel <br />\n------------------------------------------------ <br />\n關閉所有介面, 然後開啟資料介面\n"
  example: []
  syntax:
    content: void InfoPanelControl()
    content.vb: Sub InfoPanelControl
  overload: Funique.UI.IUIUtility.InfoPanelControl*
- uid: Funique.UI.IUIUtility.SettingPanelControl
  commentId: M:Funique.UI.IUIUtility.SettingPanelControl
  id: SettingPanelControl
  parent: Funique.UI.IUIUtility
  langs:
  - csharp
  - vb
  name: SettingPanelControl()
  nameWithType: IUIUtility.SettingPanelControl()
  fullName: Funique.UI.IUIUtility.SettingPanelControl()
  type: Method
  source:
    remote:
      path: Interface/IUIUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_ui.git
    id: SettingPanelControl
    path: ../../../project_unity_development/Assets/FuniquePlugin/UI/Interface/IUIUtility.cs
    startLine: 120
  assemblies:
  - Funique.UI
  namespace: Funique.UI
  summary: "\nClose all panels, Then toggle setting panel <br />\n------------------------------------------------ <br />\n關閉所有介面, 然後開啟設定介面\n"
  example: []
  syntax:
    content: void SettingPanelControl()
    content.vb: Sub SettingPanelControl
  overload: Funique.UI.IUIUtility.SettingPanelControl*
- uid: Funique.UI.IUIUtility.ActionPanelControl
  commentId: M:Funique.UI.IUIUtility.ActionPanelControl
  id: ActionPanelControl
  parent: Funique.UI.IUIUtility
  langs:
  - csharp
  - vb
  name: ActionPanelControl()
  nameWithType: IUIUtility.ActionPanelControl()
  fullName: Funique.UI.IUIUtility.ActionPanelControl()
  type: Method
  source:
    remote:
      path: Interface/IUIUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_ui.git
    id: ActionPanelControl
    path: ../../../project_unity_development/Assets/FuniquePlugin/UI/Interface/IUIUtility.cs
    startLine: 126
  assemblies:
  - Funique.UI
  namespace: Funique.UI
  summary: "\nClose all panels, Then toggle action panel <br />\n------------------------------------------------ <br />\n關閉所有介面, 然後開啟動作介面\n"
  example: []
  syntax:
    content: void ActionPanelControl()
    content.vb: Sub ActionPanelControl
  overload: Funique.UI.IUIUtility.ActionPanelControl*
- uid: Funique.UI.IUIUtility.VideoListPanelControl
  commentId: M:Funique.UI.IUIUtility.VideoListPanelControl
  id: VideoListPanelControl
  parent: Funique.UI.IUIUtility
  langs:
  - csharp
  - vb
  name: VideoListPanelControl()
  nameWithType: IUIUtility.VideoListPanelControl()
  fullName: Funique.UI.IUIUtility.VideoListPanelControl()
  type: Method
  source:
    remote:
      path: Interface/IUIUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_ui.git
    id: VideoListPanelControl
    path: ../../../project_unity_development/Assets/FuniquePlugin/UI/Interface/IUIUtility.cs
    startLine: 132
  assemblies:
  - Funique.UI
  namespace: Funique.UI
  summary: "\nClose all panels, Then toggle video list panel <br />\n------------------------------------------------ <br />\n關閉所有介面, 然後開啟影片列表介面\n"
  example: []
  syntax:
    content: void VideoListPanelControl()
    content.vb: Sub VideoListPanelControl
  overload: Funique.UI.IUIUtility.VideoListPanelControl*
- uid: Funique.UI.IUIUtility.ApplyToolbarEvent(Funique.UI.ToolbarButtonToggleStructure,System.Int32)
  commentId: M:Funique.UI.IUIUtility.ApplyToolbarEvent(Funique.UI.ToolbarButtonToggleStructure,System.Int32)
  id: ApplyToolbarEvent(Funique.UI.ToolbarButtonToggleStructure,System.Int32)
  parent: Funique.UI.IUIUtility
  langs:
  - csharp
  - vb
  name: ApplyToolbarEvent(ToolbarButtonToggleStructure, Int32)
  nameWithType: IUIUtility.ApplyToolbarEvent(ToolbarButtonToggleStructure, Int32)
  fullName: Funique.UI.IUIUtility.ApplyToolbarEvent(Funique.UI.ToolbarButtonToggleStructure, System.Int32)
  type: Method
  source:
    remote:
      path: Interface/IUIUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_ui.git
    id: ApplyToolbarEvent
    path: ../../../project_unity_development/Assets/FuniquePlugin/UI/Interface/IUIUtility.cs
    startLine: 133
  assemblies:
  - Funique.UI
  namespace: Funique.UI
  syntax:
    content: void ApplyToolbarEvent(ToolbarButtonToggleStructure target, int index)
    parameters:
    - id: target
      type: Funique.UI.ToolbarButtonToggleStructure
    - id: index
      type: System.Int32
    content.vb: Sub ApplyToolbarEvent(target As ToolbarButtonToggleStructure, index As Integer)
  overload: Funique.UI.IUIUtility.ApplyToolbarEvent*
references:
- uid: Funique.UI
  commentId: N:Funique.UI
  name: Funique.UI
  nameWithType: Funique.UI
  fullName: Funique.UI
- uid: Funique.IModuleBase{Funique.UI.UIManagerData}.config
  commentId: P:Funique.IModuleBase{Funique.UI.UIManagerData}.config
  parent: Funique.IModuleBase{Funique.UI.UIManagerData}
  definition: Funique.IModuleBase`1.config
  name: config
  nameWithType: IModuleBase<UIManagerData>.config
  fullName: Funique.IModuleBase<Funique.UI.UIManagerData>.config
  nameWithType.vb: IModuleBase(Of UIManagerData).config
  fullName.vb: Funique.IModuleBase(Of Funique.UI.UIManagerData).config
- uid: Funique.IModuleBase`1.config
  commentId: P:Funique.IModuleBase`1.config
  name: config
  nameWithType: IModuleBase<T>.config
  fullName: Funique.IModuleBase<T>.config
  nameWithType.vb: IModuleBase(Of T).config
  fullName.vb: Funique.IModuleBase(Of T).config
- uid: Funique.IModuleBase{Funique.UI.UIManagerData}
  commentId: T:Funique.IModuleBase{Funique.UI.UIManagerData}
  parent: Funique
  definition: Funique.IModuleBase`1
  name: IModuleBase<UIManagerData>
  nameWithType: IModuleBase<UIManagerData>
  fullName: Funique.IModuleBase<Funique.UI.UIManagerData>
  nameWithType.vb: IModuleBase(Of UIManagerData)
  fullName.vb: Funique.IModuleBase(Of Funique.UI.UIManagerData)
  name.vb: IModuleBase(Of UIManagerData)
  spec.csharp:
  - uid: Funique.IModuleBase`1
    name: IModuleBase
    nameWithType: IModuleBase
    fullName: Funique.IModuleBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Funique.UI.UIManagerData
    name: UIManagerData
    nameWithType: UIManagerData
    fullName: Funique.UI.UIManagerData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Funique.IModuleBase`1
    name: IModuleBase
    nameWithType: IModuleBase
    fullName: Funique.IModuleBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Funique.UI.UIManagerData
    name: UIManagerData
    nameWithType: UIManagerData
    fullName: Funique.UI.UIManagerData
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.IModuleBase`1
  commentId: T:Funique.IModuleBase`1
  name: IModuleBase<T>
  nameWithType: IModuleBase<T>
  fullName: Funique.IModuleBase<T>
  nameWithType.vb: IModuleBase(Of T)
  fullName.vb: Funique.IModuleBase(Of T)
  name.vb: IModuleBase(Of T)
  spec.csharp:
  - uid: Funique.IModuleBase`1
    name: IModuleBase
    nameWithType: IModuleBase
    fullName: Funique.IModuleBase
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Funique.IModuleBase`1
    name: IModuleBase
    nameWithType: IModuleBase
    fullName: Funique.IModuleBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique
  commentId: N:Funique
  name: Funique
  nameWithType: Funique
  fullName: Funique
- uid: Funique.UI.IUIUtility.RefRightBtnMenu*
  commentId: Overload:Funique.UI.IUIUtility.RefRightBtnMenu
  name: RefRightBtnMenu
  nameWithType: IUIUtility.RefRightBtnMenu
  fullName: Funique.UI.IUIUtility.RefRightBtnMenu
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Funique.UI.IUIUtility.RefRightBtn*
  commentId: Overload:Funique.UI.IUIUtility.RefRightBtn
  name: RefRightBtn
  nameWithType: IUIUtility.RefRightBtn
  fullName: Funique.UI.IUIUtility.RefRightBtn
- uid: Funique.UI.IUIUtility.RefRightFoldBtn*
  commentId: Overload:Funique.UI.IUIUtility.RefRightFoldBtn
  name: RefRightFoldBtn
  nameWithType: IUIUtility.RefRightFoldBtn
  fullName: Funique.UI.IUIUtility.RefRightFoldBtn
- uid: Funique.UI.IUIUtility.RefRightCinemaLabelList*
  commentId: Overload:Funique.UI.IUIUtility.RefRightCinemaLabelList
  name: RefRightCinemaLabelList
  nameWithType: IUIUtility.RefRightCinemaLabelList
  fullName: Funique.UI.IUIUtility.RefRightCinemaLabelList
- uid: Funique.UI.IUIUtility.RefRightCinemaLabel*
  commentId: Overload:Funique.UI.IUIUtility.RefRightCinemaLabel
  name: RefRightCinemaLabel
  nameWithType: IUIUtility.RefRightCinemaLabel
  fullName: Funique.UI.IUIUtility.RefRightCinemaLabel
- uid: Funique.UI.IUIUtility.TooltipController*
  commentId: Overload:Funique.UI.IUIUtility.TooltipController
  name: TooltipController
  nameWithType: IUIUtility.TooltipController
  fullName: Funique.UI.IUIUtility.TooltipController
- uid: Funique.UI.TooltipPanel
  commentId: T:Funique.UI.TooltipPanel
  parent: Funique.UI
  name: TooltipPanel
  nameWithType: TooltipPanel
  fullName: Funique.UI.TooltipPanel
- uid: Funique.UI.IUIUtility.Toolbar*
  commentId: Overload:Funique.UI.IUIUtility.Toolbar
  name: Toolbar
  nameWithType: IUIUtility.Toolbar
  fullName: Funique.UI.IUIUtility.Toolbar
- uid: UnityEngine.GameObject[]
  isExternal: true
  name: GameObject[]
  nameWithType: GameObject[]
  fullName: UnityEngine.GameObject[]
  nameWithType.vb: GameObject()
  fullName.vb: UnityEngine.GameObject()
  name.vb: GameObject()
  spec.csharp:
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Funique.UI.IUIUtility.Panels*
  commentId: Overload:Funique.UI.IUIUtility.Panels
  name: Panels
  nameWithType: IUIUtility.Panels
  fullName: Funique.UI.IUIUtility.Panels
- uid: Funique.UI.IUIUtility.Contents*
  commentId: Overload:Funique.UI.IUIUtility.Contents
  name: Contents
  nameWithType: IUIUtility.Contents
  fullName: Funique.UI.IUIUtility.Contents
- uid: UnityEngine.Transform[]
  isExternal: true
  name: Transform[]
  nameWithType: Transform[]
  fullName: UnityEngine.Transform[]
  nameWithType.vb: Transform()
  fullName.vb: UnityEngine.Transform()
  name.vb: Transform()
  spec.csharp:
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Funique.UI.IUIUtility.IsLobby*
  commentId: Overload:Funique.UI.IUIUtility.IsLobby
  name: IsLobby
  nameWithType: IUIUtility.IsLobby
  fullName: Funique.UI.IUIUtility.IsLobby
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Funique.UI.IUIUtility.IsVideo*
  commentId: Overload:Funique.UI.IUIUtility.IsVideo
  name: IsVideo
  nameWithType: IUIUtility.IsVideo
  fullName: Funique.UI.IUIUtility.IsVideo
- uid: Funique.UI.IUIUtility.IsPlaylist*
  commentId: Overload:Funique.UI.IUIUtility.IsPlaylist
  name: IsPlaylist
  nameWithType: IUIUtility.IsPlaylist
  fullName: Funique.UI.IUIUtility.IsPlaylist
- uid: Funique.UI.IUIUtility.IsStreaming*
  commentId: Overload:Funique.UI.IUIUtility.IsStreaming
  name: IsStreaming
  nameWithType: IUIUtility.IsStreaming
  fullName: Funique.UI.IUIUtility.IsStreaming
- uid: Funique.UI.IUIUtility.ChainDict*
  commentId: Overload:Funique.UI.IUIUtility.ChainDict
  name: ChainDict
  nameWithType: IUIUtility.ChainDict
  fullName: Funique.UI.IUIUtility.ChainDict
- uid: System.Collections.Generic.Dictionary{Funique.UI.RightClickMenuOption,System.Action{UnityEngine.GameObject}}
  commentId: T:System.Collections.Generic.Dictionary{Funique.UI.RightClickMenuOption,System.Action{UnityEngine.GameObject}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<RightClickMenuOption, Action<GameObject>>
  nameWithType: Dictionary<RightClickMenuOption, Action<GameObject>>
  fullName: System.Collections.Generic.Dictionary<Funique.UI.RightClickMenuOption, System.Action<UnityEngine.GameObject>>
  nameWithType.vb: Dictionary(Of RightClickMenuOption, Action(Of GameObject))
  fullName.vb: System.Collections.Generic.Dictionary(Of Funique.UI.RightClickMenuOption, System.Action(Of UnityEngine.GameObject))
  name.vb: Dictionary(Of RightClickMenuOption, Action(Of GameObject))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Funique.UI.RightClickMenuOption
    name: RightClickMenuOption
    nameWithType: RightClickMenuOption
    fullName: Funique.UI.RightClickMenuOption
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Funique.UI.RightClickMenuOption
    name: RightClickMenuOption
    nameWithType: RightClickMenuOption
    fullName: Funique.UI.RightClickMenuOption
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Funique.UI.IUIUtility.CloseAllPanel*
  commentId: Overload:Funique.UI.IUIUtility.CloseAllPanel
  name: CloseAllPanel
  nameWithType: IUIUtility.CloseAllPanel
  fullName: Funique.UI.IUIUtility.CloseAllPanel
- uid: Funique.UI.IUIUtility.SwitchPanel*
  commentId: Overload:Funique.UI.IUIUtility.SwitchPanel
  name: SwitchPanel
  nameWithType: IUIUtility.SwitchPanel
  fullName: Funique.UI.IUIUtility.SwitchPanel
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Funique.UI.IUIUtility.SetLobbyPanelState*
  commentId: Overload:Funique.UI.IUIUtility.SetLobbyPanelState
  name: SetLobbyPanelState
  nameWithType: IUIUtility.SetLobbyPanelState
  fullName: Funique.UI.IUIUtility.SetLobbyPanelState
- uid: Funique.UI.IUIUtility.CloseAllModalPanel*
  commentId: Overload:Funique.UI.IUIUtility.CloseAllModalPanel
  name: CloseAllModalPanel
  nameWithType: IUIUtility.CloseAllModalPanel
  fullName: Funique.UI.IUIUtility.CloseAllModalPanel
- uid: Funique.UI.IUIUtility.InfoPanelControl*
  commentId: Overload:Funique.UI.IUIUtility.InfoPanelControl
  name: InfoPanelControl
  nameWithType: IUIUtility.InfoPanelControl
  fullName: Funique.UI.IUIUtility.InfoPanelControl
- uid: Funique.UI.IUIUtility.SettingPanelControl*
  commentId: Overload:Funique.UI.IUIUtility.SettingPanelControl
  name: SettingPanelControl
  nameWithType: IUIUtility.SettingPanelControl
  fullName: Funique.UI.IUIUtility.SettingPanelControl
- uid: Funique.UI.IUIUtility.ActionPanelControl*
  commentId: Overload:Funique.UI.IUIUtility.ActionPanelControl
  name: ActionPanelControl
  nameWithType: IUIUtility.ActionPanelControl
  fullName: Funique.UI.IUIUtility.ActionPanelControl
- uid: Funique.UI.IUIUtility.VideoListPanelControl*
  commentId: Overload:Funique.UI.IUIUtility.VideoListPanelControl
  name: VideoListPanelControl
  nameWithType: IUIUtility.VideoListPanelControl
  fullName: Funique.UI.IUIUtility.VideoListPanelControl
- uid: Funique.UI.IUIUtility.ApplyToolbarEvent*
  commentId: Overload:Funique.UI.IUIUtility.ApplyToolbarEvent
  name: ApplyToolbarEvent
  nameWithType: IUIUtility.ApplyToolbarEvent
  fullName: Funique.UI.IUIUtility.ApplyToolbarEvent
- uid: Funique.UI.ToolbarButtonToggleStructure
  commentId: T:Funique.UI.ToolbarButtonToggleStructure
  parent: Funique.UI
  name: ToolbarButtonToggleStructure
  nameWithType: ToolbarButtonToggleStructure
  fullName: Funique.UI.ToolbarButtonToggleStructure
