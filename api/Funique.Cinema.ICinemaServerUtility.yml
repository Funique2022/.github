### YamlMime:ManagedReference
items:
- uid: Funique.Cinema.ICinemaServerUtility
  commentId: T:Funique.Cinema.ICinemaServerUtility
  id: ICinemaServerUtility
  parent: Funique.Cinema
  children:
  - Funique.Cinema.ICinemaServerUtility.CinemaCount
  - Funique.Cinema.ICinemaServerUtility.CinemaDataDict
  - Funique.Cinema.ICinemaServerUtility.CinemaViewDict
  - Funique.Cinema.ICinemaServerUtility.CleanCinemaInstance
  - Funique.Cinema.ICinemaServerUtility.CreateCinema(System.Int32)
  - Funique.Cinema.ICinemaServerUtility.CreateCinemaLabel(System.Int32)
  - Funique.Cinema.ICinemaServerUtility.GetDataCollectionByCinemaIndex(System.Int32)
  - Funique.Cinema.ICinemaServerUtility.RefCinema
  - Funique.Cinema.ICinemaServerUtility.RefCinemaLabel
  - Funique.Cinema.ICinemaServerUtility.ViewDict
  langs:
  - csharp
  - vb
  name: ICinemaServerUtility
  nameWithType: ICinemaServerUtility
  fullName: Funique.Cinema.ICinemaServerUtility
  type: Interface
  source:
    remote:
      path: Interface/ICinemaServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: ICinemaServerUtility
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaServerUtility.cs
    startLine: 10
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nCinema server utility, Unit testable <br />\n------------------------------------------------ <br />\n伺服器劇場功能. 可被單元測試\n"
  example: []
  syntax:
    content: 'public interface ICinemaServerUtility : IModuleBase<CinemaManagerServerData>'
    content.vb: >-
      Public Interface ICinemaServerUtility

          Inherits IModuleBase(Of CinemaManagerServerData)
  inheritedMembers:
  - Funique.IModuleBase{Funique.Cinema.CinemaManagerServerData}.config
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Funique.Cinema.ICinemaServerUtility.RefCinema
  commentId: P:Funique.Cinema.ICinemaServerUtility.RefCinema
  id: RefCinema
  parent: Funique.Cinema.ICinemaServerUtility
  langs:
  - csharp
  - vb
  name: RefCinema
  nameWithType: ICinemaServerUtility.RefCinema
  fullName: Funique.Cinema.ICinemaServerUtility.RefCinema
  type: Property
  source:
    remote:
      path: Interface/ICinemaServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: RefCinema
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaServerUtility.cs
    startLine: 19
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nCinema page prefab <br />\n------------------------------------------------ <br />\n劇場頁面物件\n"
  example: []
  syntax:
    content: GameObject RefCinema { get; }
    parameters: []
    return:
      type: UnityEngine.GameObject
    content.vb: ReadOnly Property RefCinema As GameObject
  overload: Funique.Cinema.ICinemaServerUtility.RefCinema*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Funique.Cinema.ICinemaServerUtility.RefCinemaLabel
  commentId: P:Funique.Cinema.ICinemaServerUtility.RefCinemaLabel
  id: RefCinemaLabel
  parent: Funique.Cinema.ICinemaServerUtility
  langs:
  - csharp
  - vb
  name: RefCinemaLabel
  nameWithType: ICinemaServerUtility.RefCinemaLabel
  fullName: Funique.Cinema.ICinemaServerUtility.RefCinemaLabel
  type: Property
  source:
    remote:
      path: Interface/ICinemaServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: RefCinemaLabel
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaServerUtility.cs
    startLine: 25
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nCinema top label prefab <br />\n------------------------------------------------ <br />\n劇場上方標籤物件\n"
  example: []
  syntax:
    content: GameObject RefCinemaLabel { get; }
    parameters: []
    return:
      type: UnityEngine.GameObject
    content.vb: ReadOnly Property RefCinemaLabel As GameObject
  overload: Funique.Cinema.ICinemaServerUtility.RefCinemaLabel*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Funique.Cinema.ICinemaServerUtility.CinemaCount
  commentId: P:Funique.Cinema.ICinemaServerUtility.CinemaCount
  id: CinemaCount
  parent: Funique.Cinema.ICinemaServerUtility
  langs:
  - csharp
  - vb
  name: CinemaCount
  nameWithType: ICinemaServerUtility.CinemaCount
  fullName: Funique.Cinema.ICinemaServerUtility.CinemaCount
  type: Property
  source:
    remote:
      path: Interface/ICinemaServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: CinemaCount
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaServerUtility.cs
    startLine: 31
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nGet the total amounts of cinema <br />\n------------------------------------------------ <br />\n劇院數\n"
  example: []
  syntax:
    content: int CinemaCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property CinemaCount As Integer
  overload: Funique.Cinema.ICinemaServerUtility.CinemaCount*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Funique.Cinema.ICinemaServerUtility.ViewDict
  commentId: P:Funique.Cinema.ICinemaServerUtility.ViewDict
  id: ViewDict
  parent: Funique.Cinema.ICinemaServerUtility
  langs:
  - csharp
  - vb
  name: ViewDict
  nameWithType: ICinemaServerUtility.ViewDict
  fullName: Funique.Cinema.ICinemaServerUtility.ViewDict
  type: Property
  source:
    remote:
      path: Interface/ICinemaServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: ViewDict
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaServerUtility.cs
    startLine: 37
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nDirectionary: Cinema Index, View <br />\n------------------------------------------------ <br />\n目錄: 第幾廳, 面板實體\n"
  example: []
  syntax:
    content: Dictionary<int, CinemaView> ViewDict { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.Int32,Funique.Cinema.CinemaView}
    content.vb: ReadOnly Property ViewDict As Dictionary(Of Integer, CinemaView)
  overload: Funique.Cinema.ICinemaServerUtility.ViewDict*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Funique.Cinema.ICinemaServerUtility.CinemaDataDict
  commentId: P:Funique.Cinema.ICinemaServerUtility.CinemaDataDict
  id: CinemaDataDict
  parent: Funique.Cinema.ICinemaServerUtility
  langs:
  - csharp
  - vb
  name: CinemaDataDict
  nameWithType: ICinemaServerUtility.CinemaDataDict
  fullName: Funique.Cinema.ICinemaServerUtility.CinemaDataDict
  type: Property
  source:
    remote:
      path: Interface/ICinemaServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: CinemaDataDict
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaServerUtility.cs
    startLine: 43
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nDirectionary: Cinema Index, View <br />\n------------------------------------------------ <br />\n目錄: 第幾廳, 標籤資料\n"
  example: []
  syntax:
    content: Dictionary<int, CinemaLabelData> CinemaDataDict { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.Int32,Funique.Cinema.CinemaLabelData}
    content.vb: ReadOnly Property CinemaDataDict As Dictionary(Of Integer, CinemaLabelData)
  overload: Funique.Cinema.ICinemaServerUtility.CinemaDataDict*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Funique.Cinema.ICinemaServerUtility.CinemaViewDict
  commentId: P:Funique.Cinema.ICinemaServerUtility.CinemaViewDict
  id: CinemaViewDict
  parent: Funique.Cinema.ICinemaServerUtility
  langs:
  - csharp
  - vb
  name: CinemaViewDict
  nameWithType: ICinemaServerUtility.CinemaViewDict
  fullName: Funique.Cinema.ICinemaServerUtility.CinemaViewDict
  type: Property
  source:
    remote:
      path: Interface/ICinemaServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: CinemaViewDict
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaServerUtility.cs
    startLine: 49
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nDirectionary: Cinema Index, View <br />\n------------------------------------------------ <br />\n目錄: 第幾廳, 標籤實體\n"
  example: []
  syntax:
    content: Dictionary<int, CinemaLabelViewBase> CinemaViewDict { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.Int32,Funique.Cinema.CinemaLabelViewBase}
    content.vb: ReadOnly Property CinemaViewDict As Dictionary(Of Integer, CinemaLabelViewBase)
  overload: Funique.Cinema.ICinemaServerUtility.CinemaViewDict*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Funique.Cinema.ICinemaServerUtility.CleanCinemaInstance
  commentId: M:Funique.Cinema.ICinemaServerUtility.CleanCinemaInstance
  id: CleanCinemaInstance
  parent: Funique.Cinema.ICinemaServerUtility
  langs:
  - csharp
  - vb
  name: CleanCinemaInstance()
  nameWithType: ICinemaServerUtility.CleanCinemaInstance()
  fullName: Funique.Cinema.ICinemaServerUtility.CleanCinemaInstance()
  type: Method
  source:
    remote:
      path: Interface/ICinemaServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: CleanCinemaInstance
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaServerUtility.cs
    startLine: 59
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nClean cinema instance, This won&apos;t clean the dictionary <br />\n------------------------------------------------ <br />\n清除劇院與劇院標籤實體, 這個函式不會清除列表資料\n"
  example: []
  syntax:
    content: void CleanCinemaInstance()
    content.vb: Sub CleanCinemaInstance
  overload: Funique.Cinema.ICinemaServerUtility.CleanCinemaInstance*
- uid: Funique.Cinema.ICinemaServerUtility.CreateCinema(System.Int32)
  commentId: M:Funique.Cinema.ICinemaServerUtility.CreateCinema(System.Int32)
  id: CreateCinema(System.Int32)
  parent: Funique.Cinema.ICinemaServerUtility
  langs:
  - csharp
  - vb
  name: CreateCinema(Int32)
  nameWithType: ICinemaServerUtility.CreateCinema(Int32)
  fullName: Funique.Cinema.ICinemaServerUtility.CreateCinema(System.Int32)
  type: Method
  source:
    remote:
      path: Interface/ICinemaServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: CreateCinema
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaServerUtility.cs
    startLine: 67
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nCreate cinema page instance by index <br />\n------------------------------------------------ <br />\n生成劇院頁面 UI 實體\n"
  example: []
  syntax:
    content: Transform CreateCinema(int index)
    parameters:
    - id: index
      type: System.Int32
      description: Index of cinema
    return:
      type: UnityEngine.Transform
      description: Created instance
    content.vb: Function CreateCinema(index As Integer) As Transform
  overload: Funique.Cinema.ICinemaServerUtility.CreateCinema*
- uid: Funique.Cinema.ICinemaServerUtility.CreateCinemaLabel(System.Int32)
  commentId: M:Funique.Cinema.ICinemaServerUtility.CreateCinemaLabel(System.Int32)
  id: CreateCinemaLabel(System.Int32)
  parent: Funique.Cinema.ICinemaServerUtility
  langs:
  - csharp
  - vb
  name: CreateCinemaLabel(Int32)
  nameWithType: ICinemaServerUtility.CreateCinemaLabel(Int32)
  fullName: Funique.Cinema.ICinemaServerUtility.CreateCinemaLabel(System.Int32)
  type: Method
  source:
    remote:
      path: Interface/ICinemaServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: CreateCinemaLabel
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaServerUtility.cs
    startLine: 75
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nCreate cinema label instance by index <br />\n------------------------------------------------ <br />\n生成劇院標籤 UI 實體\n"
  example: []
  syntax:
    content: Transform CreateCinemaLabel(int index)
    parameters:
    - id: index
      type: System.Int32
      description: Index of cinema
    return:
      type: UnityEngine.Transform
      description: Created instance
    content.vb: Function CreateCinemaLabel(index As Integer) As Transform
  overload: Funique.Cinema.ICinemaServerUtility.CreateCinemaLabel*
- uid: Funique.Cinema.ICinemaServerUtility.GetDataCollectionByCinemaIndex(System.Int32)
  commentId: M:Funique.Cinema.ICinemaServerUtility.GetDataCollectionByCinemaIndex(System.Int32)
  id: GetDataCollectionByCinemaIndex(System.Int32)
  parent: Funique.Cinema.ICinemaServerUtility
  langs:
  - csharp
  - vb
  name: GetDataCollectionByCinemaIndex(Int32)
  nameWithType: ICinemaServerUtility.GetDataCollectionByCinemaIndex(Int32)
  fullName: Funique.Cinema.ICinemaServerUtility.GetDataCollectionByCinemaIndex(System.Int32)
  type: Method
  source:
    remote:
      path: Interface/ICinemaServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: GetDataCollectionByCinemaIndex
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/Interface/ICinemaServerUtility.cs
    startLine: 83
  assemblies:
  - Funique.Cinema
  namespace: Funique.Cinema
  summary: "\nHelper method, Get the cinema data collection by cinema index <br />\n------------------------------------------------ <br />\n幫助函式, 根據目錄 得到劇院集合資料\n"
  example: []
  syntax:
    content: CinemaDataCollection GetDataCollectionByCinemaIndex(int index)
    parameters:
    - id: index
      type: System.Int32
      description: ''
    return:
      type: Funique.Cinema.CinemaDataCollection
      description: ''
    content.vb: Function GetDataCollectionByCinemaIndex(index As Integer) As CinemaDataCollection
  overload: Funique.Cinema.ICinemaServerUtility.GetDataCollectionByCinemaIndex*
references:
- uid: Funique.Cinema
  commentId: N:Funique.Cinema
  name: Funique.Cinema
  nameWithType: Funique.Cinema
  fullName: Funique.Cinema
- uid: Funique.IModuleBase{Funique.Cinema.CinemaManagerServerData}.config
  commentId: P:Funique.IModuleBase{Funique.Cinema.CinemaManagerServerData}.config
  parent: Funique.IModuleBase{Funique.Cinema.CinemaManagerServerData}
  definition: Funique.IModuleBase`1.config
  name: config
  nameWithType: IModuleBase<CinemaManagerServerData>.config
  fullName: Funique.IModuleBase<Funique.Cinema.CinemaManagerServerData>.config
  nameWithType.vb: IModuleBase(Of CinemaManagerServerData).config
  fullName.vb: Funique.IModuleBase(Of Funique.Cinema.CinemaManagerServerData).config
- uid: Funique.IModuleBase`1.config
  commentId: P:Funique.IModuleBase`1.config
  name: config
  nameWithType: IModuleBase<T>.config
  fullName: Funique.IModuleBase<T>.config
  nameWithType.vb: IModuleBase(Of T).config
  fullName.vb: Funique.IModuleBase(Of T).config
- uid: Funique.IModuleBase{Funique.Cinema.CinemaManagerServerData}
  commentId: T:Funique.IModuleBase{Funique.Cinema.CinemaManagerServerData}
  parent: Funique
  definition: Funique.IModuleBase`1
  name: IModuleBase<CinemaManagerServerData>
  nameWithType: IModuleBase<CinemaManagerServerData>
  fullName: Funique.IModuleBase<Funique.Cinema.CinemaManagerServerData>
  nameWithType.vb: IModuleBase(Of CinemaManagerServerData)
  fullName.vb: Funique.IModuleBase(Of Funique.Cinema.CinemaManagerServerData)
  name.vb: IModuleBase(Of CinemaManagerServerData)
  spec.csharp:
  - uid: Funique.IModuleBase`1
    name: IModuleBase
    nameWithType: IModuleBase
    fullName: Funique.IModuleBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Funique.Cinema.CinemaManagerServerData
    name: CinemaManagerServerData
    nameWithType: CinemaManagerServerData
    fullName: Funique.Cinema.CinemaManagerServerData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Funique.IModuleBase`1
    name: IModuleBase
    nameWithType: IModuleBase
    fullName: Funique.IModuleBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Funique.Cinema.CinemaManagerServerData
    name: CinemaManagerServerData
    nameWithType: CinemaManagerServerData
    fullName: Funique.Cinema.CinemaManagerServerData
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.IModuleBase`1
  commentId: T:Funique.IModuleBase`1
  name: IModuleBase<T>
  nameWithType: IModuleBase<T>
  fullName: Funique.IModuleBase<T>
  nameWithType.vb: IModuleBase(Of T)
  fullName.vb: Funique.IModuleBase(Of T)
  name.vb: IModuleBase(Of T)
  spec.csharp:
  - uid: Funique.IModuleBase`1
    name: IModuleBase
    nameWithType: IModuleBase
    fullName: Funique.IModuleBase
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Funique.IModuleBase`1
    name: IModuleBase
    nameWithType: IModuleBase
    fullName: Funique.IModuleBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique
  commentId: N:Funique
  name: Funique
  nameWithType: Funique
  fullName: Funique
- uid: Funique.Cinema.ICinemaServerUtility.RefCinema*
  commentId: Overload:Funique.Cinema.ICinemaServerUtility.RefCinema
  name: RefCinema
  nameWithType: ICinemaServerUtility.RefCinema
  fullName: Funique.Cinema.ICinemaServerUtility.RefCinema
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Funique.Cinema.ICinemaServerUtility.RefCinemaLabel*
  commentId: Overload:Funique.Cinema.ICinemaServerUtility.RefCinemaLabel
  name: RefCinemaLabel
  nameWithType: ICinemaServerUtility.RefCinemaLabel
  fullName: Funique.Cinema.ICinemaServerUtility.RefCinemaLabel
- uid: Funique.Cinema.ICinemaServerUtility.CinemaCount*
  commentId: Overload:Funique.Cinema.ICinemaServerUtility.CinemaCount
  name: CinemaCount
  nameWithType: ICinemaServerUtility.CinemaCount
  fullName: Funique.Cinema.ICinemaServerUtility.CinemaCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Funique.Cinema.ICinemaServerUtility.ViewDict*
  commentId: Overload:Funique.Cinema.ICinemaServerUtility.ViewDict
  name: ViewDict
  nameWithType: ICinemaServerUtility.ViewDict
  fullName: Funique.Cinema.ICinemaServerUtility.ViewDict
- uid: System.Collections.Generic.Dictionary{System.Int32,Funique.Cinema.CinemaView}
  commentId: T:System.Collections.Generic.Dictionary{System.Int32,Funique.Cinema.CinemaView}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<Int32, CinemaView>
  nameWithType: Dictionary<Int32, CinemaView>
  fullName: System.Collections.Generic.Dictionary<System.Int32, Funique.Cinema.CinemaView>
  nameWithType.vb: Dictionary(Of Int32, CinemaView)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Int32, Funique.Cinema.CinemaView)
  name.vb: Dictionary(Of Int32, CinemaView)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Funique.Cinema.CinemaView
    name: CinemaView
    nameWithType: CinemaView
    fullName: Funique.Cinema.CinemaView
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Funique.Cinema.CinemaView
    name: CinemaView
    nameWithType: CinemaView
    fullName: Funique.Cinema.CinemaView
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Funique.Cinema.ICinemaServerUtility.CinemaDataDict*
  commentId: Overload:Funique.Cinema.ICinemaServerUtility.CinemaDataDict
  name: CinemaDataDict
  nameWithType: ICinemaServerUtility.CinemaDataDict
  fullName: Funique.Cinema.ICinemaServerUtility.CinemaDataDict
- uid: System.Collections.Generic.Dictionary{System.Int32,Funique.Cinema.CinemaLabelData}
  commentId: T:System.Collections.Generic.Dictionary{System.Int32,Funique.Cinema.CinemaLabelData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<Int32, CinemaLabelData>
  nameWithType: Dictionary<Int32, CinemaLabelData>
  fullName: System.Collections.Generic.Dictionary<System.Int32, Funique.Cinema.CinemaLabelData>
  nameWithType.vb: Dictionary(Of Int32, CinemaLabelData)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Int32, Funique.Cinema.CinemaLabelData)
  name.vb: Dictionary(Of Int32, CinemaLabelData)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Funique.Cinema.CinemaLabelData
    name: CinemaLabelData
    nameWithType: CinemaLabelData
    fullName: Funique.Cinema.CinemaLabelData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Funique.Cinema.CinemaLabelData
    name: CinemaLabelData
    nameWithType: CinemaLabelData
    fullName: Funique.Cinema.CinemaLabelData
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Cinema.ICinemaServerUtility.CinemaViewDict*
  commentId: Overload:Funique.Cinema.ICinemaServerUtility.CinemaViewDict
  name: CinemaViewDict
  nameWithType: ICinemaServerUtility.CinemaViewDict
  fullName: Funique.Cinema.ICinemaServerUtility.CinemaViewDict
- uid: System.Collections.Generic.Dictionary{System.Int32,Funique.Cinema.CinemaLabelViewBase}
  commentId: T:System.Collections.Generic.Dictionary{System.Int32,Funique.Cinema.CinemaLabelViewBase}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<Int32, CinemaLabelViewBase>
  nameWithType: Dictionary<Int32, CinemaLabelViewBase>
  fullName: System.Collections.Generic.Dictionary<System.Int32, Funique.Cinema.CinemaLabelViewBase>
  nameWithType.vb: Dictionary(Of Int32, CinemaLabelViewBase)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Int32, Funique.Cinema.CinemaLabelViewBase)
  name.vb: Dictionary(Of Int32, CinemaLabelViewBase)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Funique.Cinema.CinemaLabelViewBase
    name: CinemaLabelViewBase
    nameWithType: CinemaLabelViewBase
    fullName: Funique.Cinema.CinemaLabelViewBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Funique.Cinema.CinemaLabelViewBase
    name: CinemaLabelViewBase
    nameWithType: CinemaLabelViewBase
    fullName: Funique.Cinema.CinemaLabelViewBase
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Cinema.ICinemaServerUtility.CleanCinemaInstance*
  commentId: Overload:Funique.Cinema.ICinemaServerUtility.CleanCinemaInstance
  name: CleanCinemaInstance
  nameWithType: ICinemaServerUtility.CleanCinemaInstance
  fullName: Funique.Cinema.ICinemaServerUtility.CleanCinemaInstance
- uid: Funique.Cinema.ICinemaServerUtility.CreateCinema*
  commentId: Overload:Funique.Cinema.ICinemaServerUtility.CreateCinema
  name: CreateCinema
  nameWithType: ICinemaServerUtility.CreateCinema
  fullName: Funique.Cinema.ICinemaServerUtility.CreateCinema
- uid: UnityEngine.Transform
  commentId: T:UnityEngine.Transform
  parent: UnityEngine
  isExternal: true
  name: Transform
  nameWithType: Transform
  fullName: UnityEngine.Transform
- uid: Funique.Cinema.ICinemaServerUtility.CreateCinemaLabel*
  commentId: Overload:Funique.Cinema.ICinemaServerUtility.CreateCinemaLabel
  name: CreateCinemaLabel
  nameWithType: ICinemaServerUtility.CreateCinemaLabel
  fullName: Funique.Cinema.ICinemaServerUtility.CreateCinemaLabel
- uid: Funique.Cinema.ICinemaServerUtility.GetDataCollectionByCinemaIndex*
  commentId: Overload:Funique.Cinema.ICinemaServerUtility.GetDataCollectionByCinemaIndex
  name: GetDataCollectionByCinemaIndex
  nameWithType: ICinemaServerUtility.GetDataCollectionByCinemaIndex
  fullName: Funique.Cinema.ICinemaServerUtility.GetDataCollectionByCinemaIndex
- uid: Funique.Cinema.CinemaDataCollection
  commentId: T:Funique.Cinema.CinemaDataCollection
  parent: Funique.Cinema
  name: CinemaDataCollection
  nameWithType: CinemaDataCollection
  fullName: Funique.Cinema.CinemaDataCollection
