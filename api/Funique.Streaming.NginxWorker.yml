### YamlMime:ManagedReference
items:
- uid: Funique.Streaming.NginxWorker
  commentId: T:Funique.Streaming.NginxWorker
  id: NginxWorker
  parent: Funique.Streaming
  children:
  - Funique.Streaming.NginxWorker.#ctor
  - Funique.Streaming.NginxWorker.Close
  - Funique.Streaming.NginxWorker.Completed(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)
  - Funique.Streaming.NginxWorker.NginxPath
  - Funique.Streaming.NginxWorker.NginxVideoPath
  - Funique.Streaming.NginxWorker.Open(System.ComponentModel.BackgroundWorker)
  - Funique.Streaming.NginxWorker.WorkerName
  langs:
  - csharp
  - vb
  name: NginxWorker
  nameWithType: NginxWorker
  fullName: Funique.Streaming.NginxWorker
  type: Class
  source:
    remote:
      path: NginxWorker.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: NginxWorker
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/NginxWorker.cs
    startLine: 17
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  summary: "\nA background thread for nginx application <br />\nM3U8 Will trying the generate the file in nginx folder <br />\nIn order to let user access the streaming by URL <br />\nThe worker handle the process of nginx application run in the background <br />\n------------------------------------------------ <br />\nNginx 反向代理的執行序管理者 <br />\nM3U8 會嘗試生成檔案至 nginx 的工作環境 <br />\n為了能讓用戶透過 URL 存取串流 <br />\n工作者會存取背景運作的 Nginx 執行序\n"
  example: []
  syntax:
    content: 'public class NginxWorker : ThirdPartyApplication, IDisposable'
    content.vb: >-
      Public Class NginxWorker

          Inherits ThirdPartyApplication

          Implements IDisposable
  inheritance:
  - System.Object
  - Funique.ThirdPartyApplication
  implements:
  - System.IDisposable
  inheritedMembers:
  - Funique.ThirdPartyApplication.MainProcess
  - Funique.ThirdPartyApplication.BackgroundWorker
  - Funique.ThirdPartyApplication.progress
  - Funique.ThirdPartyApplication.Run
  - Funique.ThirdPartyApplication.ProgressChanged(System.Object,System.ComponentModel.ProgressChangedEventArgs)
  - Funique.ThirdPartyApplication.DoWork(System.Object,System.ComponentModel.DoWorkEventArgs)
  - Funique.ThirdPartyApplication.Dispose
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Funique.Streaming.NginxWorker.WorkerName
  commentId: P:Funique.Streaming.NginxWorker.WorkerName
  id: WorkerName
  parent: Funique.Streaming.NginxWorker
  langs:
  - csharp
  - vb
  name: WorkerName
  nameWithType: NginxWorker.WorkerName
  fullName: Funique.Streaming.NginxWorker.WorkerName
  type: Property
  source:
    remote:
      path: NginxWorker.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: WorkerName
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/NginxWorker.cs
    startLine: 19
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  syntax:
    content: protected override string WorkerName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected Overrides ReadOnly Property WorkerName As String
  overridden: Funique.ThirdPartyApplication.WorkerName
  overload: Funique.Streaming.NginxWorker.WorkerName*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: Funique.Streaming.NginxWorker.NginxVideoPath
  commentId: P:Funique.Streaming.NginxWorker.NginxVideoPath
  id: NginxVideoPath
  parent: Funique.Streaming.NginxWorker
  langs:
  - csharp
  - vb
  name: NginxVideoPath
  nameWithType: NginxWorker.NginxVideoPath
  fullName: Funique.Streaming.NginxWorker.NginxVideoPath
  type: Property
  source:
    remote:
      path: NginxWorker.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: NginxVideoPath
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/NginxWorker.cs
    startLine: 25
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  summary: "\nNginx video generate root path <br />\n------------------------------------------------ <br />\nNginx 影像生成根目錄\n"
  example: []
  syntax:
    content: public static string NginxVideoPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property NginxVideoPath As String
  overload: Funique.Streaming.NginxWorker.NginxVideoPath*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Funique.Streaming.NginxWorker.NginxPath
  commentId: P:Funique.Streaming.NginxWorker.NginxPath
  id: NginxPath
  parent: Funique.Streaming.NginxWorker
  langs:
  - csharp
  - vb
  name: NginxPath
  nameWithType: NginxWorker.NginxPath
  fullName: Funique.Streaming.NginxWorker.NginxPath
  type: Property
  source:
    remote:
      path: NginxWorker.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: NginxPath
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/NginxWorker.cs
    startLine: 31
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  summary: "\nNginx exe file path <br />\n------------------------------------------------ <br />\nNginx 執行檔案路徑\n"
  example: []
  syntax:
    content: public static string NginxPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property NginxPath As String
  overload: Funique.Streaming.NginxWorker.NginxPath*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Funique.Streaming.NginxWorker.#ctor
  commentId: M:Funique.Streaming.NginxWorker.#ctor
  id: '#ctor'
  parent: Funique.Streaming.NginxWorker
  langs:
  - csharp
  - vb
  name: NginxWorker()
  nameWithType: NginxWorker.NginxWorker()
  fullName: Funique.Streaming.NginxWorker.NginxWorker()
  type: Constructor
  source:
    remote:
      path: NginxWorker.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: .ctor
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/NginxWorker.cs
    startLine: 45
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  syntax:
    content: public NginxWorker()
    content.vb: Public Sub New
  overload: Funique.Streaming.NginxWorker.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Streaming.NginxWorker.Completed(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)
  commentId: M:Funique.Streaming.NginxWorker.Completed(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)
  id: Completed(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)
  parent: Funique.Streaming.NginxWorker
  langs:
  - csharp
  - vb
  name: Completed(Object, RunWorkerCompletedEventArgs)
  nameWithType: NginxWorker.Completed(Object, RunWorkerCompletedEventArgs)
  fullName: Funique.Streaming.NginxWorker.Completed(System.Object, System.ComponentModel.RunWorkerCompletedEventArgs)
  type: Method
  source:
    remote:
      path: NginxWorker.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: Completed
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/NginxWorker.cs
    startLine: 56
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  syntax:
    content: protected override void Completed(object sender, RunWorkerCompletedEventArgs e)
    parameters:
    - id: sender
      type: System.Object
    - id: e
      type: System.ComponentModel.RunWorkerCompletedEventArgs
    content.vb: Protected Overrides Sub Completed(sender As Object, e As RunWorkerCompletedEventArgs)
  overridden: Funique.ThirdPartyApplication.Completed(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)
  overload: Funique.Streaming.NginxWorker.Completed*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Funique.Streaming.NginxWorker.Open(System.ComponentModel.BackgroundWorker)
  commentId: M:Funique.Streaming.NginxWorker.Open(System.ComponentModel.BackgroundWorker)
  id: Open(System.ComponentModel.BackgroundWorker)
  parent: Funique.Streaming.NginxWorker
  langs:
  - csharp
  - vb
  name: Open(BackgroundWorker)
  nameWithType: NginxWorker.Open(BackgroundWorker)
  fullName: Funique.Streaming.NginxWorker.Open(System.ComponentModel.BackgroundWorker)
  type: Method
  source:
    remote:
      path: NginxWorker.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: Open
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/NginxWorker.cs
    startLine: 71
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  syntax:
    content: protected override void Open(BackgroundWorker bw)
    parameters:
    - id: bw
      type: System.ComponentModel.BackgroundWorker
    content.vb: Protected Overrides Sub Open(bw As BackgroundWorker)
  overridden: Funique.ThirdPartyApplication.Open(System.ComponentModel.BackgroundWorker)
  overload: Funique.Streaming.NginxWorker.Open*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Funique.Streaming.NginxWorker.Close
  commentId: M:Funique.Streaming.NginxWorker.Close
  id: Close
  parent: Funique.Streaming.NginxWorker
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: NginxWorker.Close()
  fullName: Funique.Streaming.NginxWorker.Close()
  type: Method
  source:
    remote:
      path: NginxWorker.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: Close
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/NginxWorker.cs
    startLine: 76
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  syntax:
    content: public override void Close()
    content.vb: Public Overrides Sub Close
  overridden: Funique.ThirdPartyApplication.Close
  overload: Funique.Streaming.NginxWorker.Close*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Funique.Streaming
  commentId: N:Funique.Streaming
  name: Funique.Streaming
  nameWithType: Funique.Streaming
  fullName: Funique.Streaming
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Funique.ThirdPartyApplication
  commentId: T:Funique.ThirdPartyApplication
  parent: Funique
  name: ThirdPartyApplication
  nameWithType: ThirdPartyApplication
  fullName: Funique.ThirdPartyApplication
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Funique.ThirdPartyApplication.MainProcess
  commentId: F:Funique.ThirdPartyApplication.MainProcess
  parent: Funique.ThirdPartyApplication
  name: MainProcess
  nameWithType: ThirdPartyApplication.MainProcess
  fullName: Funique.ThirdPartyApplication.MainProcess
- uid: Funique.ThirdPartyApplication.BackgroundWorker
  commentId: F:Funique.ThirdPartyApplication.BackgroundWorker
  parent: Funique.ThirdPartyApplication
  name: BackgroundWorker
  nameWithType: ThirdPartyApplication.BackgroundWorker
  fullName: Funique.ThirdPartyApplication.BackgroundWorker
- uid: Funique.ThirdPartyApplication.progress
  commentId: F:Funique.ThirdPartyApplication.progress
  parent: Funique.ThirdPartyApplication
  name: progress
  nameWithType: ThirdPartyApplication.progress
  fullName: Funique.ThirdPartyApplication.progress
- uid: Funique.ThirdPartyApplication.Run
  commentId: M:Funique.ThirdPartyApplication.Run
  parent: Funique.ThirdPartyApplication
  name: Run()
  nameWithType: ThirdPartyApplication.Run()
  fullName: Funique.ThirdPartyApplication.Run()
  spec.csharp:
  - uid: Funique.ThirdPartyApplication.Run
    name: Run
    nameWithType: ThirdPartyApplication.Run
    fullName: Funique.ThirdPartyApplication.Run
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.ThirdPartyApplication.Run
    name: Run
    nameWithType: ThirdPartyApplication.Run
    fullName: Funique.ThirdPartyApplication.Run
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.ThirdPartyApplication.ProgressChanged(System.Object,System.ComponentModel.ProgressChangedEventArgs)
  commentId: M:Funique.ThirdPartyApplication.ProgressChanged(System.Object,System.ComponentModel.ProgressChangedEventArgs)
  parent: Funique.ThirdPartyApplication
  isExternal: true
  name: ProgressChanged(Object, ProgressChangedEventArgs)
  nameWithType: ThirdPartyApplication.ProgressChanged(Object, ProgressChangedEventArgs)
  fullName: Funique.ThirdPartyApplication.ProgressChanged(System.Object, System.ComponentModel.ProgressChangedEventArgs)
  spec.csharp:
  - uid: Funique.ThirdPartyApplication.ProgressChanged(System.Object,System.ComponentModel.ProgressChangedEventArgs)
    name: ProgressChanged
    nameWithType: ThirdPartyApplication.ProgressChanged
    fullName: Funique.ThirdPartyApplication.ProgressChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ComponentModel.ProgressChangedEventArgs
    name: ProgressChangedEventArgs
    nameWithType: ProgressChangedEventArgs
    fullName: System.ComponentModel.ProgressChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.ThirdPartyApplication.ProgressChanged(System.Object,System.ComponentModel.ProgressChangedEventArgs)
    name: ProgressChanged
    nameWithType: ThirdPartyApplication.ProgressChanged
    fullName: Funique.ThirdPartyApplication.ProgressChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ComponentModel.ProgressChangedEventArgs
    name: ProgressChangedEventArgs
    nameWithType: ProgressChangedEventArgs
    fullName: System.ComponentModel.ProgressChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.ThirdPartyApplication.DoWork(System.Object,System.ComponentModel.DoWorkEventArgs)
  commentId: M:Funique.ThirdPartyApplication.DoWork(System.Object,System.ComponentModel.DoWorkEventArgs)
  parent: Funique.ThirdPartyApplication
  isExternal: true
  name: DoWork(Object, DoWorkEventArgs)
  nameWithType: ThirdPartyApplication.DoWork(Object, DoWorkEventArgs)
  fullName: Funique.ThirdPartyApplication.DoWork(System.Object, System.ComponentModel.DoWorkEventArgs)
  spec.csharp:
  - uid: Funique.ThirdPartyApplication.DoWork(System.Object,System.ComponentModel.DoWorkEventArgs)
    name: DoWork
    nameWithType: ThirdPartyApplication.DoWork
    fullName: Funique.ThirdPartyApplication.DoWork
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ComponentModel.DoWorkEventArgs
    name: DoWorkEventArgs
    nameWithType: DoWorkEventArgs
    fullName: System.ComponentModel.DoWorkEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.ThirdPartyApplication.DoWork(System.Object,System.ComponentModel.DoWorkEventArgs)
    name: DoWork
    nameWithType: ThirdPartyApplication.DoWork
    fullName: Funique.ThirdPartyApplication.DoWork
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ComponentModel.DoWorkEventArgs
    name: DoWorkEventArgs
    nameWithType: DoWorkEventArgs
    fullName: System.ComponentModel.DoWorkEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.ThirdPartyApplication.Dispose
  commentId: M:Funique.ThirdPartyApplication.Dispose
  parent: Funique.ThirdPartyApplication
  name: Dispose()
  nameWithType: ThirdPartyApplication.Dispose()
  fullName: Funique.ThirdPartyApplication.Dispose()
  spec.csharp:
  - uid: Funique.ThirdPartyApplication.Dispose
    name: Dispose
    nameWithType: ThirdPartyApplication.Dispose
    fullName: Funique.ThirdPartyApplication.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.ThirdPartyApplication.Dispose
    name: Dispose
    nameWithType: ThirdPartyApplication.Dispose
    fullName: Funique.ThirdPartyApplication.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Funique
  commentId: N:Funique
  name: Funique
  nameWithType: Funique
  fullName: Funique
- uid: Funique.ThirdPartyApplication.WorkerName
  commentId: P:Funique.ThirdPartyApplication.WorkerName
  parent: Funique.ThirdPartyApplication
  name: WorkerName
  nameWithType: ThirdPartyApplication.WorkerName
  fullName: Funique.ThirdPartyApplication.WorkerName
- uid: Funique.Streaming.NginxWorker.WorkerName*
  commentId: Overload:Funique.Streaming.NginxWorker.WorkerName
  name: WorkerName
  nameWithType: NginxWorker.WorkerName
  fullName: Funique.Streaming.NginxWorker.WorkerName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Funique.Streaming.NginxWorker.NginxVideoPath*
  commentId: Overload:Funique.Streaming.NginxWorker.NginxVideoPath
  name: NginxVideoPath
  nameWithType: NginxWorker.NginxVideoPath
  fullName: Funique.Streaming.NginxWorker.NginxVideoPath
- uid: Funique.Streaming.NginxWorker.NginxPath*
  commentId: Overload:Funique.Streaming.NginxWorker.NginxPath
  name: NginxPath
  nameWithType: NginxWorker.NginxPath
  fullName: Funique.Streaming.NginxWorker.NginxPath
- uid: Funique.Streaming.NginxWorker.#ctor*
  commentId: Overload:Funique.Streaming.NginxWorker.#ctor
  name: NginxWorker
  nameWithType: NginxWorker.NginxWorker
  fullName: Funique.Streaming.NginxWorker.NginxWorker
- uid: Funique.ThirdPartyApplication.Completed(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)
  commentId: M:Funique.ThirdPartyApplication.Completed(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)
  parent: Funique.ThirdPartyApplication
  isExternal: true
  name: Completed(Object, RunWorkerCompletedEventArgs)
  nameWithType: ThirdPartyApplication.Completed(Object, RunWorkerCompletedEventArgs)
  fullName: Funique.ThirdPartyApplication.Completed(System.Object, System.ComponentModel.RunWorkerCompletedEventArgs)
  spec.csharp:
  - uid: Funique.ThirdPartyApplication.Completed(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)
    name: Completed
    nameWithType: ThirdPartyApplication.Completed
    fullName: Funique.ThirdPartyApplication.Completed
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ComponentModel.RunWorkerCompletedEventArgs
    name: RunWorkerCompletedEventArgs
    nameWithType: RunWorkerCompletedEventArgs
    fullName: System.ComponentModel.RunWorkerCompletedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.ThirdPartyApplication.Completed(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)
    name: Completed
    nameWithType: ThirdPartyApplication.Completed
    fullName: Funique.ThirdPartyApplication.Completed
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ComponentModel.RunWorkerCompletedEventArgs
    name: RunWorkerCompletedEventArgs
    nameWithType: RunWorkerCompletedEventArgs
    fullName: System.ComponentModel.RunWorkerCompletedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Streaming.NginxWorker.Completed*
  commentId: Overload:Funique.Streaming.NginxWorker.Completed
  name: Completed
  nameWithType: NginxWorker.Completed
  fullName: Funique.Streaming.NginxWorker.Completed
- uid: System.ComponentModel.RunWorkerCompletedEventArgs
  commentId: T:System.ComponentModel.RunWorkerCompletedEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: RunWorkerCompletedEventArgs
  nameWithType: RunWorkerCompletedEventArgs
  fullName: System.ComponentModel.RunWorkerCompletedEventArgs
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: Funique.ThirdPartyApplication.Open(System.ComponentModel.BackgroundWorker)
  commentId: M:Funique.ThirdPartyApplication.Open(System.ComponentModel.BackgroundWorker)
  parent: Funique.ThirdPartyApplication
  isExternal: true
  name: Open(BackgroundWorker)
  nameWithType: ThirdPartyApplication.Open(BackgroundWorker)
  fullName: Funique.ThirdPartyApplication.Open(System.ComponentModel.BackgroundWorker)
  spec.csharp:
  - uid: Funique.ThirdPartyApplication.Open(System.ComponentModel.BackgroundWorker)
    name: Open
    nameWithType: ThirdPartyApplication.Open
    fullName: Funique.ThirdPartyApplication.Open
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.BackgroundWorker
    name: BackgroundWorker
    nameWithType: BackgroundWorker
    fullName: System.ComponentModel.BackgroundWorker
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.ThirdPartyApplication.Open(System.ComponentModel.BackgroundWorker)
    name: Open
    nameWithType: ThirdPartyApplication.Open
    fullName: Funique.ThirdPartyApplication.Open
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.BackgroundWorker
    name: BackgroundWorker
    nameWithType: BackgroundWorker
    fullName: System.ComponentModel.BackgroundWorker
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Streaming.NginxWorker.Open*
  commentId: Overload:Funique.Streaming.NginxWorker.Open
  name: Open
  nameWithType: NginxWorker.Open
  fullName: Funique.Streaming.NginxWorker.Open
- uid: System.ComponentModel.BackgroundWorker
  commentId: T:System.ComponentModel.BackgroundWorker
  parent: System.ComponentModel
  isExternal: true
  name: BackgroundWorker
  nameWithType: BackgroundWorker
  fullName: System.ComponentModel.BackgroundWorker
- uid: Funique.ThirdPartyApplication.Close
  commentId: M:Funique.ThirdPartyApplication.Close
  parent: Funique.ThirdPartyApplication
  name: Close()
  nameWithType: ThirdPartyApplication.Close()
  fullName: Funique.ThirdPartyApplication.Close()
  spec.csharp:
  - uid: Funique.ThirdPartyApplication.Close
    name: Close
    nameWithType: ThirdPartyApplication.Close
    fullName: Funique.ThirdPartyApplication.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.ThirdPartyApplication.Close
    name: Close
    nameWithType: ThirdPartyApplication.Close
    fullName: Funique.ThirdPartyApplication.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Streaming.NginxWorker.Close*
  commentId: Overload:Funique.Streaming.NginxWorker.Close
  name: Close
  nameWithType: NginxWorker.Close
  fullName: Funique.Streaming.NginxWorker.Close
