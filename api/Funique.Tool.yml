### YamlMime:ManagedReference
items:
- uid: Funique.Tool
  commentId: T:Funique.Tool
  id: Tool
  parent: Funique
  children:
  - Funique.Tool.AddBtnEvent(UnityEngine.GameObject,UnityEngine.Events.UnityAction,UnityEngine.EventSystems.EventTriggerType)
  - Funique.Tool.AddBtnEvent``1(UnityEngine.GameObject,UnityEngine.Events.UnityAction{``0},``0,UnityEngine.EventSystems.EventTriggerType)
  - Funique.Tool.AddEventTrigger(UnityEngine.GameObject,System.Action,UnityEngine.EventSystems.EventTriggerType)
  - Funique.Tool.CheckRaycast(System.String)
  - Funique.Tool.CheckRepeatID(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.Int32)
  - Funique.Tool.CheckRepeatIP(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.String)
  - Funique.Tool.CheckSameVideoName(Funique.VideoInfo[],System.String)
  - Funique.Tool.CheckSameVideoName(System.Collections.Generic.List{Funique.VideoInfo},System.String)
  - Funique.Tool.DetectInWindows(UnityEngine.GameObject)
  - Funique.Tool.DetectInWindows(UnityEngine.RectTransform)
  - Funique.Tool.DetectStereoMode(System.String)
  - Funique.Tool.FFmpeg(System.String)
  - Funique.Tool.FFmpegAudioChannel(System.String)
  - Funique.Tool.FFmpegDurationTime(System.String)
  - Funique.Tool.FFmpegSetVideoInfo(Funique.VideoInfo@)
  - Funique.Tool.FileSearch(System.String,System.String)
  - Funique.Tool.FileSearch(System.String,System.String,System.String@)
  - Funique.Tool.FilterBtnName(System.String)
  - Funique.Tool.FilterVideoName(System.String)
  - Funique.Tool.FilterVideoTime(System.String)
  - Funique.Tool.GetIPRange(System.Net.IPAddress,System.Net.IPAddress,System.Int32)
  - Funique.Tool.GetMenuUIPosition(UnityEngine.Transform,UnityEngine.Vector2)
  - Funique.Tool.GetSelfIPAddress
  - Funique.Tool.Instance
  - Funique.Tool.MergeTime(System.String,System.Double)
  - Funique.Tool.MoveListItem``1(System.Collections.Generic.IList{``0},System.Int32,System.Int32)
  - Funique.Tool.ObjShowInHMD(UnityEngine.Transform,UnityEngine.Transform,System.Single,System.Single)
  - Funique.Tool.RandomID(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.Int32)
  - Funique.Tool.RandomIP(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.Int32)
  - Funique.Tool.ReadImg(System.String)
  - Funique.Tool.ReadTexture(System.String,System.String)
  - Funique.Tool.ReadTexture(System.String,UnityEngine.Texture2D@)
  - Funique.Tool.ResetCalculation(UnityEngine.GameObject,System.Single)
  - Funique.Tool.TextureCompression(UnityEngine.Texture2D,System.Single)
  - Funique.Tool.TranslateTime(System.String)
  langs:
  - csharp
  - vb
  name: Tool
  nameWithType: Tool
  fullName: Funique.Tool
  type: Class
  source:
    remote:
      path: Util/Tool.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: Tool
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Util/Tool.cs
    startLine: 16
  assemblies:
  - Funique.Core
  namespace: Funique
  summary: "\nTool collection <br />\n------------------------------------------------ <br />\n工具組\n"
  example: []
  syntax:
    content: 'public sealed class Tool : IToolUtility, IToolVideoInfoExtension, IToolStringExtension, IToolPlayerInformationExtension'
    content.vb: >-
      Public NotInheritable Class Tool

          Implements IToolUtility, IToolVideoInfoExtension, IToolStringExtension, IToolPlayerInformationExtension
  inheritance:
  - System.Object
  implements:
  - Funique.IToolUtility
  - Funique.IToolVideoInfoExtension
  - Funique.IToolStringExtension
  - Funique.IToolPlayerInformationExtension
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Funique.Tool.Instance
  commentId: P:Funique.Tool.Instance
  id: Instance
  parent: Funique.Tool
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: Tool.Instance
  fullName: Funique.Tool.Instance
  type: Property
  source:
    remote:
      path: Util/Tool.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: Instance
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Util/Tool.cs
    startLine: 41
  assemblies:
  - Funique.Core
  namespace: Funique
  summary: "\nSingleton for tool <br />\n------------------------------------------------ <br />\n唯一工具物件\n"
  example: []
  syntax:
    content: public static IToolUtility Instance { get; }
    parameters: []
    return:
      type: Funique.IToolUtility
    content.vb: Public Shared ReadOnly Property Instance As IToolUtility
  overload: Funique.Tool.Instance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Funique.Tool.CheckSameVideoName(Funique.VideoInfo[],System.String)
  commentId: M:Funique.Tool.CheckSameVideoName(Funique.VideoInfo[],System.String)
  id: CheckSameVideoName(Funique.VideoInfo[],System.String)
  parent: Funique.Tool
  langs:
  - csharp
  - vb
  name: CheckSameVideoName(VideoInfo[], String)
  nameWithType: Tool.CheckSameVideoName(VideoInfo[], String)
  fullName: Funique.Tool.CheckSameVideoName(Funique.VideoInfo[], System.String)
  type: Method
  source:
    remote:
      path: Util/Tool.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: CheckSameVideoName
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Util/Tool.cs
    startLine: 52
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: public bool CheckSameVideoName(VideoInfo[] videoList, string videoName)
    parameters:
    - id: videoList
      type: Funique.VideoInfo[]
    - id: videoName
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function CheckSameVideoName(videoList As VideoInfo(), videoName As String) As Boolean
  overload: Funique.Tool.CheckSameVideoName*
  implements:
  - Funique.IToolVideoInfoExtension.CheckSameVideoName(Funique.VideoInfo[],System.String)
  nameWithType.vb: Tool.CheckSameVideoName(VideoInfo(), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Funique.Tool.CheckSameVideoName(Funique.VideoInfo(), System.String)
  name.vb: CheckSameVideoName(VideoInfo(), String)
- uid: Funique.Tool.CheckSameVideoName(System.Collections.Generic.List{Funique.VideoInfo},System.String)
  commentId: M:Funique.Tool.CheckSameVideoName(System.Collections.Generic.List{Funique.VideoInfo},System.String)
  id: CheckSameVideoName(System.Collections.Generic.List{Funique.VideoInfo},System.String)
  parent: Funique.Tool
  langs:
  - csharp
  - vb
  name: CheckSameVideoName(List<VideoInfo>, String)
  nameWithType: Tool.CheckSameVideoName(List<VideoInfo>, String)
  fullName: Funique.Tool.CheckSameVideoName(System.Collections.Generic.List<Funique.VideoInfo>, System.String)
  type: Method
  source:
    remote:
      path: Util/Tool.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: CheckSameVideoName
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Util/Tool.cs
    startLine: 53
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: public bool CheckSameVideoName(List<VideoInfo> videoList, string videoName)
    parameters:
    - id: videoList
      type: System.Collections.Generic.List{Funique.VideoInfo}
    - id: videoName
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function CheckSameVideoName(videoList As List(Of VideoInfo), videoName As String) As Boolean
  overload: Funique.Tool.CheckSameVideoName*
  implements:
  - Funique.IToolVideoInfoExtension.CheckSameVideoName(System.Collections.Generic.List{Funique.VideoInfo},System.String)
  nameWithType.vb: Tool.CheckSameVideoName(List(Of VideoInfo), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Funique.Tool.CheckSameVideoName(System.Collections.Generic.List(Of Funique.VideoInfo), System.String)
  name.vb: CheckSameVideoName(List(Of VideoInfo), String)
- uid: Funique.Tool.FilterVideoName(System.String)
  commentId: M:Funique.Tool.FilterVideoName(System.String)
  id: FilterVideoName(System.String)
  parent: Funique.Tool
  langs:
  - csharp
  - vb
  name: FilterVideoName(String)
  nameWithType: Tool.FilterVideoName(String)
  fullName: Funique.Tool.FilterVideoName(System.String)
  type: Method
  source:
    remote:
      path: Util/Tool.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: FilterVideoName
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Util/Tool.cs
    startLine: 54
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: public string FilterVideoName(string videoSourceName)
    parameters:
    - id: videoSourceName
      type: System.String
    return:
      type: System.String
    content.vb: Public Function FilterVideoName(videoSourceName As String) As String
  overload: Funique.Tool.FilterVideoName*
  implements:
  - Funique.IToolStringExtension.FilterVideoName(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Tool.FilterVideoTime(System.String)
  commentId: M:Funique.Tool.FilterVideoTime(System.String)
  id: FilterVideoTime(System.String)
  parent: Funique.Tool
  langs:
  - csharp
  - vb
  name: FilterVideoTime(String)
  nameWithType: Tool.FilterVideoTime(String)
  fullName: Funique.Tool.FilterVideoTime(System.String)
  type: Method
  source:
    remote:
      path: Util/Tool.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: FilterVideoTime
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Util/Tool.cs
    startLine: 55
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: public float FilterVideoTime(string VideoSourceName)
    parameters:
    - id: VideoSourceName
      type: System.String
    return:
      type: System.Single
    content.vb: Public Function FilterVideoTime(VideoSourceName As String) As Single
  overload: Funique.Tool.FilterVideoTime*
  implements:
  - Funique.IToolStringExtension.FilterVideoTime(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Tool.TranslateTime(System.String)
  commentId: M:Funique.Tool.TranslateTime(System.String)
  id: TranslateTime(System.String)
  parent: Funique.Tool
  langs:
  - csharp
  - vb
  name: TranslateTime(String)
  nameWithType: Tool.TranslateTime(String)
  fullName: Funique.Tool.TranslateTime(System.String)
  type: Method
  source:
    remote:
      path: Util/Tool.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: TranslateTime
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Util/Tool.cs
    startLine: 56
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: public double TranslateTime(string timeString)
    parameters:
    - id: timeString
      type: System.String
    return:
      type: System.Double
    content.vb: Public Function TranslateTime(timeString As String) As Double
  overload: Funique.Tool.TranslateTime*
  implements:
  - Funique.IToolStringExtension.TranslateTime(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Tool.FilterBtnName(System.String)
  commentId: M:Funique.Tool.FilterBtnName(System.String)
  id: FilterBtnName(System.String)
  parent: Funique.Tool
  langs:
  - csharp
  - vb
  name: FilterBtnName(String)
  nameWithType: Tool.FilterBtnName(String)
  fullName: Funique.Tool.FilterBtnName(System.String)
  type: Method
  source:
    remote:
      path: Util/Tool.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: FilterBtnName
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Util/Tool.cs
    startLine: 57
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: public string FilterBtnName(string VideoSourceName)
    parameters:
    - id: VideoSourceName
      type: System.String
    return:
      type: System.String
    content.vb: Public Function FilterBtnName(VideoSourceName As String) As String
  overload: Funique.Tool.FilterBtnName*
  implements:
  - Funique.IToolStringExtension.FilterBtnName(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Tool.MergeTime(System.String,System.Double)
  commentId: M:Funique.Tool.MergeTime(System.String,System.Double)
  id: MergeTime(System.String,System.Double)
  parent: Funique.Tool
  langs:
  - csharp
  - vb
  name: MergeTime(String, Double)
  nameWithType: Tool.MergeTime(String, Double)
  fullName: Funique.Tool.MergeTime(System.String, System.Double)
  type: Method
  source:
    remote:
      path: Util/Tool.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: MergeTime
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Util/Tool.cs
    startLine: 58
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: public string MergeTime(string name, double time)
    parameters:
    - id: name
      type: System.String
    - id: time
      type: System.Double
    return:
      type: System.String
    content.vb: Public Function MergeTime(name As String, time As Double) As String
  overload: Funique.Tool.MergeTime*
  implements:
  - Funique.IToolStringExtension.MergeTime(System.String,System.Double)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Tool.DetectStereoMode(System.String)
  commentId: M:Funique.Tool.DetectStereoMode(System.String)
  id: DetectStereoMode(System.String)
  parent: Funique.Tool
  langs:
  - csharp
  - vb
  name: DetectStereoMode(String)
  nameWithType: Tool.DetectStereoMode(String)
  fullName: Funique.Tool.DetectStereoMode(System.String)
  type: Method
  source:
    remote:
      path: Util/Tool.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: DetectStereoMode
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Util/Tool.cs
    startLine: 59
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: public string DetectStereoMode(string videoFilterName)
    parameters:
    - id: videoFilterName
      type: System.String
    return:
      type: System.String
    content.vb: Public Function DetectStereoMode(videoFilterName As String) As String
  overload: Funique.Tool.DetectStereoMode*
  implements:
  - Funique.IToolStringExtension.DetectStereoMode(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Tool.RandomID(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.Int32)
  commentId: M:Funique.Tool.RandomID(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.Int32)
  id: RandomID(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.Int32)
  parent: Funique.Tool
  langs:
  - csharp
  - vb
  name: RandomID(Dictionary<String, PlayerInformation>, Int32)
  nameWithType: Tool.RandomID(Dictionary<String, PlayerInformation>, Int32)
  fullName: Funique.Tool.RandomID(System.Collections.Generic.Dictionary<System.String, Funique.PlayerInformation>, System.Int32)
  type: Method
  source:
    remote:
      path: Util/Tool.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: RandomID
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Util/Tool.cs
    startLine: 61
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: public int RandomID(Dictionary<string, PlayerInformation> PlayerInfoDic, int memberLimit)
    parameters:
    - id: PlayerInfoDic
      type: System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation}
    - id: memberLimit
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Function RandomID(PlayerInfoDic As Dictionary(Of String, PlayerInformation), memberLimit As Integer) As Integer
  overload: Funique.Tool.RandomID*
  implements:
  - Funique.IToolPlayerInformationExtension.RandomID(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.Int32)
  nameWithType.vb: Tool.RandomID(Dictionary(Of String, PlayerInformation), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Funique.Tool.RandomID(System.Collections.Generic.Dictionary(Of System.String, Funique.PlayerInformation), System.Int32)
  name.vb: RandomID(Dictionary(Of String, PlayerInformation), Int32)
- uid: Funique.Tool.RandomIP(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.Int32)
  commentId: M:Funique.Tool.RandomIP(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.Int32)
  id: RandomIP(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.Int32)
  parent: Funique.Tool
  langs:
  - csharp
  - vb
  name: RandomIP(Dictionary<String, PlayerInformation>, Int32)
  nameWithType: Tool.RandomIP(Dictionary<String, PlayerInformation>, Int32)
  fullName: Funique.Tool.RandomIP(System.Collections.Generic.Dictionary<System.String, Funique.PlayerInformation>, System.Int32)
  type: Method
  source:
    remote:
      path: Util/Tool.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: RandomIP
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Util/Tool.cs
    startLine: 62
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: public string RandomIP(Dictionary<string, PlayerInformation> PlayerInfoDic, int memberLimit)
    parameters:
    - id: PlayerInfoDic
      type: System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation}
    - id: memberLimit
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Function RandomIP(PlayerInfoDic As Dictionary(Of String, PlayerInformation), memberLimit As Integer) As String
  overload: Funique.Tool.RandomIP*
  implements:
  - Funique.IToolPlayerInformationExtension.RandomIP(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.Int32)
  nameWithType.vb: Tool.RandomIP(Dictionary(Of String, PlayerInformation), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Funique.Tool.RandomIP(System.Collections.Generic.Dictionary(Of System.String, Funique.PlayerInformation), System.Int32)
  name.vb: RandomIP(Dictionary(Of String, PlayerInformation), Int32)
- uid: Funique.Tool.CheckRepeatID(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.Int32)
  commentId: M:Funique.Tool.CheckRepeatID(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.Int32)
  id: CheckRepeatID(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.Int32)
  parent: Funique.Tool
  langs:
  - csharp
  - vb
  name: CheckRepeatID(Dictionary<String, PlayerInformation>, Int32)
  nameWithType: Tool.CheckRepeatID(Dictionary<String, PlayerInformation>, Int32)
  fullName: Funique.Tool.CheckRepeatID(System.Collections.Generic.Dictionary<System.String, Funique.PlayerInformation>, System.Int32)
  type: Method
  source:
    remote:
      path: Util/Tool.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: CheckRepeatID
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Util/Tool.cs
    startLine: 63
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: public bool CheckRepeatID(Dictionary<string, PlayerInformation> PlayerInfoDic, int ID)
    parameters:
    - id: PlayerInfoDic
      type: System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation}
    - id: ID
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function CheckRepeatID(PlayerInfoDic As Dictionary(Of String, PlayerInformation), ID As Integer) As Boolean
  overload: Funique.Tool.CheckRepeatID*
  implements:
  - Funique.IToolPlayerInformationExtension.CheckRepeatID(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.Int32)
  nameWithType.vb: Tool.CheckRepeatID(Dictionary(Of String, PlayerInformation), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Funique.Tool.CheckRepeatID(System.Collections.Generic.Dictionary(Of System.String, Funique.PlayerInformation), System.Int32)
  name.vb: CheckRepeatID(Dictionary(Of String, PlayerInformation), Int32)
- uid: Funique.Tool.CheckRepeatIP(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.String)
  commentId: M:Funique.Tool.CheckRepeatIP(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.String)
  id: CheckRepeatIP(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.String)
  parent: Funique.Tool
  langs:
  - csharp
  - vb
  name: CheckRepeatIP(Dictionary<String, PlayerInformation>, String)
  nameWithType: Tool.CheckRepeatIP(Dictionary<String, PlayerInformation>, String)
  fullName: Funique.Tool.CheckRepeatIP(System.Collections.Generic.Dictionary<System.String, Funique.PlayerInformation>, System.String)
  type: Method
  source:
    remote:
      path: Util/Tool.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: CheckRepeatIP
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Util/Tool.cs
    startLine: 64
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: public bool CheckRepeatIP(Dictionary<string, PlayerInformation> PlayerInfoDic, string IP)
    parameters:
    - id: PlayerInfoDic
      type: System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation}
    - id: IP
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function CheckRepeatIP(PlayerInfoDic As Dictionary(Of String, PlayerInformation), IP As String) As Boolean
  overload: Funique.Tool.CheckRepeatIP*
  implements:
  - Funique.IToolPlayerInformationExtension.CheckRepeatIP(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.String)
  nameWithType.vb: Tool.CheckRepeatIP(Dictionary(Of String, PlayerInformation), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Funique.Tool.CheckRepeatIP(System.Collections.Generic.Dictionary(Of System.String, Funique.PlayerInformation), System.String)
  name.vb: CheckRepeatIP(Dictionary(Of String, PlayerInformation), String)
- uid: Funique.Tool.CheckRaycast(System.String)
  commentId: M:Funique.Tool.CheckRaycast(System.String)
  id: CheckRaycast(System.String)
  parent: Funique.Tool
  langs:
  - csharp
  - vb
  name: CheckRaycast(String)
  nameWithType: Tool.CheckRaycast(String)
  fullName: Funique.Tool.CheckRaycast(System.String)
  type: Method
  source:
    remote:
      path: Util/Tool.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: CheckRaycast
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Util/Tool.cs
    startLine: 66
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: public bool CheckRaycast(string tag)
    parameters:
    - id: tag
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function CheckRaycast(tag As String) As Boolean
  overload: Funique.Tool.CheckRaycast*
  implements:
  - Funique.IToolUtility.CheckRaycast(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Tool.MoveListItem``1(System.Collections.Generic.IList{``0},System.Int32,System.Int32)
  commentId: M:Funique.Tool.MoveListItem``1(System.Collections.Generic.IList{``0},System.Int32,System.Int32)
  id: MoveListItem``1(System.Collections.Generic.IList{``0},System.Int32,System.Int32)
  parent: Funique.Tool
  langs:
  - csharp
  - vb
  name: MoveListItem<T>(IList<T>, Int32, Int32)
  nameWithType: Tool.MoveListItem<T>(IList<T>, Int32, Int32)
  fullName: Funique.Tool.MoveListItem<T>(System.Collections.Generic.IList<T>, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Util/Tool.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: MoveListItem
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Util/Tool.cs
    startLine: 67
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: public IList<T> MoveListItem<T>(IList<T> list, int indexA, int indexB)
    parameters:
    - id: list
      type: System.Collections.Generic.IList{{T}}
    - id: indexA
      type: System.Int32
    - id: indexB
      type: System.Int32
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IList{{T}}
    content.vb: Public Function MoveListItem(Of T)(list As IList(Of T), indexA As Integer, indexB As Integer) As IList(Of T)
  overload: Funique.Tool.MoveListItem*
  implements:
  - Funique.IToolUtility.MoveListItem``1(System.Collections.Generic.IList{{T}},System.Int32,System.Int32)
  nameWithType.vb: Tool.MoveListItem(Of T)(IList(Of T), Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Funique.Tool.MoveListItem(Of T)(System.Collections.Generic.IList(Of T), System.Int32, System.Int32)
  name.vb: MoveListItem(Of T)(IList(Of T), Int32, Int32)
- uid: Funique.Tool.GetMenuUIPosition(UnityEngine.Transform,UnityEngine.Vector2)
  commentId: M:Funique.Tool.GetMenuUIPosition(UnityEngine.Transform,UnityEngine.Vector2)
  id: GetMenuUIPosition(UnityEngine.Transform,UnityEngine.Vector2)
  parent: Funique.Tool
  langs:
  - csharp
  - vb
  name: GetMenuUIPosition(Transform, Vector2)
  nameWithType: Tool.GetMenuUIPosition(Transform, Vector2)
  fullName: Funique.Tool.GetMenuUIPosition(UnityEngine.Transform, UnityEngine.Vector2)
  type: Method
  source:
    remote:
      path: Util/Tool.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: GetMenuUIPosition
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Util/Tool.cs
    startLine: 69
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: public Vector3 GetMenuUIPosition(Transform canvas, Vector2 mousePosition)
    parameters:
    - id: canvas
      type: UnityEngine.Transform
    - id: mousePosition
      type: UnityEngine.Vector2
    return:
      type: UnityEngine.Vector3
    content.vb: Public Function GetMenuUIPosition(canvas As Transform, mousePosition As Vector2) As Vector3
  overload: Funique.Tool.GetMenuUIPosition*
  implements:
  - Funique.IToolUtility.GetMenuUIPosition(UnityEngine.Transform,UnityEngine.Vector2)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Tool.DetectInWindows(UnityEngine.RectTransform)
  commentId: M:Funique.Tool.DetectInWindows(UnityEngine.RectTransform)
  id: DetectInWindows(UnityEngine.RectTransform)
  parent: Funique.Tool
  langs:
  - csharp
  - vb
  name: DetectInWindows(RectTransform)
  nameWithType: Tool.DetectInWindows(RectTransform)
  fullName: Funique.Tool.DetectInWindows(UnityEngine.RectTransform)
  type: Method
  source:
    remote:
      path: Util/Tool.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: DetectInWindows
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Util/Tool.cs
    startLine: 70
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: public bool DetectInWindows(RectTransform target)
    parameters:
    - id: target
      type: UnityEngine.RectTransform
    return:
      type: System.Boolean
    content.vb: Public Function DetectInWindows(target As RectTransform) As Boolean
  overload: Funique.Tool.DetectInWindows*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Tool.GetSelfIPAddress
  commentId: M:Funique.Tool.GetSelfIPAddress
  id: GetSelfIPAddress
  parent: Funique.Tool
  langs:
  - csharp
  - vb
  name: GetSelfIPAddress()
  nameWithType: Tool.GetSelfIPAddress()
  fullName: Funique.Tool.GetSelfIPAddress()
  type: Method
  source:
    remote:
      path: Util/Tool.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: GetSelfIPAddress
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Util/Tool.cs
    startLine: 72
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: public string GetSelfIPAddress()
    return:
      type: System.String
    content.vb: Public Function GetSelfIPAddress As String
  overload: Funique.Tool.GetSelfIPAddress*
  implements:
  - Funique.IToolUtility.GetSelfIPAddress
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Tool.AddBtnEvent(UnityEngine.GameObject,UnityEngine.Events.UnityAction,UnityEngine.EventSystems.EventTriggerType)
  commentId: M:Funique.Tool.AddBtnEvent(UnityEngine.GameObject,UnityEngine.Events.UnityAction,UnityEngine.EventSystems.EventTriggerType)
  id: AddBtnEvent(UnityEngine.GameObject,UnityEngine.Events.UnityAction,UnityEngine.EventSystems.EventTriggerType)
  parent: Funique.Tool
  langs:
  - csharp
  - vb
  name: AddBtnEvent(GameObject, UnityAction, EventTriggerType)
  nameWithType: Tool.AddBtnEvent(GameObject, UnityAction, EventTriggerType)
  fullName: Funique.Tool.AddBtnEvent(UnityEngine.GameObject, UnityEngine.Events.UnityAction, UnityEngine.EventSystems.EventTriggerType)
  type: Method
  source:
    remote:
      path: Util/Tool.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: AddBtnEvent
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Util/Tool.cs
    startLine: 74
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: public void AddBtnEvent(GameObject BtnObj, UnityAction BtnAction, EventTriggerType TriggerType)
    parameters:
    - id: BtnObj
      type: UnityEngine.GameObject
    - id: BtnAction
      type: UnityEngine.Events.UnityAction
    - id: TriggerType
      type: UnityEngine.EventSystems.EventTriggerType
    content.vb: Public Sub AddBtnEvent(BtnObj As GameObject, BtnAction As UnityAction, TriggerType As EventTriggerType)
  overload: Funique.Tool.AddBtnEvent*
  implements:
  - Funique.IToolUtility.AddBtnEvent(UnityEngine.GameObject,UnityEngine.Events.UnityAction,UnityEngine.EventSystems.EventTriggerType)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Tool.AddBtnEvent``1(UnityEngine.GameObject,UnityEngine.Events.UnityAction{``0},``0,UnityEngine.EventSystems.EventTriggerType)
  commentId: M:Funique.Tool.AddBtnEvent``1(UnityEngine.GameObject,UnityEngine.Events.UnityAction{``0},``0,UnityEngine.EventSystems.EventTriggerType)
  id: AddBtnEvent``1(UnityEngine.GameObject,UnityEngine.Events.UnityAction{``0},``0,UnityEngine.EventSystems.EventTriggerType)
  parent: Funique.Tool
  langs:
  - csharp
  - vb
  name: AddBtnEvent<T>(GameObject, UnityAction<T>, T, EventTriggerType)
  nameWithType: Tool.AddBtnEvent<T>(GameObject, UnityAction<T>, T, EventTriggerType)
  fullName: Funique.Tool.AddBtnEvent<T>(UnityEngine.GameObject, UnityEngine.Events.UnityAction<T>, T, UnityEngine.EventSystems.EventTriggerType)
  type: Method
  source:
    remote:
      path: Util/Tool.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: AddBtnEvent
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Util/Tool.cs
    startLine: 91
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: public void AddBtnEvent<T>(GameObject BtnObj, UnityAction<T> BtnAction, T ActionString, EventTriggerType TriggerType)
    parameters:
    - id: BtnObj
      type: UnityEngine.GameObject
    - id: BtnAction
      type: UnityEngine.Events.UnityAction{{T}}
    - id: ActionString
      type: '{T}'
    - id: TriggerType
      type: UnityEngine.EventSystems.EventTriggerType
    typeParameters:
    - id: T
    content.vb: Public Sub AddBtnEvent(Of T)(BtnObj As GameObject, BtnAction As UnityAction(Of T), ActionString As T, TriggerType As EventTriggerType)
  overload: Funique.Tool.AddBtnEvent*
  implements:
  - Funique.IToolUtility.AddBtnEvent``1(UnityEngine.GameObject,UnityEngine.Events.UnityAction{{T}},{T},UnityEngine.EventSystems.EventTriggerType)
  nameWithType.vb: Tool.AddBtnEvent(Of T)(GameObject, UnityAction(Of T), T, EventTriggerType)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Funique.Tool.AddBtnEvent(Of T)(UnityEngine.GameObject, UnityEngine.Events.UnityAction(Of T), T, UnityEngine.EventSystems.EventTriggerType)
  name.vb: AddBtnEvent(Of T)(GameObject, UnityAction(Of T), T, EventTriggerType)
- uid: Funique.Tool.TextureCompression(UnityEngine.Texture2D,System.Single)
  commentId: M:Funique.Tool.TextureCompression(UnityEngine.Texture2D,System.Single)
  id: TextureCompression(UnityEngine.Texture2D,System.Single)
  parent: Funique.Tool
  langs:
  - csharp
  - vb
  name: TextureCompression(Texture2D, Single)
  nameWithType: Tool.TextureCompression(Texture2D, Single)
  fullName: Funique.Tool.TextureCompression(UnityEngine.Texture2D, System.Single)
  type: Method
  source:
    remote:
      path: Util/Tool.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: TextureCompression
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Util/Tool.cs
    startLine: 108
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: public Texture2D TextureCompression(Texture2D texture, float rate)
    parameters:
    - id: texture
      type: UnityEngine.Texture2D
    - id: rate
      type: System.Single
    return:
      type: UnityEngine.Texture2D
    content.vb: Public Function TextureCompression(texture As Texture2D, rate As Single) As Texture2D
  overload: Funique.Tool.TextureCompression*
  implements:
  - Funique.IToolUtility.TextureCompression(UnityEngine.Texture2D,System.Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Tool.ObjShowInHMD(UnityEngine.Transform,UnityEngine.Transform,System.Single,System.Single)
  commentId: M:Funique.Tool.ObjShowInHMD(UnityEngine.Transform,UnityEngine.Transform,System.Single,System.Single)
  id: ObjShowInHMD(UnityEngine.Transform,UnityEngine.Transform,System.Single,System.Single)
  parent: Funique.Tool
  langs:
  - csharp
  - vb
  name: ObjShowInHMD(Transform, Transform, Single, Single)
  nameWithType: Tool.ObjShowInHMD(Transform, Transform, Single, Single)
  fullName: Funique.Tool.ObjShowInHMD(UnityEngine.Transform, UnityEngine.Transform, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: Util/Tool.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: ObjShowInHMD
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Util/Tool.cs
    startLine: 117
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: public void ObjShowInHMD(Transform header, Transform objTrans, float Len, float offsetAngles)
    parameters:
    - id: header
      type: UnityEngine.Transform
    - id: objTrans
      type: UnityEngine.Transform
    - id: Len
      type: System.Single
    - id: offsetAngles
      type: System.Single
    content.vb: Public Sub ObjShowInHMD(header As Transform, objTrans As Transform, Len As Single, offsetAngles As Single)
  overload: Funique.Tool.ObjShowInHMD*
  implements:
  - Funique.IToolUtility.ObjShowInHMD(UnityEngine.Transform,UnityEngine.Transform,System.Single,System.Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Tool.ReadImg(System.String)
  commentId: M:Funique.Tool.ReadImg(System.String)
  id: ReadImg(System.String)
  parent: Funique.Tool
  langs:
  - csharp
  - vb
  name: ReadImg(String)
  nameWithType: Tool.ReadImg(String)
  fullName: Funique.Tool.ReadImg(System.String)
  type: Method
  source:
    remote:
      path: Util/Tool.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: ReadImg
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Util/Tool.cs
    startLine: 123
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: public Sprite ReadImg(string imageName)
    parameters:
    - id: imageName
      type: System.String
    return:
      type: UnityEngine.Sprite
    content.vb: Public Function ReadImg(imageName As String) As Sprite
  overload: Funique.Tool.ReadImg*
  implements:
  - Funique.IToolUtility.ReadImg(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Tool.ReadTexture(System.String,System.String)
  commentId: M:Funique.Tool.ReadTexture(System.String,System.String)
  id: ReadTexture(System.String,System.String)
  parent: Funique.Tool
  langs:
  - csharp
  - vb
  name: ReadTexture(String, String)
  nameWithType: Tool.ReadTexture(String, String)
  fullName: Funique.Tool.ReadTexture(System.String, System.String)
  type: Method
  source:
    remote:
      path: Util/Tool.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: ReadTexture
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Util/Tool.cs
    startLine: 128
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: public Texture2D ReadTexture(string imageName, string imgFolder = null)
    parameters:
    - id: imageName
      type: System.String
    - id: imgFolder
      type: System.String
    return:
      type: UnityEngine.Texture2D
    content.vb: Public Function ReadTexture(imageName As String, imgFolder As String = Nothing) As Texture2D
  overload: Funique.Tool.ReadTexture*
  implements:
  - Funique.IToolUtility.ReadTexture(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Tool.FFmpeg(System.String)
  commentId: M:Funique.Tool.FFmpeg(System.String)
  id: FFmpeg(System.String)
  parent: Funique.Tool
  langs:
  - csharp
  - vb
  name: FFmpeg(String)
  nameWithType: Tool.FFmpeg(String)
  fullName: Funique.Tool.FFmpeg(System.String)
  type: Method
  source:
    remote:
      path: Util/Tool.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: FFmpeg
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Util/Tool.cs
    startLine: 153
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: public string FFmpeg(string arg)
    parameters:
    - id: arg
      type: System.String
    return:
      type: System.String
    content.vb: Public Function FFmpeg(arg As String) As String
  overload: Funique.Tool.FFmpeg*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Tool.FFmpegSetVideoInfo(Funique.VideoInfo@)
  commentId: M:Funique.Tool.FFmpegSetVideoInfo(Funique.VideoInfo@)
  id: FFmpegSetVideoInfo(Funique.VideoInfo@)
  parent: Funique.Tool
  langs:
  - csharp
  - vb
  name: FFmpegSetVideoInfo(ref VideoInfo)
  nameWithType: Tool.FFmpegSetVideoInfo(ref VideoInfo)
  fullName: Funique.Tool.FFmpegSetVideoInfo(ref Funique.VideoInfo)
  type: Method
  source:
    remote:
      path: Util/Tool.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: FFmpegSetVideoInfo
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Util/Tool.cs
    startLine: 154
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: public void FFmpegSetVideoInfo(ref VideoInfo video)
    parameters:
    - id: video
      type: Funique.VideoInfo
    content.vb: Public Sub FFmpegSetVideoInfo(ByRef video As VideoInfo)
  overload: Funique.Tool.FFmpegSetVideoInfo*
  implements:
  - Funique.IToolUtility.FFmpegSetVideoInfo(Funique.VideoInfo@)
  nameWithType.vb: Tool.FFmpegSetVideoInfo(ByRef VideoInfo)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Funique.Tool.FFmpegSetVideoInfo(ByRef Funique.VideoInfo)
  name.vb: FFmpegSetVideoInfo(ByRef VideoInfo)
- uid: Funique.Tool.FFmpegDurationTime(System.String)
  commentId: M:Funique.Tool.FFmpegDurationTime(System.String)
  id: FFmpegDurationTime(System.String)
  parent: Funique.Tool
  langs:
  - csharp
  - vb
  name: FFmpegDurationTime(String)
  nameWithType: Tool.FFmpegDurationTime(String)
  fullName: Funique.Tool.FFmpegDurationTime(System.String)
  type: Method
  source:
    remote:
      path: Util/Tool.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: FFmpegDurationTime
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Util/Tool.cs
    startLine: 156
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: public double FFmpegDurationTime(string ffmpegMsg)
    parameters:
    - id: ffmpegMsg
      type: System.String
    return:
      type: System.Double
    content.vb: Public Function FFmpegDurationTime(ffmpegMsg As String) As Double
  overload: Funique.Tool.FFmpegDurationTime*
  implements:
  - Funique.IToolUtility.FFmpegDurationTime(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Tool.FFmpegAudioChannel(System.String)
  commentId: M:Funique.Tool.FFmpegAudioChannel(System.String)
  id: FFmpegAudioChannel(System.String)
  parent: Funique.Tool
  langs:
  - csharp
  - vb
  name: FFmpegAudioChannel(String)
  nameWithType: Tool.FFmpegAudioChannel(String)
  fullName: Funique.Tool.FFmpegAudioChannel(System.String)
  type: Method
  source:
    remote:
      path: Util/Tool.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: FFmpegAudioChannel
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Util/Tool.cs
    startLine: 157
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: public string FFmpegAudioChannel(string ffmpegMsg)
    parameters:
    - id: ffmpegMsg
      type: System.String
    return:
      type: System.String
    content.vb: Public Function FFmpegAudioChannel(ffmpegMsg As String) As String
  overload: Funique.Tool.FFmpegAudioChannel*
  implements:
  - Funique.IToolUtility.FFmpegAudioChannel(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Tool.FileSearch(System.String,System.String)
  commentId: M:Funique.Tool.FileSearch(System.String,System.String)
  id: FileSearch(System.String,System.String)
  parent: Funique.Tool
  langs:
  - csharp
  - vb
  name: FileSearch(String, String)
  nameWithType: Tool.FileSearch(String, String)
  fullName: Funique.Tool.FileSearch(System.String, System.String)
  type: Method
  source:
    remote:
      path: Util/Tool.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: FileSearch
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Util/Tool.cs
    startLine: 158
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: public bool FileSearch(string sDir, string fileName)
    parameters:
    - id: sDir
      type: System.String
    - id: fileName
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function FileSearch(sDir As String, fileName As String) As Boolean
  overload: Funique.Tool.FileSearch*
  implements:
  - Funique.IToolUtility.FileSearch(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Tool.FileSearch(System.String,System.String,System.String@)
  commentId: M:Funique.Tool.FileSearch(System.String,System.String,System.String@)
  id: FileSearch(System.String,System.String,System.String@)
  parent: Funique.Tool
  langs:
  - csharp
  - vb
  name: FileSearch(String, String, out String)
  nameWithType: Tool.FileSearch(String, String, out String)
  fullName: Funique.Tool.FileSearch(System.String, System.String, out System.String)
  type: Method
  source:
    remote:
      path: Util/Tool.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: FileSearch
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Util/Tool.cs
    startLine: 159
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: public bool FileSearch(string sDir, string fileName, out string fullpath)
    parameters:
    - id: sDir
      type: System.String
    - id: fileName
      type: System.String
    - id: fullpath
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function FileSearch(sDir As String, fileName As String, ByRef fullpath As String) As Boolean
  overload: Funique.Tool.FileSearch*
  implements:
  - Funique.IToolUtility.FileSearch(System.String,System.String,System.String@)
  nameWithType.vb: Tool.FileSearch(String, String, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Funique.Tool.FileSearch(System.String, System.String, ByRef System.String)
  name.vb: FileSearch(String, String, ByRef String)
- uid: Funique.Tool.ResetCalculation(UnityEngine.GameObject,System.Single)
  commentId: M:Funique.Tool.ResetCalculation(UnityEngine.GameObject,System.Single)
  id: ResetCalculation(UnityEngine.GameObject,System.Single)
  parent: Funique.Tool
  langs:
  - csharp
  - vb
  name: ResetCalculation(GameObject, Single)
  nameWithType: Tool.ResetCalculation(GameObject, Single)
  fullName: Funique.Tool.ResetCalculation(UnityEngine.GameObject, System.Single)
  type: Method
  source:
    remote:
      path: Util/Tool.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: ResetCalculation
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Util/Tool.cs
    startLine: 160
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: public void ResetCalculation(GameObject targetObj, float len)
    parameters:
    - id: targetObj
      type: UnityEngine.GameObject
    - id: len
      type: System.Single
    content.vb: Public Sub ResetCalculation(targetObj As GameObject, len As Single)
  overload: Funique.Tool.ResetCalculation*
  implements:
  - Funique.IToolUtility.ResetCalculation(UnityEngine.GameObject,System.Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Tool.GetIPRange(System.Net.IPAddress,System.Net.IPAddress,System.Int32)
  commentId: M:Funique.Tool.GetIPRange(System.Net.IPAddress,System.Net.IPAddress,System.Int32)
  id: GetIPRange(System.Net.IPAddress,System.Net.IPAddress,System.Int32)
  parent: Funique.Tool
  langs:
  - csharp
  - vb
  name: GetIPRange(IPAddress, IPAddress, Int32)
  nameWithType: Tool.GetIPRange(IPAddress, IPAddress, Int32)
  fullName: Funique.Tool.GetIPRange(System.Net.IPAddress, System.Net.IPAddress, System.Int32)
  type: Method
  source:
    remote:
      path: Util/Tool.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: GetIPRange
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Util/Tool.cs
    startLine: 161
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: public IPAddress[] GetIPRange(IPAddress p1, IPAddress p2, int mask)
    parameters:
    - id: p1
      type: System.Net.IPAddress
    - id: p2
      type: System.Net.IPAddress
    - id: mask
      type: System.Int32
    return:
      type: System.Net.IPAddress[]
    content.vb: Public Function GetIPRange(p1 As IPAddress, p2 As IPAddress, mask As Integer) As IPAddress()
  overload: Funique.Tool.GetIPRange*
  implements:
  - Funique.IToolUtility.GetIPRange(System.Net.IPAddress,System.Net.IPAddress,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Tool.DetectInWindows(UnityEngine.GameObject)
  commentId: M:Funique.Tool.DetectInWindows(UnityEngine.GameObject)
  id: DetectInWindows(UnityEngine.GameObject)
  parent: Funique.Tool
  langs:
  - csharp
  - vb
  name: DetectInWindows(GameObject)
  nameWithType: Tool.DetectInWindows(GameObject)
  fullName: Funique.Tool.DetectInWindows(UnityEngine.GameObject)
  type: Method
  source:
    remote:
      path: Util/Tool.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: DetectInWindows
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Util/Tool.cs
    startLine: 179
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: public bool DetectInWindows(GameObject target)
    parameters:
    - id: target
      type: UnityEngine.GameObject
    return:
      type: System.Boolean
    content.vb: Public Function DetectInWindows(target As GameObject) As Boolean
  overload: Funique.Tool.DetectInWindows*
  implements:
  - Funique.IToolUtility.DetectInWindows(UnityEngine.GameObject)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Tool.ReadTexture(System.String,UnityEngine.Texture2D@)
  commentId: M:Funique.Tool.ReadTexture(System.String,UnityEngine.Texture2D@)
  id: ReadTexture(System.String,UnityEngine.Texture2D@)
  parent: Funique.Tool
  langs:
  - csharp
  - vb
  name: ReadTexture(String, ref Texture2D)
  nameWithType: Tool.ReadTexture(String, ref Texture2D)
  fullName: Funique.Tool.ReadTexture(System.String, ref UnityEngine.Texture2D)
  type: Method
  source:
    remote:
      path: Util/Tool.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: ReadTexture
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Util/Tool.cs
    startLine: 192
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: public Texture2D ReadTexture(string imageName, ref Texture2D tex)
    parameters:
    - id: imageName
      type: System.String
    - id: tex
      type: UnityEngine.Texture2D
    return:
      type: UnityEngine.Texture2D
    content.vb: Public Function ReadTexture(imageName As String, ByRef tex As Texture2D) As Texture2D
  overload: Funique.Tool.ReadTexture*
  implements:
  - Funique.IToolUtility.ReadTexture(System.String,UnityEngine.Texture2D@)
  nameWithType.vb: Tool.ReadTexture(String, ByRef Texture2D)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Funique.Tool.ReadTexture(System.String, ByRef UnityEngine.Texture2D)
  name.vb: ReadTexture(String, ByRef Texture2D)
- uid: Funique.Tool.AddEventTrigger(UnityEngine.GameObject,System.Action,UnityEngine.EventSystems.EventTriggerType)
  commentId: M:Funique.Tool.AddEventTrigger(UnityEngine.GameObject,System.Action,UnityEngine.EventSystems.EventTriggerType)
  id: AddEventTrigger(UnityEngine.GameObject,System.Action,UnityEngine.EventSystems.EventTriggerType)
  parent: Funique.Tool
  langs:
  - csharp
  - vb
  name: AddEventTrigger(GameObject, Action, EventTriggerType)
  nameWithType: Tool.AddEventTrigger(GameObject, Action, EventTriggerType)
  fullName: Funique.Tool.AddEventTrigger(UnityEngine.GameObject, System.Action, UnityEngine.EventSystems.EventTriggerType)
  type: Method
  source:
    remote:
      path: Util/Tool.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: AddEventTrigger
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Util/Tool.cs
    startLine: 210
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: public void AddEventTrigger(GameObject Object, Action TriggerAction, EventTriggerType TriggerType)
    parameters:
    - id: Object
      type: UnityEngine.GameObject
    - id: TriggerAction
      type: System.Action
    - id: TriggerType
      type: UnityEngine.EventSystems.EventTriggerType
    content.vb: Public Sub AddEventTrigger(Object As GameObject, TriggerAction As Action, TriggerType As EventTriggerType)
  overload: Funique.Tool.AddEventTrigger*
  implements:
  - Funique.IToolUtility.AddEventTrigger(UnityEngine.GameObject,System.Action,UnityEngine.EventSystems.EventTriggerType)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Funique
  commentId: N:Funique
  name: Funique
  nameWithType: Funique
  fullName: Funique
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Funique.IToolUtility
  commentId: T:Funique.IToolUtility
  parent: Funique
  name: IToolUtility
  nameWithType: IToolUtility
  fullName: Funique.IToolUtility
- uid: Funique.IToolVideoInfoExtension
  commentId: T:Funique.IToolVideoInfoExtension
  parent: Funique
  name: IToolVideoInfoExtension
  nameWithType: IToolVideoInfoExtension
  fullName: Funique.IToolVideoInfoExtension
- uid: Funique.IToolStringExtension
  commentId: T:Funique.IToolStringExtension
  parent: Funique
  name: IToolStringExtension
  nameWithType: IToolStringExtension
  fullName: Funique.IToolStringExtension
- uid: Funique.IToolPlayerInformationExtension
  commentId: T:Funique.IToolPlayerInformationExtension
  parent: Funique
  name: IToolPlayerInformationExtension
  nameWithType: IToolPlayerInformationExtension
  fullName: Funique.IToolPlayerInformationExtension
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Funique.Tool.Instance*
  commentId: Overload:Funique.Tool.Instance
  name: Instance
  nameWithType: Tool.Instance
  fullName: Funique.Tool.Instance
- uid: Funique.Tool.CheckSameVideoName*
  commentId: Overload:Funique.Tool.CheckSameVideoName
  name: CheckSameVideoName
  nameWithType: Tool.CheckSameVideoName
  fullName: Funique.Tool.CheckSameVideoName
- uid: Funique.IToolVideoInfoExtension.CheckSameVideoName(Funique.VideoInfo[],System.String)
  commentId: M:Funique.IToolVideoInfoExtension.CheckSameVideoName(Funique.VideoInfo[],System.String)
  parent: Funique.IToolVideoInfoExtension
  isExternal: true
  name: CheckSameVideoName(VideoInfo[], String)
  nameWithType: IToolVideoInfoExtension.CheckSameVideoName(VideoInfo[], String)
  fullName: Funique.IToolVideoInfoExtension.CheckSameVideoName(Funique.VideoInfo[], System.String)
  nameWithType.vb: IToolVideoInfoExtension.CheckSameVideoName(VideoInfo(), String)
  fullName.vb: Funique.IToolVideoInfoExtension.CheckSameVideoName(Funique.VideoInfo(), System.String)
  name.vb: CheckSameVideoName(VideoInfo(), String)
  spec.csharp:
  - uid: Funique.IToolVideoInfoExtension.CheckSameVideoName(Funique.VideoInfo[],System.String)
    name: CheckSameVideoName
    nameWithType: IToolVideoInfoExtension.CheckSameVideoName
    fullName: Funique.IToolVideoInfoExtension.CheckSameVideoName
  - name: (
    nameWithType: (
    fullName: (
  - uid: Funique.VideoInfo
    name: VideoInfo
    nameWithType: VideoInfo
    fullName: Funique.VideoInfo
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolVideoInfoExtension.CheckSameVideoName(Funique.VideoInfo[],System.String)
    name: CheckSameVideoName
    nameWithType: IToolVideoInfoExtension.CheckSameVideoName
    fullName: Funique.IToolVideoInfoExtension.CheckSameVideoName
  - name: (
    nameWithType: (
    fullName: (
  - uid: Funique.VideoInfo
    name: VideoInfo
    nameWithType: VideoInfo
    fullName: Funique.VideoInfo
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.VideoInfo[]
  isExternal: true
  name: VideoInfo[]
  nameWithType: VideoInfo[]
  fullName: Funique.VideoInfo[]
  nameWithType.vb: VideoInfo()
  fullName.vb: Funique.VideoInfo()
  name.vb: VideoInfo()
  spec.csharp:
  - uid: Funique.VideoInfo
    name: VideoInfo
    nameWithType: VideoInfo
    fullName: Funique.VideoInfo
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Funique.VideoInfo
    name: VideoInfo
    nameWithType: VideoInfo
    fullName: Funique.VideoInfo
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Funique.IToolVideoInfoExtension.CheckSameVideoName(System.Collections.Generic.List{Funique.VideoInfo},System.String)
  commentId: M:Funique.IToolVideoInfoExtension.CheckSameVideoName(System.Collections.Generic.List{Funique.VideoInfo},System.String)
  parent: Funique.IToolVideoInfoExtension
  isExternal: true
  name: CheckSameVideoName(List<VideoInfo>, String)
  nameWithType: IToolVideoInfoExtension.CheckSameVideoName(List<VideoInfo>, String)
  fullName: Funique.IToolVideoInfoExtension.CheckSameVideoName(System.Collections.Generic.List<Funique.VideoInfo>, System.String)
  nameWithType.vb: IToolVideoInfoExtension.CheckSameVideoName(List(Of VideoInfo), String)
  fullName.vb: Funique.IToolVideoInfoExtension.CheckSameVideoName(System.Collections.Generic.List(Of Funique.VideoInfo), System.String)
  name.vb: CheckSameVideoName(List(Of VideoInfo), String)
  spec.csharp:
  - uid: Funique.IToolVideoInfoExtension.CheckSameVideoName(System.Collections.Generic.List{Funique.VideoInfo},System.String)
    name: CheckSameVideoName
    nameWithType: IToolVideoInfoExtension.CheckSameVideoName
    fullName: Funique.IToolVideoInfoExtension.CheckSameVideoName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Funique.VideoInfo
    name: VideoInfo
    nameWithType: VideoInfo
    fullName: Funique.VideoInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolVideoInfoExtension.CheckSameVideoName(System.Collections.Generic.List{Funique.VideoInfo},System.String)
    name: CheckSameVideoName
    nameWithType: IToolVideoInfoExtension.CheckSameVideoName
    fullName: Funique.IToolVideoInfoExtension.CheckSameVideoName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Funique.VideoInfo
    name: VideoInfo
    nameWithType: VideoInfo
    fullName: Funique.VideoInfo
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Funique.VideoInfo}
  commentId: T:System.Collections.Generic.List{Funique.VideoInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<VideoInfo>
  nameWithType: List<VideoInfo>
  fullName: System.Collections.Generic.List<Funique.VideoInfo>
  nameWithType.vb: List(Of VideoInfo)
  fullName.vb: System.Collections.Generic.List(Of Funique.VideoInfo)
  name.vb: List(Of VideoInfo)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Funique.VideoInfo
    name: VideoInfo
    nameWithType: VideoInfo
    fullName: Funique.VideoInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Funique.VideoInfo
    name: VideoInfo
    nameWithType: VideoInfo
    fullName: Funique.VideoInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Funique.Tool.FilterVideoName*
  commentId: Overload:Funique.Tool.FilterVideoName
  name: FilterVideoName
  nameWithType: Tool.FilterVideoName
  fullName: Funique.Tool.FilterVideoName
- uid: Funique.IToolStringExtension.FilterVideoName(System.String)
  commentId: M:Funique.IToolStringExtension.FilterVideoName(System.String)
  parent: Funique.IToolStringExtension
  isExternal: true
  name: FilterVideoName(String)
  nameWithType: IToolStringExtension.FilterVideoName(String)
  fullName: Funique.IToolStringExtension.FilterVideoName(System.String)
  spec.csharp:
  - uid: Funique.IToolStringExtension.FilterVideoName(System.String)
    name: FilterVideoName
    nameWithType: IToolStringExtension.FilterVideoName
    fullName: Funique.IToolStringExtension.FilterVideoName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolStringExtension.FilterVideoName(System.String)
    name: FilterVideoName
    nameWithType: IToolStringExtension.FilterVideoName
    fullName: Funique.IToolStringExtension.FilterVideoName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Tool.FilterVideoTime*
  commentId: Overload:Funique.Tool.FilterVideoTime
  name: FilterVideoTime
  nameWithType: Tool.FilterVideoTime
  fullName: Funique.Tool.FilterVideoTime
- uid: Funique.IToolStringExtension.FilterVideoTime(System.String)
  commentId: M:Funique.IToolStringExtension.FilterVideoTime(System.String)
  parent: Funique.IToolStringExtension
  isExternal: true
  name: FilterVideoTime(String)
  nameWithType: IToolStringExtension.FilterVideoTime(String)
  fullName: Funique.IToolStringExtension.FilterVideoTime(System.String)
  spec.csharp:
  - uid: Funique.IToolStringExtension.FilterVideoTime(System.String)
    name: FilterVideoTime
    nameWithType: IToolStringExtension.FilterVideoTime
    fullName: Funique.IToolStringExtension.FilterVideoTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolStringExtension.FilterVideoTime(System.String)
    name: FilterVideoTime
    nameWithType: IToolStringExtension.FilterVideoTime
    fullName: Funique.IToolStringExtension.FilterVideoTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Funique.Tool.TranslateTime*
  commentId: Overload:Funique.Tool.TranslateTime
  name: TranslateTime
  nameWithType: Tool.TranslateTime
  fullName: Funique.Tool.TranslateTime
- uid: Funique.IToolStringExtension.TranslateTime(System.String)
  commentId: M:Funique.IToolStringExtension.TranslateTime(System.String)
  parent: Funique.IToolStringExtension
  isExternal: true
  name: TranslateTime(String)
  nameWithType: IToolStringExtension.TranslateTime(String)
  fullName: Funique.IToolStringExtension.TranslateTime(System.String)
  spec.csharp:
  - uid: Funique.IToolStringExtension.TranslateTime(System.String)
    name: TranslateTime
    nameWithType: IToolStringExtension.TranslateTime
    fullName: Funique.IToolStringExtension.TranslateTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolStringExtension.TranslateTime(System.String)
    name: TranslateTime
    nameWithType: IToolStringExtension.TranslateTime
    fullName: Funique.IToolStringExtension.TranslateTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Funique.Tool.FilterBtnName*
  commentId: Overload:Funique.Tool.FilterBtnName
  name: FilterBtnName
  nameWithType: Tool.FilterBtnName
  fullName: Funique.Tool.FilterBtnName
- uid: Funique.IToolStringExtension.FilterBtnName(System.String)
  commentId: M:Funique.IToolStringExtension.FilterBtnName(System.String)
  parent: Funique.IToolStringExtension
  isExternal: true
  name: FilterBtnName(String)
  nameWithType: IToolStringExtension.FilterBtnName(String)
  fullName: Funique.IToolStringExtension.FilterBtnName(System.String)
  spec.csharp:
  - uid: Funique.IToolStringExtension.FilterBtnName(System.String)
    name: FilterBtnName
    nameWithType: IToolStringExtension.FilterBtnName
    fullName: Funique.IToolStringExtension.FilterBtnName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolStringExtension.FilterBtnName(System.String)
    name: FilterBtnName
    nameWithType: IToolStringExtension.FilterBtnName
    fullName: Funique.IToolStringExtension.FilterBtnName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Tool.MergeTime*
  commentId: Overload:Funique.Tool.MergeTime
  name: MergeTime
  nameWithType: Tool.MergeTime
  fullName: Funique.Tool.MergeTime
- uid: Funique.IToolStringExtension.MergeTime(System.String,System.Double)
  commentId: M:Funique.IToolStringExtension.MergeTime(System.String,System.Double)
  parent: Funique.IToolStringExtension
  isExternal: true
  name: MergeTime(String, Double)
  nameWithType: IToolStringExtension.MergeTime(String, Double)
  fullName: Funique.IToolStringExtension.MergeTime(System.String, System.Double)
  spec.csharp:
  - uid: Funique.IToolStringExtension.MergeTime(System.String,System.Double)
    name: MergeTime
    nameWithType: IToolStringExtension.MergeTime
    fullName: Funique.IToolStringExtension.MergeTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolStringExtension.MergeTime(System.String,System.Double)
    name: MergeTime
    nameWithType: IToolStringExtension.MergeTime
    fullName: Funique.IToolStringExtension.MergeTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Tool.DetectStereoMode*
  commentId: Overload:Funique.Tool.DetectStereoMode
  name: DetectStereoMode
  nameWithType: Tool.DetectStereoMode
  fullName: Funique.Tool.DetectStereoMode
- uid: Funique.IToolStringExtension.DetectStereoMode(System.String)
  commentId: M:Funique.IToolStringExtension.DetectStereoMode(System.String)
  parent: Funique.IToolStringExtension
  isExternal: true
  name: DetectStereoMode(String)
  nameWithType: IToolStringExtension.DetectStereoMode(String)
  fullName: Funique.IToolStringExtension.DetectStereoMode(System.String)
  spec.csharp:
  - uid: Funique.IToolStringExtension.DetectStereoMode(System.String)
    name: DetectStereoMode
    nameWithType: IToolStringExtension.DetectStereoMode
    fullName: Funique.IToolStringExtension.DetectStereoMode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolStringExtension.DetectStereoMode(System.String)
    name: DetectStereoMode
    nameWithType: IToolStringExtension.DetectStereoMode
    fullName: Funique.IToolStringExtension.DetectStereoMode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Tool.RandomID*
  commentId: Overload:Funique.Tool.RandomID
  name: RandomID
  nameWithType: Tool.RandomID
  fullName: Funique.Tool.RandomID
- uid: Funique.IToolPlayerInformationExtension.RandomID(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.Int32)
  commentId: M:Funique.IToolPlayerInformationExtension.RandomID(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.Int32)
  parent: Funique.IToolPlayerInformationExtension
  isExternal: true
  name: RandomID(Dictionary<String, PlayerInformation>, Int32)
  nameWithType: IToolPlayerInformationExtension.RandomID(Dictionary<String, PlayerInformation>, Int32)
  fullName: Funique.IToolPlayerInformationExtension.RandomID(System.Collections.Generic.Dictionary<System.String, Funique.PlayerInformation>, System.Int32)
  nameWithType.vb: IToolPlayerInformationExtension.RandomID(Dictionary(Of String, PlayerInformation), Int32)
  fullName.vb: Funique.IToolPlayerInformationExtension.RandomID(System.Collections.Generic.Dictionary(Of System.String, Funique.PlayerInformation), System.Int32)
  name.vb: RandomID(Dictionary(Of String, PlayerInformation), Int32)
  spec.csharp:
  - uid: Funique.IToolPlayerInformationExtension.RandomID(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.Int32)
    name: RandomID
    nameWithType: IToolPlayerInformationExtension.RandomID
    fullName: Funique.IToolPlayerInformationExtension.RandomID
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Funique.PlayerInformation
    name: PlayerInformation
    nameWithType: PlayerInformation
    fullName: Funique.PlayerInformation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolPlayerInformationExtension.RandomID(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.Int32)
    name: RandomID
    nameWithType: IToolPlayerInformationExtension.RandomID
    fullName: Funique.IToolPlayerInformationExtension.RandomID
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Funique.PlayerInformation
    name: PlayerInformation
    nameWithType: PlayerInformation
    fullName: Funique.PlayerInformation
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation}
  commentId: T:System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, PlayerInformation>
  nameWithType: Dictionary<String, PlayerInformation>
  fullName: System.Collections.Generic.Dictionary<System.String, Funique.PlayerInformation>
  nameWithType.vb: Dictionary(Of String, PlayerInformation)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Funique.PlayerInformation)
  name.vb: Dictionary(Of String, PlayerInformation)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Funique.PlayerInformation
    name: PlayerInformation
    nameWithType: PlayerInformation
    fullName: Funique.PlayerInformation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Funique.PlayerInformation
    name: PlayerInformation
    nameWithType: PlayerInformation
    fullName: Funique.PlayerInformation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Tool.RandomIP*
  commentId: Overload:Funique.Tool.RandomIP
  name: RandomIP
  nameWithType: Tool.RandomIP
  fullName: Funique.Tool.RandomIP
- uid: Funique.IToolPlayerInformationExtension.RandomIP(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.Int32)
  commentId: M:Funique.IToolPlayerInformationExtension.RandomIP(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.Int32)
  parent: Funique.IToolPlayerInformationExtension
  isExternal: true
  name: RandomIP(Dictionary<String, PlayerInformation>, Int32)
  nameWithType: IToolPlayerInformationExtension.RandomIP(Dictionary<String, PlayerInformation>, Int32)
  fullName: Funique.IToolPlayerInformationExtension.RandomIP(System.Collections.Generic.Dictionary<System.String, Funique.PlayerInformation>, System.Int32)
  nameWithType.vb: IToolPlayerInformationExtension.RandomIP(Dictionary(Of String, PlayerInformation), Int32)
  fullName.vb: Funique.IToolPlayerInformationExtension.RandomIP(System.Collections.Generic.Dictionary(Of System.String, Funique.PlayerInformation), System.Int32)
  name.vb: RandomIP(Dictionary(Of String, PlayerInformation), Int32)
  spec.csharp:
  - uid: Funique.IToolPlayerInformationExtension.RandomIP(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.Int32)
    name: RandomIP
    nameWithType: IToolPlayerInformationExtension.RandomIP
    fullName: Funique.IToolPlayerInformationExtension.RandomIP
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Funique.PlayerInformation
    name: PlayerInformation
    nameWithType: PlayerInformation
    fullName: Funique.PlayerInformation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolPlayerInformationExtension.RandomIP(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.Int32)
    name: RandomIP
    nameWithType: IToolPlayerInformationExtension.RandomIP
    fullName: Funique.IToolPlayerInformationExtension.RandomIP
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Funique.PlayerInformation
    name: PlayerInformation
    nameWithType: PlayerInformation
    fullName: Funique.PlayerInformation
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Tool.CheckRepeatID*
  commentId: Overload:Funique.Tool.CheckRepeatID
  name: CheckRepeatID
  nameWithType: Tool.CheckRepeatID
  fullName: Funique.Tool.CheckRepeatID
- uid: Funique.IToolPlayerInformationExtension.CheckRepeatID(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.Int32)
  commentId: M:Funique.IToolPlayerInformationExtension.CheckRepeatID(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.Int32)
  parent: Funique.IToolPlayerInformationExtension
  isExternal: true
  name: CheckRepeatID(Dictionary<String, PlayerInformation>, Int32)
  nameWithType: IToolPlayerInformationExtension.CheckRepeatID(Dictionary<String, PlayerInformation>, Int32)
  fullName: Funique.IToolPlayerInformationExtension.CheckRepeatID(System.Collections.Generic.Dictionary<System.String, Funique.PlayerInformation>, System.Int32)
  nameWithType.vb: IToolPlayerInformationExtension.CheckRepeatID(Dictionary(Of String, PlayerInformation), Int32)
  fullName.vb: Funique.IToolPlayerInformationExtension.CheckRepeatID(System.Collections.Generic.Dictionary(Of System.String, Funique.PlayerInformation), System.Int32)
  name.vb: CheckRepeatID(Dictionary(Of String, PlayerInformation), Int32)
  spec.csharp:
  - uid: Funique.IToolPlayerInformationExtension.CheckRepeatID(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.Int32)
    name: CheckRepeatID
    nameWithType: IToolPlayerInformationExtension.CheckRepeatID
    fullName: Funique.IToolPlayerInformationExtension.CheckRepeatID
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Funique.PlayerInformation
    name: PlayerInformation
    nameWithType: PlayerInformation
    fullName: Funique.PlayerInformation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolPlayerInformationExtension.CheckRepeatID(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.Int32)
    name: CheckRepeatID
    nameWithType: IToolPlayerInformationExtension.CheckRepeatID
    fullName: Funique.IToolPlayerInformationExtension.CheckRepeatID
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Funique.PlayerInformation
    name: PlayerInformation
    nameWithType: PlayerInformation
    fullName: Funique.PlayerInformation
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Tool.CheckRepeatIP*
  commentId: Overload:Funique.Tool.CheckRepeatIP
  name: CheckRepeatIP
  nameWithType: Tool.CheckRepeatIP
  fullName: Funique.Tool.CheckRepeatIP
- uid: Funique.IToolPlayerInformationExtension.CheckRepeatIP(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.String)
  commentId: M:Funique.IToolPlayerInformationExtension.CheckRepeatIP(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.String)
  parent: Funique.IToolPlayerInformationExtension
  isExternal: true
  name: CheckRepeatIP(Dictionary<String, PlayerInformation>, String)
  nameWithType: IToolPlayerInformationExtension.CheckRepeatIP(Dictionary<String, PlayerInformation>, String)
  fullName: Funique.IToolPlayerInformationExtension.CheckRepeatIP(System.Collections.Generic.Dictionary<System.String, Funique.PlayerInformation>, System.String)
  nameWithType.vb: IToolPlayerInformationExtension.CheckRepeatIP(Dictionary(Of String, PlayerInformation), String)
  fullName.vb: Funique.IToolPlayerInformationExtension.CheckRepeatIP(System.Collections.Generic.Dictionary(Of System.String, Funique.PlayerInformation), System.String)
  name.vb: CheckRepeatIP(Dictionary(Of String, PlayerInformation), String)
  spec.csharp:
  - uid: Funique.IToolPlayerInformationExtension.CheckRepeatIP(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.String)
    name: CheckRepeatIP
    nameWithType: IToolPlayerInformationExtension.CheckRepeatIP
    fullName: Funique.IToolPlayerInformationExtension.CheckRepeatIP
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Funique.PlayerInformation
    name: PlayerInformation
    nameWithType: PlayerInformation
    fullName: Funique.PlayerInformation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolPlayerInformationExtension.CheckRepeatIP(System.Collections.Generic.Dictionary{System.String,Funique.PlayerInformation},System.String)
    name: CheckRepeatIP
    nameWithType: IToolPlayerInformationExtension.CheckRepeatIP
    fullName: Funique.IToolPlayerInformationExtension.CheckRepeatIP
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Funique.PlayerInformation
    name: PlayerInformation
    nameWithType: PlayerInformation
    fullName: Funique.PlayerInformation
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Tool.CheckRaycast*
  commentId: Overload:Funique.Tool.CheckRaycast
  name: CheckRaycast
  nameWithType: Tool.CheckRaycast
  fullName: Funique.Tool.CheckRaycast
- uid: Funique.IToolUtility.CheckRaycast(System.String)
  commentId: M:Funique.IToolUtility.CheckRaycast(System.String)
  parent: Funique.IToolUtility
  isExternal: true
  name: CheckRaycast(String)
  nameWithType: IToolUtility.CheckRaycast(String)
  fullName: Funique.IToolUtility.CheckRaycast(System.String)
  spec.csharp:
  - uid: Funique.IToolUtility.CheckRaycast(System.String)
    name: CheckRaycast
    nameWithType: IToolUtility.CheckRaycast
    fullName: Funique.IToolUtility.CheckRaycast
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolUtility.CheckRaycast(System.String)
    name: CheckRaycast
    nameWithType: IToolUtility.CheckRaycast
    fullName: Funique.IToolUtility.CheckRaycast
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Tool.MoveListItem*
  commentId: Overload:Funique.Tool.MoveListItem
  name: MoveListItem
  nameWithType: Tool.MoveListItem
  fullName: Funique.Tool.MoveListItem
- uid: Funique.IToolUtility.MoveListItem``1(System.Collections.Generic.IList{{T}},System.Int32,System.Int32)
  commentId: M:Funique.IToolUtility.MoveListItem``1(System.Collections.Generic.IList{``0},System.Int32,System.Int32)
  parent: Funique.IToolUtility
  definition: Funique.IToolUtility.MoveListItem``1(System.Collections.Generic.IList{``0},System.Int32,System.Int32)
  name: MoveListItem<T>(IList<T>, Int32, Int32)
  nameWithType: IToolUtility.MoveListItem<T>(IList<T>, Int32, Int32)
  fullName: Funique.IToolUtility.MoveListItem<T>(System.Collections.Generic.IList<T>, System.Int32, System.Int32)
  nameWithType.vb: IToolUtility.MoveListItem(Of T)(IList(Of T), Int32, Int32)
  fullName.vb: Funique.IToolUtility.MoveListItem(Of T)(System.Collections.Generic.IList(Of T), System.Int32, System.Int32)
  name.vb: MoveListItem(Of T)(IList(Of T), Int32, Int32)
  spec.csharp:
  - uid: Funique.IToolUtility.MoveListItem``1(System.Collections.Generic.IList{``0},System.Int32,System.Int32)
    name: MoveListItem<T>
    nameWithType: IToolUtility.MoveListItem<T>
    fullName: Funique.IToolUtility.MoveListItem<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolUtility.MoveListItem``1(System.Collections.Generic.IList{``0},System.Int32,System.Int32)
    name: MoveListItem(Of T)
    nameWithType: IToolUtility.MoveListItem(Of T)
    fullName: Funique.IToolUtility.MoveListItem(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{{T}}
  commentId: T:System.Collections.Generic.IList{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.IToolUtility.MoveListItem``1(System.Collections.Generic.IList{``0},System.Int32,System.Int32)
  commentId: M:Funique.IToolUtility.MoveListItem``1(System.Collections.Generic.IList{``0},System.Int32,System.Int32)
  isExternal: true
  name: MoveListItem<T>(IList<T>, Int32, Int32)
  nameWithType: IToolUtility.MoveListItem<T>(IList<T>, Int32, Int32)
  fullName: Funique.IToolUtility.MoveListItem<T>(System.Collections.Generic.IList<T>, System.Int32, System.Int32)
  nameWithType.vb: IToolUtility.MoveListItem(Of T)(IList(Of T), Int32, Int32)
  fullName.vb: Funique.IToolUtility.MoveListItem(Of T)(System.Collections.Generic.IList(Of T), System.Int32, System.Int32)
  name.vb: MoveListItem(Of T)(IList(Of T), Int32, Int32)
  spec.csharp:
  - uid: Funique.IToolUtility.MoveListItem``1(System.Collections.Generic.IList{``0},System.Int32,System.Int32)
    name: MoveListItem<T>
    nameWithType: IToolUtility.MoveListItem<T>
    fullName: Funique.IToolUtility.MoveListItem<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolUtility.MoveListItem``1(System.Collections.Generic.IList{``0},System.Int32,System.Int32)
    name: MoveListItem(Of T)
    nameWithType: IToolUtility.MoveListItem(Of T)
    fullName: Funique.IToolUtility.MoveListItem(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Tool.GetMenuUIPosition*
  commentId: Overload:Funique.Tool.GetMenuUIPosition
  name: GetMenuUIPosition
  nameWithType: Tool.GetMenuUIPosition
  fullName: Funique.Tool.GetMenuUIPosition
- uid: Funique.IToolUtility.GetMenuUIPosition(UnityEngine.Transform,UnityEngine.Vector2)
  commentId: M:Funique.IToolUtility.GetMenuUIPosition(UnityEngine.Transform,UnityEngine.Vector2)
  parent: Funique.IToolUtility
  isExternal: true
  name: GetMenuUIPosition(Transform, Vector2)
  nameWithType: IToolUtility.GetMenuUIPosition(Transform, Vector2)
  fullName: Funique.IToolUtility.GetMenuUIPosition(UnityEngine.Transform, UnityEngine.Vector2)
  spec.csharp:
  - uid: Funique.IToolUtility.GetMenuUIPosition(UnityEngine.Transform,UnityEngine.Vector2)
    name: GetMenuUIPosition
    nameWithType: IToolUtility.GetMenuUIPosition
    fullName: Funique.IToolUtility.GetMenuUIPosition
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: UnityEngine.Vector2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolUtility.GetMenuUIPosition(UnityEngine.Transform,UnityEngine.Vector2)
    name: GetMenuUIPosition
    nameWithType: IToolUtility.GetMenuUIPosition
    fullName: Funique.IToolUtility.GetMenuUIPosition
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: UnityEngine.Vector2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Transform
  commentId: T:UnityEngine.Transform
  parent: UnityEngine
  isExternal: true
  name: Transform
  nameWithType: Transform
  fullName: UnityEngine.Transform
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: UnityEngine.Vector3
  commentId: T:UnityEngine.Vector3
  parent: UnityEngine
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: UnityEngine.Vector3
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Funique.Tool.DetectInWindows*
  commentId: Overload:Funique.Tool.DetectInWindows
  name: DetectInWindows
  nameWithType: Tool.DetectInWindows
  fullName: Funique.Tool.DetectInWindows
- uid: UnityEngine.RectTransform
  commentId: T:UnityEngine.RectTransform
  parent: UnityEngine
  isExternal: true
  name: RectTransform
  nameWithType: RectTransform
  fullName: UnityEngine.RectTransform
- uid: Funique.Tool.GetSelfIPAddress*
  commentId: Overload:Funique.Tool.GetSelfIPAddress
  name: GetSelfIPAddress
  nameWithType: Tool.GetSelfIPAddress
  fullName: Funique.Tool.GetSelfIPAddress
- uid: Funique.IToolUtility.GetSelfIPAddress
  commentId: M:Funique.IToolUtility.GetSelfIPAddress
  parent: Funique.IToolUtility
  name: GetSelfIPAddress()
  nameWithType: IToolUtility.GetSelfIPAddress()
  fullName: Funique.IToolUtility.GetSelfIPAddress()
  spec.csharp:
  - uid: Funique.IToolUtility.GetSelfIPAddress
    name: GetSelfIPAddress
    nameWithType: IToolUtility.GetSelfIPAddress
    fullName: Funique.IToolUtility.GetSelfIPAddress
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolUtility.GetSelfIPAddress
    name: GetSelfIPAddress
    nameWithType: IToolUtility.GetSelfIPAddress
    fullName: Funique.IToolUtility.GetSelfIPAddress
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Tool.AddBtnEvent*
  commentId: Overload:Funique.Tool.AddBtnEvent
  name: AddBtnEvent
  nameWithType: Tool.AddBtnEvent
  fullName: Funique.Tool.AddBtnEvent
- uid: Funique.IToolUtility.AddBtnEvent(UnityEngine.GameObject,UnityEngine.Events.UnityAction,UnityEngine.EventSystems.EventTriggerType)
  commentId: M:Funique.IToolUtility.AddBtnEvent(UnityEngine.GameObject,UnityEngine.Events.UnityAction,UnityEngine.EventSystems.EventTriggerType)
  parent: Funique.IToolUtility
  isExternal: true
  name: AddBtnEvent(GameObject, UnityAction, EventTriggerType)
  nameWithType: IToolUtility.AddBtnEvent(GameObject, UnityAction, EventTriggerType)
  fullName: Funique.IToolUtility.AddBtnEvent(UnityEngine.GameObject, UnityEngine.Events.UnityAction, UnityEngine.EventSystems.EventTriggerType)
  spec.csharp:
  - uid: Funique.IToolUtility.AddBtnEvent(UnityEngine.GameObject,UnityEngine.Events.UnityAction,UnityEngine.EventSystems.EventTriggerType)
    name: AddBtnEvent
    nameWithType: IToolUtility.AddBtnEvent
    fullName: Funique.IToolUtility.AddBtnEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Events.UnityAction
    name: UnityAction
    nameWithType: UnityAction
    fullName: UnityEngine.Events.UnityAction
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.EventSystems.EventTriggerType
    name: EventTriggerType
    nameWithType: EventTriggerType
    fullName: UnityEngine.EventSystems.EventTriggerType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolUtility.AddBtnEvent(UnityEngine.GameObject,UnityEngine.Events.UnityAction,UnityEngine.EventSystems.EventTriggerType)
    name: AddBtnEvent
    nameWithType: IToolUtility.AddBtnEvent
    fullName: Funique.IToolUtility.AddBtnEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Events.UnityAction
    name: UnityAction
    nameWithType: UnityAction
    fullName: UnityEngine.Events.UnityAction
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.EventSystems.EventTriggerType
    name: EventTriggerType
    nameWithType: EventTriggerType
    fullName: UnityEngine.EventSystems.EventTriggerType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: UnityEngine.Events.UnityAction
  commentId: T:UnityEngine.Events.UnityAction
  parent: UnityEngine.Events
  isExternal: true
  name: UnityAction
  nameWithType: UnityAction
  fullName: UnityEngine.Events.UnityAction
- uid: UnityEngine.EventSystems.EventTriggerType
  commentId: T:UnityEngine.EventSystems.EventTriggerType
  parent: UnityEngine.EventSystems
  isExternal: true
  name: EventTriggerType
  nameWithType: EventTriggerType
  fullName: UnityEngine.EventSystems.EventTriggerType
- uid: UnityEngine.Events
  commentId: N:UnityEngine.Events
  isExternal: true
  name: UnityEngine.Events
  nameWithType: UnityEngine.Events
  fullName: UnityEngine.Events
- uid: UnityEngine.EventSystems
  commentId: N:UnityEngine.EventSystems
  isExternal: true
  name: UnityEngine.EventSystems
  nameWithType: UnityEngine.EventSystems
  fullName: UnityEngine.EventSystems
- uid: Funique.IToolUtility.AddBtnEvent``1(UnityEngine.GameObject,UnityEngine.Events.UnityAction{{T}},{T},UnityEngine.EventSystems.EventTriggerType)
  commentId: M:Funique.IToolUtility.AddBtnEvent``1(UnityEngine.GameObject,UnityEngine.Events.UnityAction{``0},``0,UnityEngine.EventSystems.EventTriggerType)
  parent: Funique.IToolUtility
  definition: Funique.IToolUtility.AddBtnEvent``1(UnityEngine.GameObject,UnityEngine.Events.UnityAction{``0},``0,UnityEngine.EventSystems.EventTriggerType)
  name: AddBtnEvent<T>(GameObject, UnityAction<T>, T, EventTriggerType)
  nameWithType: IToolUtility.AddBtnEvent<T>(GameObject, UnityAction<T>, T, EventTriggerType)
  fullName: Funique.IToolUtility.AddBtnEvent<T>(UnityEngine.GameObject, UnityEngine.Events.UnityAction<T>, T, UnityEngine.EventSystems.EventTriggerType)
  nameWithType.vb: IToolUtility.AddBtnEvent(Of T)(GameObject, UnityAction(Of T), T, EventTriggerType)
  fullName.vb: Funique.IToolUtility.AddBtnEvent(Of T)(UnityEngine.GameObject, UnityEngine.Events.UnityAction(Of T), T, UnityEngine.EventSystems.EventTriggerType)
  name.vb: AddBtnEvent(Of T)(GameObject, UnityAction(Of T), T, EventTriggerType)
  spec.csharp:
  - uid: Funique.IToolUtility.AddBtnEvent``1(UnityEngine.GameObject,UnityEngine.Events.UnityAction{``0},``0,UnityEngine.EventSystems.EventTriggerType)
    name: AddBtnEvent<T>
    nameWithType: IToolUtility.AddBtnEvent<T>
    fullName: Funique.IToolUtility.AddBtnEvent<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Events.UnityAction`1
    name: UnityAction
    nameWithType: UnityAction
    fullName: UnityEngine.Events.UnityAction
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.EventSystems.EventTriggerType
    name: EventTriggerType
    nameWithType: EventTriggerType
    fullName: UnityEngine.EventSystems.EventTriggerType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolUtility.AddBtnEvent``1(UnityEngine.GameObject,UnityEngine.Events.UnityAction{``0},``0,UnityEngine.EventSystems.EventTriggerType)
    name: AddBtnEvent(Of T)
    nameWithType: IToolUtility.AddBtnEvent(Of T)
    fullName: Funique.IToolUtility.AddBtnEvent(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Events.UnityAction`1
    name: UnityAction
    nameWithType: UnityAction
    fullName: UnityEngine.Events.UnityAction
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.EventSystems.EventTriggerType
    name: EventTriggerType
    nameWithType: EventTriggerType
    fullName: UnityEngine.EventSystems.EventTriggerType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Events.UnityAction{{T}}
  commentId: T:UnityEngine.Events.UnityAction{``0}
  parent: UnityEngine.Events
  definition: UnityEngine.Events.UnityAction`1
  name: UnityAction<T>
  nameWithType: UnityAction<T>
  fullName: UnityEngine.Events.UnityAction<T>
  nameWithType.vb: UnityAction(Of T)
  fullName.vb: UnityEngine.Events.UnityAction(Of T)
  name.vb: UnityAction(Of T)
  spec.csharp:
  - uid: UnityEngine.Events.UnityAction`1
    name: UnityAction
    nameWithType: UnityAction
    fullName: UnityEngine.Events.UnityAction
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: UnityEngine.Events.UnityAction`1
    name: UnityAction
    nameWithType: UnityAction
    fullName: UnityEngine.Events.UnityAction
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: Funique.IToolUtility.AddBtnEvent``1(UnityEngine.GameObject,UnityEngine.Events.UnityAction{``0},``0,UnityEngine.EventSystems.EventTriggerType)
  commentId: M:Funique.IToolUtility.AddBtnEvent``1(UnityEngine.GameObject,UnityEngine.Events.UnityAction{``0},``0,UnityEngine.EventSystems.EventTriggerType)
  isExternal: true
  name: AddBtnEvent<T>(GameObject, UnityAction<T>, T, EventTriggerType)
  nameWithType: IToolUtility.AddBtnEvent<T>(GameObject, UnityAction<T>, T, EventTriggerType)
  fullName: Funique.IToolUtility.AddBtnEvent<T>(UnityEngine.GameObject, UnityEngine.Events.UnityAction<T>, T, UnityEngine.EventSystems.EventTriggerType)
  nameWithType.vb: IToolUtility.AddBtnEvent(Of T)(GameObject, UnityAction(Of T), T, EventTriggerType)
  fullName.vb: Funique.IToolUtility.AddBtnEvent(Of T)(UnityEngine.GameObject, UnityEngine.Events.UnityAction(Of T), T, UnityEngine.EventSystems.EventTriggerType)
  name.vb: AddBtnEvent(Of T)(GameObject, UnityAction(Of T), T, EventTriggerType)
  spec.csharp:
  - uid: Funique.IToolUtility.AddBtnEvent``1(UnityEngine.GameObject,UnityEngine.Events.UnityAction{``0},``0,UnityEngine.EventSystems.EventTriggerType)
    name: AddBtnEvent<T>
    nameWithType: IToolUtility.AddBtnEvent<T>
    fullName: Funique.IToolUtility.AddBtnEvent<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Events.UnityAction`1
    name: UnityAction
    nameWithType: UnityAction
    fullName: UnityEngine.Events.UnityAction
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.EventSystems.EventTriggerType
    name: EventTriggerType
    nameWithType: EventTriggerType
    fullName: UnityEngine.EventSystems.EventTriggerType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolUtility.AddBtnEvent``1(UnityEngine.GameObject,UnityEngine.Events.UnityAction{``0},``0,UnityEngine.EventSystems.EventTriggerType)
    name: AddBtnEvent(Of T)
    nameWithType: IToolUtility.AddBtnEvent(Of T)
    fullName: Funique.IToolUtility.AddBtnEvent(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Events.UnityAction`1
    name: UnityAction
    nameWithType: UnityAction
    fullName: UnityEngine.Events.UnityAction
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.EventSystems.EventTriggerType
    name: EventTriggerType
    nameWithType: EventTriggerType
    fullName: UnityEngine.EventSystems.EventTriggerType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Events.UnityAction`1
  commentId: T:UnityEngine.Events.UnityAction`1
  isExternal: true
  name: UnityAction<T0>
  nameWithType: UnityAction<T0>
  fullName: UnityEngine.Events.UnityAction<T0>
  nameWithType.vb: UnityAction(Of T0)
  fullName.vb: UnityEngine.Events.UnityAction(Of T0)
  name.vb: UnityAction(Of T0)
  spec.csharp:
  - uid: UnityEngine.Events.UnityAction`1
    name: UnityAction
    nameWithType: UnityAction
    fullName: UnityEngine.Events.UnityAction
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T0
    nameWithType: T0
    fullName: T0
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: UnityEngine.Events.UnityAction`1
    name: UnityAction
    nameWithType: UnityAction
    fullName: UnityEngine.Events.UnityAction
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T0
    nameWithType: T0
    fullName: T0
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Funique.Tool.TextureCompression*
  commentId: Overload:Funique.Tool.TextureCompression
  name: TextureCompression
  nameWithType: Tool.TextureCompression
  fullName: Funique.Tool.TextureCompression
- uid: Funique.IToolUtility.TextureCompression(UnityEngine.Texture2D,System.Single)
  commentId: M:Funique.IToolUtility.TextureCompression(UnityEngine.Texture2D,System.Single)
  parent: Funique.IToolUtility
  isExternal: true
  name: TextureCompression(Texture2D, Single)
  nameWithType: IToolUtility.TextureCompression(Texture2D, Single)
  fullName: Funique.IToolUtility.TextureCompression(UnityEngine.Texture2D, System.Single)
  spec.csharp:
  - uid: Funique.IToolUtility.TextureCompression(UnityEngine.Texture2D,System.Single)
    name: TextureCompression
    nameWithType: IToolUtility.TextureCompression
    fullName: Funique.IToolUtility.TextureCompression
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Texture2D
    name: Texture2D
    nameWithType: Texture2D
    fullName: UnityEngine.Texture2D
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolUtility.TextureCompression(UnityEngine.Texture2D,System.Single)
    name: TextureCompression
    nameWithType: IToolUtility.TextureCompression
    fullName: Funique.IToolUtility.TextureCompression
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Texture2D
    name: Texture2D
    nameWithType: Texture2D
    fullName: UnityEngine.Texture2D
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Texture2D
  commentId: T:UnityEngine.Texture2D
  parent: UnityEngine
  isExternal: true
  name: Texture2D
  nameWithType: Texture2D
  fullName: UnityEngine.Texture2D
- uid: Funique.Tool.ObjShowInHMD*
  commentId: Overload:Funique.Tool.ObjShowInHMD
  name: ObjShowInHMD
  nameWithType: Tool.ObjShowInHMD
  fullName: Funique.Tool.ObjShowInHMD
- uid: Funique.IToolUtility.ObjShowInHMD(UnityEngine.Transform,UnityEngine.Transform,System.Single,System.Single)
  commentId: M:Funique.IToolUtility.ObjShowInHMD(UnityEngine.Transform,UnityEngine.Transform,System.Single,System.Single)
  parent: Funique.IToolUtility
  isExternal: true
  name: ObjShowInHMD(Transform, Transform, Single, Single)
  nameWithType: IToolUtility.ObjShowInHMD(Transform, Transform, Single, Single)
  fullName: Funique.IToolUtility.ObjShowInHMD(UnityEngine.Transform, UnityEngine.Transform, System.Single, System.Single)
  spec.csharp:
  - uid: Funique.IToolUtility.ObjShowInHMD(UnityEngine.Transform,UnityEngine.Transform,System.Single,System.Single)
    name: ObjShowInHMD
    nameWithType: IToolUtility.ObjShowInHMD
    fullName: Funique.IToolUtility.ObjShowInHMD
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolUtility.ObjShowInHMD(UnityEngine.Transform,UnityEngine.Transform,System.Single,System.Single)
    name: ObjShowInHMD
    nameWithType: IToolUtility.ObjShowInHMD
    fullName: Funique.IToolUtility.ObjShowInHMD
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Tool.ReadImg*
  commentId: Overload:Funique.Tool.ReadImg
  name: ReadImg
  nameWithType: Tool.ReadImg
  fullName: Funique.Tool.ReadImg
- uid: Funique.IToolUtility.ReadImg(System.String)
  commentId: M:Funique.IToolUtility.ReadImg(System.String)
  parent: Funique.IToolUtility
  isExternal: true
  name: ReadImg(String)
  nameWithType: IToolUtility.ReadImg(String)
  fullName: Funique.IToolUtility.ReadImg(System.String)
  spec.csharp:
  - uid: Funique.IToolUtility.ReadImg(System.String)
    name: ReadImg
    nameWithType: IToolUtility.ReadImg
    fullName: Funique.IToolUtility.ReadImg
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolUtility.ReadImg(System.String)
    name: ReadImg
    nameWithType: IToolUtility.ReadImg
    fullName: Funique.IToolUtility.ReadImg
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Sprite
  commentId: T:UnityEngine.Sprite
  parent: UnityEngine
  isExternal: true
  name: Sprite
  nameWithType: Sprite
  fullName: UnityEngine.Sprite
- uid: Funique.Tool.ReadTexture*
  commentId: Overload:Funique.Tool.ReadTexture
  name: ReadTexture
  nameWithType: Tool.ReadTexture
  fullName: Funique.Tool.ReadTexture
- uid: Funique.IToolUtility.ReadTexture(System.String,System.String)
  commentId: M:Funique.IToolUtility.ReadTexture(System.String,System.String)
  parent: Funique.IToolUtility
  isExternal: true
  name: ReadTexture(String, String)
  nameWithType: IToolUtility.ReadTexture(String, String)
  fullName: Funique.IToolUtility.ReadTexture(System.String, System.String)
  spec.csharp:
  - uid: Funique.IToolUtility.ReadTexture(System.String,System.String)
    name: ReadTexture
    nameWithType: IToolUtility.ReadTexture
    fullName: Funique.IToolUtility.ReadTexture
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolUtility.ReadTexture(System.String,System.String)
    name: ReadTexture
    nameWithType: IToolUtility.ReadTexture
    fullName: Funique.IToolUtility.ReadTexture
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Tool.FFmpeg*
  commentId: Overload:Funique.Tool.FFmpeg
  name: FFmpeg
  nameWithType: Tool.FFmpeg
  fullName: Funique.Tool.FFmpeg
- uid: Funique.Tool.FFmpegSetVideoInfo*
  commentId: Overload:Funique.Tool.FFmpegSetVideoInfo
  name: FFmpegSetVideoInfo
  nameWithType: Tool.FFmpegSetVideoInfo
  fullName: Funique.Tool.FFmpegSetVideoInfo
- uid: Funique.IToolUtility.FFmpegSetVideoInfo(Funique.VideoInfo@)
  commentId: M:Funique.IToolUtility.FFmpegSetVideoInfo(Funique.VideoInfo@)
  parent: Funique.IToolUtility
  name: FFmpegSetVideoInfo(VideoInfo)
  nameWithType: IToolUtility.FFmpegSetVideoInfo(VideoInfo)
  fullName: Funique.IToolUtility.FFmpegSetVideoInfo(Funique.VideoInfo)
  spec.csharp:
  - uid: Funique.IToolUtility.FFmpegSetVideoInfo(Funique.VideoInfo@)
    name: FFmpegSetVideoInfo
    nameWithType: IToolUtility.FFmpegSetVideoInfo
    fullName: Funique.IToolUtility.FFmpegSetVideoInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: Funique.VideoInfo
    name: VideoInfo
    nameWithType: VideoInfo
    fullName: Funique.VideoInfo
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolUtility.FFmpegSetVideoInfo(Funique.VideoInfo@)
    name: FFmpegSetVideoInfo
    nameWithType: IToolUtility.FFmpegSetVideoInfo
    fullName: Funique.IToolUtility.FFmpegSetVideoInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: Funique.VideoInfo
    name: VideoInfo
    nameWithType: VideoInfo
    fullName: Funique.VideoInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.VideoInfo
  commentId: T:Funique.VideoInfo
  parent: Funique
  name: VideoInfo
  nameWithType: VideoInfo
  fullName: Funique.VideoInfo
- uid: Funique.Tool.FFmpegDurationTime*
  commentId: Overload:Funique.Tool.FFmpegDurationTime
  name: FFmpegDurationTime
  nameWithType: Tool.FFmpegDurationTime
  fullName: Funique.Tool.FFmpegDurationTime
- uid: Funique.IToolUtility.FFmpegDurationTime(System.String)
  commentId: M:Funique.IToolUtility.FFmpegDurationTime(System.String)
  parent: Funique.IToolUtility
  isExternal: true
  name: FFmpegDurationTime(String)
  nameWithType: IToolUtility.FFmpegDurationTime(String)
  fullName: Funique.IToolUtility.FFmpegDurationTime(System.String)
  spec.csharp:
  - uid: Funique.IToolUtility.FFmpegDurationTime(System.String)
    name: FFmpegDurationTime
    nameWithType: IToolUtility.FFmpegDurationTime
    fullName: Funique.IToolUtility.FFmpegDurationTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolUtility.FFmpegDurationTime(System.String)
    name: FFmpegDurationTime
    nameWithType: IToolUtility.FFmpegDurationTime
    fullName: Funique.IToolUtility.FFmpegDurationTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Tool.FFmpegAudioChannel*
  commentId: Overload:Funique.Tool.FFmpegAudioChannel
  name: FFmpegAudioChannel
  nameWithType: Tool.FFmpegAudioChannel
  fullName: Funique.Tool.FFmpegAudioChannel
- uid: Funique.IToolUtility.FFmpegAudioChannel(System.String)
  commentId: M:Funique.IToolUtility.FFmpegAudioChannel(System.String)
  parent: Funique.IToolUtility
  isExternal: true
  name: FFmpegAudioChannel(String)
  nameWithType: IToolUtility.FFmpegAudioChannel(String)
  fullName: Funique.IToolUtility.FFmpegAudioChannel(System.String)
  spec.csharp:
  - uid: Funique.IToolUtility.FFmpegAudioChannel(System.String)
    name: FFmpegAudioChannel
    nameWithType: IToolUtility.FFmpegAudioChannel
    fullName: Funique.IToolUtility.FFmpegAudioChannel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolUtility.FFmpegAudioChannel(System.String)
    name: FFmpegAudioChannel
    nameWithType: IToolUtility.FFmpegAudioChannel
    fullName: Funique.IToolUtility.FFmpegAudioChannel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Tool.FileSearch*
  commentId: Overload:Funique.Tool.FileSearch
  name: FileSearch
  nameWithType: Tool.FileSearch
  fullName: Funique.Tool.FileSearch
- uid: Funique.IToolUtility.FileSearch(System.String,System.String)
  commentId: M:Funique.IToolUtility.FileSearch(System.String,System.String)
  parent: Funique.IToolUtility
  isExternal: true
  name: FileSearch(String, String)
  nameWithType: IToolUtility.FileSearch(String, String)
  fullName: Funique.IToolUtility.FileSearch(System.String, System.String)
  spec.csharp:
  - uid: Funique.IToolUtility.FileSearch(System.String,System.String)
    name: FileSearch
    nameWithType: IToolUtility.FileSearch
    fullName: Funique.IToolUtility.FileSearch
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolUtility.FileSearch(System.String,System.String)
    name: FileSearch
    nameWithType: IToolUtility.FileSearch
    fullName: Funique.IToolUtility.FileSearch
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.IToolUtility.FileSearch(System.String,System.String,System.String@)
  commentId: M:Funique.IToolUtility.FileSearch(System.String,System.String,System.String@)
  parent: Funique.IToolUtility
  isExternal: true
  name: FileSearch(String, String, String)
  nameWithType: IToolUtility.FileSearch(String, String, String)
  fullName: Funique.IToolUtility.FileSearch(System.String, System.String, System.String)
  spec.csharp:
  - uid: Funique.IToolUtility.FileSearch(System.String,System.String,System.String@)
    name: FileSearch
    nameWithType: IToolUtility.FileSearch
    fullName: Funique.IToolUtility.FileSearch
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolUtility.FileSearch(System.String,System.String,System.String@)
    name: FileSearch
    nameWithType: IToolUtility.FileSearch
    fullName: Funique.IToolUtility.FileSearch
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Tool.ResetCalculation*
  commentId: Overload:Funique.Tool.ResetCalculation
  name: ResetCalculation
  nameWithType: Tool.ResetCalculation
  fullName: Funique.Tool.ResetCalculation
- uid: Funique.IToolUtility.ResetCalculation(UnityEngine.GameObject,System.Single)
  commentId: M:Funique.IToolUtility.ResetCalculation(UnityEngine.GameObject,System.Single)
  parent: Funique.IToolUtility
  isExternal: true
  name: ResetCalculation(GameObject, Single)
  nameWithType: IToolUtility.ResetCalculation(GameObject, Single)
  fullName: Funique.IToolUtility.ResetCalculation(UnityEngine.GameObject, System.Single)
  spec.csharp:
  - uid: Funique.IToolUtility.ResetCalculation(UnityEngine.GameObject,System.Single)
    name: ResetCalculation
    nameWithType: IToolUtility.ResetCalculation
    fullName: Funique.IToolUtility.ResetCalculation
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolUtility.ResetCalculation(UnityEngine.GameObject,System.Single)
    name: ResetCalculation
    nameWithType: IToolUtility.ResetCalculation
    fullName: Funique.IToolUtility.ResetCalculation
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Tool.GetIPRange*
  commentId: Overload:Funique.Tool.GetIPRange
  name: GetIPRange
  nameWithType: Tool.GetIPRange
  fullName: Funique.Tool.GetIPRange
- uid: Funique.IToolUtility.GetIPRange(System.Net.IPAddress,System.Net.IPAddress,System.Int32)
  commentId: M:Funique.IToolUtility.GetIPRange(System.Net.IPAddress,System.Net.IPAddress,System.Int32)
  parent: Funique.IToolUtility
  isExternal: true
  name: GetIPRange(IPAddress, IPAddress, Int32)
  nameWithType: IToolUtility.GetIPRange(IPAddress, IPAddress, Int32)
  fullName: Funique.IToolUtility.GetIPRange(System.Net.IPAddress, System.Net.IPAddress, System.Int32)
  spec.csharp:
  - uid: Funique.IToolUtility.GetIPRange(System.Net.IPAddress,System.Net.IPAddress,System.Int32)
    name: GetIPRange
    nameWithType: IToolUtility.GetIPRange
    fullName: Funique.IToolUtility.GetIPRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.IPAddress
    name: IPAddress
    nameWithType: IPAddress
    fullName: System.Net.IPAddress
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.IPAddress
    name: IPAddress
    nameWithType: IPAddress
    fullName: System.Net.IPAddress
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolUtility.GetIPRange(System.Net.IPAddress,System.Net.IPAddress,System.Int32)
    name: GetIPRange
    nameWithType: IToolUtility.GetIPRange
    fullName: Funique.IToolUtility.GetIPRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.IPAddress
    name: IPAddress
    nameWithType: IPAddress
    fullName: System.Net.IPAddress
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.IPAddress
    name: IPAddress
    nameWithType: IPAddress
    fullName: System.Net.IPAddress
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.IPAddress
  commentId: T:System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Net.IPAddress[]
  isExternal: true
  name: IPAddress[]
  nameWithType: IPAddress[]
  fullName: System.Net.IPAddress[]
  nameWithType.vb: IPAddress()
  fullName.vb: System.Net.IPAddress()
  name.vb: IPAddress()
  spec.csharp:
  - uid: System.Net.IPAddress
    name: IPAddress
    nameWithType: IPAddress
    fullName: System.Net.IPAddress
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Net.IPAddress
    name: IPAddress
    nameWithType: IPAddress
    fullName: System.Net.IPAddress
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: Funique.IToolUtility.DetectInWindows(UnityEngine.GameObject)
  commentId: M:Funique.IToolUtility.DetectInWindows(UnityEngine.GameObject)
  parent: Funique.IToolUtility
  isExternal: true
  name: DetectInWindows(GameObject)
  nameWithType: IToolUtility.DetectInWindows(GameObject)
  fullName: Funique.IToolUtility.DetectInWindows(UnityEngine.GameObject)
  spec.csharp:
  - uid: Funique.IToolUtility.DetectInWindows(UnityEngine.GameObject)
    name: DetectInWindows
    nameWithType: IToolUtility.DetectInWindows
    fullName: Funique.IToolUtility.DetectInWindows
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolUtility.DetectInWindows(UnityEngine.GameObject)
    name: DetectInWindows
    nameWithType: IToolUtility.DetectInWindows
    fullName: Funique.IToolUtility.DetectInWindows
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.IToolUtility.ReadTexture(System.String,UnityEngine.Texture2D@)
  commentId: M:Funique.IToolUtility.ReadTexture(System.String,UnityEngine.Texture2D@)
  parent: Funique.IToolUtility
  isExternal: true
  name: ReadTexture(String, Texture2D)
  nameWithType: IToolUtility.ReadTexture(String, Texture2D)
  fullName: Funique.IToolUtility.ReadTexture(System.String, UnityEngine.Texture2D)
  spec.csharp:
  - uid: Funique.IToolUtility.ReadTexture(System.String,UnityEngine.Texture2D@)
    name: ReadTexture
    nameWithType: IToolUtility.ReadTexture
    fullName: Funique.IToolUtility.ReadTexture
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Texture2D
    name: Texture2D
    nameWithType: Texture2D
    fullName: UnityEngine.Texture2D
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolUtility.ReadTexture(System.String,UnityEngine.Texture2D@)
    name: ReadTexture
    nameWithType: IToolUtility.ReadTexture
    fullName: Funique.IToolUtility.ReadTexture
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Texture2D
    name: Texture2D
    nameWithType: Texture2D
    fullName: UnityEngine.Texture2D
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Tool.AddEventTrigger*
  commentId: Overload:Funique.Tool.AddEventTrigger
  name: AddEventTrigger
  nameWithType: Tool.AddEventTrigger
  fullName: Funique.Tool.AddEventTrigger
- uid: Funique.IToolUtility.AddEventTrigger(UnityEngine.GameObject,System.Action,UnityEngine.EventSystems.EventTriggerType)
  commentId: M:Funique.IToolUtility.AddEventTrigger(UnityEngine.GameObject,System.Action,UnityEngine.EventSystems.EventTriggerType)
  parent: Funique.IToolUtility
  isExternal: true
  name: AddEventTrigger(GameObject, Action, EventTriggerType)
  nameWithType: IToolUtility.AddEventTrigger(GameObject, Action, EventTriggerType)
  fullName: Funique.IToolUtility.AddEventTrigger(UnityEngine.GameObject, System.Action, UnityEngine.EventSystems.EventTriggerType)
  spec.csharp:
  - uid: Funique.IToolUtility.AddEventTrigger(UnityEngine.GameObject,System.Action,UnityEngine.EventSystems.EventTriggerType)
    name: AddEventTrigger
    nameWithType: IToolUtility.AddEventTrigger
    fullName: Funique.IToolUtility.AddEventTrigger
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.EventSystems.EventTriggerType
    name: EventTriggerType
    nameWithType: EventTriggerType
    fullName: UnityEngine.EventSystems.EventTriggerType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.IToolUtility.AddEventTrigger(UnityEngine.GameObject,System.Action,UnityEngine.EventSystems.EventTriggerType)
    name: AddEventTrigger
    nameWithType: IToolUtility.AddEventTrigger
    fullName: Funique.IToolUtility.AddEventTrigger
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.EventSystems.EventTriggerType
    name: EventTriggerType
    nameWithType: EventTriggerType
    fullName: UnityEngine.EventSystems.EventTriggerType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
