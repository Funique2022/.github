### YamlMime:ManagedReference
items:
- uid: Funique.SetPropertyUtility
  commentId: T:Funique.SetPropertyUtility
  id: SetPropertyUtility
  parent: Funique
  children:
  - Funique.SetPropertyUtility.SetClass``1(``0@,``0)
  - Funique.SetPropertyUtility.SetColor(UnityEngine.Color@,UnityEngine.Color)
  - Funique.SetPropertyUtility.SetStruct``1(``0@,``0)
  langs:
  - csharp
  - vb
  name: SetPropertyUtility
  nameWithType: SetPropertyUtility
  fullName: Funique.SetPropertyUtility
  type: Class
  source:
    remote:
      path: Util/SetPropertyUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: SetPropertyUtility
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Util/SetPropertyUtility.cs
    startLine: 4
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: public static class SetPropertyUtility
    content.vb: Public Module SetPropertyUtility
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Funique.SetPropertyUtility.SetColor(UnityEngine.Color@,UnityEngine.Color)
  commentId: M:Funique.SetPropertyUtility.SetColor(UnityEngine.Color@,UnityEngine.Color)
  id: SetColor(UnityEngine.Color@,UnityEngine.Color)
  parent: Funique.SetPropertyUtility
  langs:
  - csharp
  - vb
  name: SetColor(ref Color, Color)
  nameWithType: SetPropertyUtility.SetColor(ref Color, Color)
  fullName: Funique.SetPropertyUtility.SetColor(ref UnityEngine.Color, UnityEngine.Color)
  type: Method
  source:
    remote:
      path: Util/SetPropertyUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: SetColor
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Util/SetPropertyUtility.cs
    startLine: 6
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: public static bool SetColor(ref Color currentValue, Color newValue)
    parameters:
    - id: currentValue
      type: UnityEngine.Color
    - id: newValue
      type: UnityEngine.Color
    return:
      type: System.Boolean
    content.vb: Public Shared Function SetColor(ByRef currentValue As Color, newValue As Color) As Boolean
  overload: Funique.SetPropertyUtility.SetColor*
  nameWithType.vb: SetPropertyUtility.SetColor(ByRef Color, Color)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Funique.SetPropertyUtility.SetColor(ByRef UnityEngine.Color, UnityEngine.Color)
  name.vb: SetColor(ByRef Color, Color)
- uid: Funique.SetPropertyUtility.SetStruct``1(``0@,``0)
  commentId: M:Funique.SetPropertyUtility.SetStruct``1(``0@,``0)
  id: SetStruct``1(``0@,``0)
  parent: Funique.SetPropertyUtility
  langs:
  - csharp
  - vb
  name: SetStruct<T>(ref T, T)
  nameWithType: SetPropertyUtility.SetStruct<T>(ref T, T)
  fullName: Funique.SetPropertyUtility.SetStruct<T>(ref T, T)
  type: Method
  source:
    remote:
      path: Util/SetPropertyUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: SetStruct
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Util/SetPropertyUtility.cs
    startLine: 16
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: >-
      public static bool SetStruct<T>(ref T currentValue, T newValue)

          where T : struct
    parameters:
    - id: currentValue
      type: '{T}'
    - id: newValue
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Public Shared Function SetStruct(Of T As Structure)(ByRef currentValue As T, newValue As T) As Boolean
  overload: Funique.SetPropertyUtility.SetStruct*
  nameWithType.vb: SetPropertyUtility.SetStruct(Of T)(ByRef T, T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Funique.SetPropertyUtility.SetStruct(Of T)(ByRef T, T)
  name.vb: SetStruct(Of T)(ByRef T, T)
- uid: Funique.SetPropertyUtility.SetClass``1(``0@,``0)
  commentId: M:Funique.SetPropertyUtility.SetClass``1(``0@,``0)
  id: SetClass``1(``0@,``0)
  parent: Funique.SetPropertyUtility
  langs:
  - csharp
  - vb
  name: SetClass<T>(ref T, T)
  nameWithType: SetPropertyUtility.SetClass<T>(ref T, T)
  fullName: Funique.SetPropertyUtility.SetClass<T>(ref T, T)
  type: Method
  source:
    remote:
      path: Util/SetPropertyUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: SetClass
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Util/SetPropertyUtility.cs
    startLine: 26
  assemblies:
  - Funique.Core
  namespace: Funique
  syntax:
    content: >-
      public static bool SetClass<T>(ref T currentValue, T newValue)

          where T : class
    parameters:
    - id: currentValue
      type: '{T}'
    - id: newValue
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Public Shared Function SetClass(Of T As Class)(ByRef currentValue As T, newValue As T) As Boolean
  overload: Funique.SetPropertyUtility.SetClass*
  nameWithType.vb: SetPropertyUtility.SetClass(Of T)(ByRef T, T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Funique.SetPropertyUtility.SetClass(Of T)(ByRef T, T)
  name.vb: SetClass(Of T)(ByRef T, T)
references:
- uid: Funique
  commentId: N:Funique
  name: Funique
  nameWithType: Funique
  fullName: Funique
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Funique.SetPropertyUtility.SetColor*
  commentId: Overload:Funique.SetPropertyUtility.SetColor
  name: SetColor
  nameWithType: SetPropertyUtility.SetColor
  fullName: Funique.SetPropertyUtility.SetColor
- uid: UnityEngine.Color
  commentId: T:UnityEngine.Color
  parent: UnityEngine
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Funique.SetPropertyUtility.SetStruct*
  commentId: Overload:Funique.SetPropertyUtility.SetStruct
  name: SetStruct
  nameWithType: SetPropertyUtility.SetStruct
  fullName: Funique.SetPropertyUtility.SetStruct
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Funique.SetPropertyUtility.SetClass*
  commentId: Overload:Funique.SetPropertyUtility.SetClass
  name: SetClass
  nameWithType: SetPropertyUtility.SetClass
  fullName: Funique.SetPropertyUtility.SetClass
