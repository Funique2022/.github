### YamlMime:ManagedReference
items:
- uid: Funique.UI.ToolbarButtonToggleStructure
  commentId: T:Funique.UI.ToolbarButtonToggleStructure
  id: ToolbarButtonToggleStructure
  parent: Funique.UI
  children:
  - Funique.UI.ToolbarButtonToggleStructure.actions
  - Funique.UI.ToolbarButtonToggleStructure.button
  - Funique.UI.ToolbarButtonToggleStructure.panel
  langs:
  - csharp
  - vb
  name: ToolbarButtonToggleStructure
  nameWithType: ToolbarButtonToggleStructure
  fullName: Funique.UI.ToolbarButtonToggleStructure
  type: Struct
  source:
    remote:
      path: Structure/ToolbarButtonToggleStructure.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_ui.git
    id: ToolbarButtonToggleStructure
    path: ../../../project_unity_development/Assets/FuniquePlugin/UI/Structure/ToolbarButtonToggleStructure.cs
    startLine: 11
  assemblies:
  - Funique.UI
  namespace: Funique.UI
  summary: "\nThe toolbar button binding with specific panel visibility modify action <br />\n------------------------------------------------ <br />\n工具列上與介面顯示綁定的按鈕資料結構\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public struct ToolbarButtonToggleStructure
    content.vb: >-
      <Serializable>

      Public Structure ToolbarButtonToggleStructure
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Funique.UI.ToolbarButtonToggleStructure.panel
  commentId: F:Funique.UI.ToolbarButtonToggleStructure.panel
  id: panel
  parent: Funique.UI.ToolbarButtonToggleStructure
  langs:
  - csharp
  - vb
  name: panel
  nameWithType: ToolbarButtonToggleStructure.panel
  fullName: Funique.UI.ToolbarButtonToggleStructure.panel
  type: Field
  source:
    remote:
      path: Structure/ToolbarButtonToggleStructure.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_ui.git
    id: panel
    path: ../../../project_unity_development/Assets/FuniquePlugin/UI/Structure/ToolbarButtonToggleStructure.cs
    startLine: 20
  assemblies:
  - Funique.UI
  namespace: Funique.UI
  summary: "\nTarget panel object instance in the scene <br />\n------------------------------------------------ <br />\n目標介面\n"
  example: []
  syntax:
    content: >-
      [Tooltip("Target panel instance")]

      public Transform panel
    return:
      type: UnityEngine.Transform
    content.vb: >-
      <Tooltip("Target panel instance")>

      Public panel As Transform
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Target panel instance
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.UI.ToolbarButtonToggleStructure.button
  commentId: F:Funique.UI.ToolbarButtonToggleStructure.button
  id: button
  parent: Funique.UI.ToolbarButtonToggleStructure
  langs:
  - csharp
  - vb
  name: button
  nameWithType: ToolbarButtonToggleStructure.button
  fullName: Funique.UI.ToolbarButtonToggleStructure.button
  type: Field
  source:
    remote:
      path: Structure/ToolbarButtonToggleStructure.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_ui.git
    id: button
    path: ../../../project_unity_development/Assets/FuniquePlugin/UI/Structure/ToolbarButtonToggleStructure.cs
    startLine: 27
  assemblies:
  - Funique.UI
  namespace: Funique.UI
  summary: "\nTarget trigger button <br />\n------------------------------------------------ <br />\n按鈕實體\n"
  example: []
  syntax:
    content: >-
      [Tooltip("Toggle button")]

      public Button button
    return:
      type: UnityEngine.UI.Button
    content.vb: >-
      <Tooltip("Toggle button")>

      Public button As Button
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Toggle button
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.UI.ToolbarButtonToggleStructure.actions
  commentId: F:Funique.UI.ToolbarButtonToggleStructure.actions
  id: actions
  parent: Funique.UI.ToolbarButtonToggleStructure
  langs:
  - csharp
  - vb
  name: actions
  nameWithType: ToolbarButtonToggleStructure.actions
  fullName: Funique.UI.ToolbarButtonToggleStructure.actions
  type: Field
  source:
    remote:
      path: Structure/ToolbarButtonToggleStructure.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_ui.git
    id: actions
    path: ../../../project_unity_development/Assets/FuniquePlugin/UI/Structure/ToolbarButtonToggleStructure.cs
    startLine: 30
  assemblies:
  - Funique.UI
  namespace: Funique.UI
  syntax:
    content: >-
      [Tooltip("Effect what's the effect")]

      public string[] actions
    return:
      type: System.String[]
    content.vb: >-
      <Tooltip("Effect what's the effect")>

      Public actions As String()
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Effect what's the effect
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Funique.UI
  commentId: N:Funique.UI
  name: Funique.UI
  nameWithType: Funique.UI
  fullName: Funique.UI
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine.Transform
  commentId: T:UnityEngine.Transform
  parent: UnityEngine
  isExternal: true
  name: Transform
  nameWithType: Transform
  fullName: UnityEngine.Transform
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: UnityEngine.UI.Button
  commentId: T:UnityEngine.UI.Button
  parent: UnityEngine.UI
  isExternal: true
  name: Button
  nameWithType: Button
  fullName: UnityEngine.UI.Button
- uid: UnityEngine.UI
  commentId: N:UnityEngine.UI
  isExternal: true
  name: UnityEngine.UI
  nameWithType: UnityEngine.UI
  fullName: UnityEngine.UI
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
