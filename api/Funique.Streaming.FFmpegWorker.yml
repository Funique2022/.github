### YamlMime:ManagedReference
items:
- uid: Funique.Streaming.FFmpegWorker
  commentId: T:Funique.Streaming.FFmpegWorker
  id: FFmpegWorker
  parent: Funique.Streaming
  children:
  - Funique.Streaming.FFmpegWorker.#ctor(System.Int32,Funique.Im3u8Streaming)
  - Funique.Streaming.FFmpegWorker.Close
  - Funique.Streaming.FFmpegWorker.Completed(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)
  - Funique.Streaming.FFmpegWorker.DoWork(System.Object,System.ComponentModel.DoWorkEventArgs)
  - Funique.Streaming.FFmpegWorker.ffmpeg_Argument
  - Funique.Streaming.FFmpegWorker.ffmpegPath
  - Funique.Streaming.FFmpegWorker.index
  - Funique.Streaming.FFmpegWorker.Init_OK
  - Funique.Streaming.FFmpegWorker.mode
  - Funique.Streaming.FFmpegWorker.OnEnd
  - Funique.Streaming.FFmpegWorker.Open(System.ComponentModel.BackgroundWorker)
  - Funique.Streaming.FFmpegWorker.ProgressChanged(System.Object,System.ComponentModel.ProgressChangedEventArgs)
  - Funique.Streaming.FFmpegWorker.SetffmpegArg(Funique.PlayListMode)
  - Funique.Streaming.FFmpegWorker.url
  - Funique.Streaming.FFmpegWorker.WorkerName
  langs:
  - csharp
  - vb
  name: FFmpegWorker
  nameWithType: FFmpegWorker
  fullName: Funique.Streaming.FFmpegWorker
  type: Class
  source:
    remote:
      path: FFmpegWorker.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: FFmpegWorker
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/FFmpegWorker.cs
    startLine: 16
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  summary: "\nUse for generate cinema m3u8 streaming file purpose <br />\nUse seperate process to do the work <br />\nIn order to make this worker works, ffmpeg.exe in streaming asset must exists <br />\n------------------------------------------------ <br />\n用來生成劇院的 m3u8 串流檔案 <br />\n用子執行序進行作業 <br />\n為了讓這個工作者做事, ffmpeg.exe 必須存在在 streaming asset 下\n"
  example: []
  syntax:
    content: 'public class FFmpegWorker : ThirdPartyApplication, IDisposable, IFFmpegWorker'
    content.vb: >-
      Public Class FFmpegWorker

          Inherits ThirdPartyApplication

          Implements IDisposable, IFFmpegWorker
  inheritance:
  - System.Object
  - Funique.ThirdPartyApplication
  implements:
  - System.IDisposable
  - Funique.Streaming.IFFmpegWorker
  inheritedMembers:
  - Funique.ThirdPartyApplication.MainProcess
  - Funique.ThirdPartyApplication.BackgroundWorker
  - Funique.ThirdPartyApplication.progress
  - Funique.ThirdPartyApplication.Run
  - Funique.ThirdPartyApplication.Dispose
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Funique.Streaming.FFmpegWorker.ffmpeg_Argument
  commentId: F:Funique.Streaming.FFmpegWorker.ffmpeg_Argument
  id: ffmpeg_Argument
  parent: Funique.Streaming.FFmpegWorker
  langs:
  - csharp
  - vb
  name: ffmpeg_Argument
  nameWithType: FFmpegWorker.ffmpeg_Argument
  fullName: Funique.Streaming.FFmpegWorker.ffmpeg_Argument
  type: Field
  source:
    remote:
      path: FFmpegWorker.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: ffmpeg_Argument
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/FFmpegWorker.cs
    startLine: 34
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  summary: "\nThe argument to call ffmpeg execution file <br />\n------------------------------------------------ <br />\n使用 ffmpeg 的參數\n"
  example: []
  syntax:
    content: public string ffmpeg_Argument
    return:
      type: System.String
    content.vb: Public ffmpeg_Argument As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Streaming.FFmpegWorker.Init_OK
  commentId: P:Funique.Streaming.FFmpegWorker.Init_OK
  id: Init_OK
  parent: Funique.Streaming.FFmpegWorker
  langs:
  - csharp
  - vb
  name: Init_OK
  nameWithType: FFmpegWorker.Init_OK
  fullName: Funique.Streaming.FFmpegWorker.Init_OK
  type: Property
  source:
    remote:
      path: FFmpegWorker.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: Init_OK
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/FFmpegWorker.cs
    startLine: 35
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  syntax:
    content: public int Init_OK { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Init_OK As Integer
  overload: Funique.Streaming.FFmpegWorker.Init_OK*
  implements:
  - Funique.Streaming.IFFmpegWorker.Init_OK
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Funique.Streaming.FFmpegWorker.OnEnd
  commentId: E:Funique.Streaming.FFmpegWorker.OnEnd
  id: OnEnd
  parent: Funique.Streaming.FFmpegWorker
  langs:
  - csharp
  - vb
  name: OnEnd
  nameWithType: FFmpegWorker.OnEnd
  fullName: Funique.Streaming.FFmpegWorker.OnEnd
  type: Event
  source:
    remote:
      path: FFmpegWorker.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: OnEnd
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/FFmpegWorker.cs
    startLine: 46
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  summary: "\nWhen the work is finish <br />\n------------------------------------------------ <br />\n執行序結束事件\n"
  example: []
  syntax:
    content: public event EventHandler<string> OnEnd
    return:
      type: System.EventHandler{System.String}
    content.vb: Public Event OnEnd As EventHandler(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Streaming.FFmpegWorker.WorkerName
  commentId: P:Funique.Streaming.FFmpegWorker.WorkerName
  id: WorkerName
  parent: Funique.Streaming.FFmpegWorker
  langs:
  - csharp
  - vb
  name: WorkerName
  nameWithType: FFmpegWorker.WorkerName
  fullName: Funique.Streaming.FFmpegWorker.WorkerName
  type: Property
  source:
    remote:
      path: FFmpegWorker.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: WorkerName
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/FFmpegWorker.cs
    startLine: 52
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  syntax:
    content: protected override string WorkerName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected Overrides ReadOnly Property WorkerName As String
  overridden: Funique.ThirdPartyApplication.WorkerName
  overload: Funique.Streaming.FFmpegWorker.WorkerName*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: Funique.Streaming.FFmpegWorker.ffmpegPath
  commentId: P:Funique.Streaming.FFmpegWorker.ffmpegPath
  id: ffmpegPath
  parent: Funique.Streaming.FFmpegWorker
  langs:
  - csharp
  - vb
  name: ffmpegPath
  nameWithType: FFmpegWorker.ffmpegPath
  fullName: Funique.Streaming.FFmpegWorker.ffmpegPath
  type: Property
  source:
    remote:
      path: FFmpegWorker.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: ffmpegPath
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/FFmpegWorker.cs
    startLine: 58
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  summary: "\nGet the environemnt variable &quot;ffmpeg_path&quot; to access exe file path <br />\n------------------------------------------------ <br />\n存取系統使者者環境變數 &quot;ffmpeg_path&quot; ffmpeg.exe 執行檔案 檔案路徑\n"
  example: []
  syntax:
    content: public static string ffmpegPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property ffmpegPath As String
  overload: Funique.Streaming.FFmpegWorker.ffmpegPath*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Funique.Streaming.FFmpegWorker.url
  commentId: P:Funique.Streaming.FFmpegWorker.url
  id: url
  parent: Funique.Streaming.FFmpegWorker
  langs:
  - csharp
  - vb
  name: url
  nameWithType: FFmpegWorker.url
  fullName: Funique.Streaming.FFmpegWorker.url
  type: Property
  source:
    remote:
      path: FFmpegWorker.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: url
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/FFmpegWorker.cs
    startLine: 82
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  syntax:
    content: public string url { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property url As String
  overload: Funique.Streaming.FFmpegWorker.url*
  implements:
  - Funique.Streaming.IFFmpegWorker.url
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Funique.Streaming.FFmpegWorker.mode
  commentId: P:Funique.Streaming.FFmpegWorker.mode
  id: mode
  parent: Funique.Streaming.FFmpegWorker
  langs:
  - csharp
  - vb
  name: mode
  nameWithType: FFmpegWorker.mode
  fullName: Funique.Streaming.FFmpegWorker.mode
  type: Property
  source:
    remote:
      path: FFmpegWorker.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: mode
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/FFmpegWorker.cs
    startLine: 83
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  syntax:
    content: public StreamingMode mode { get; }
    parameters: []
    return:
      type: Funique.StreamingMode
    content.vb: Public ReadOnly Property mode As StreamingMode
  overload: Funique.Streaming.FFmpegWorker.mode*
  implements:
  - Funique.Streaming.IFFmpegWorker.mode
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Funique.Streaming.FFmpegWorker.index
  commentId: P:Funique.Streaming.FFmpegWorker.index
  id: index
  parent: Funique.Streaming.FFmpegWorker
  langs:
  - csharp
  - vb
  name: index
  nameWithType: FFmpegWorker.index
  fullName: Funique.Streaming.FFmpegWorker.index
  type: Property
  source:
    remote:
      path: FFmpegWorker.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: index
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/FFmpegWorker.cs
    startLine: 84
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  syntax:
    content: public int index { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property index As Integer
  overload: Funique.Streaming.FFmpegWorker.index*
  implements:
  - Funique.Streaming.IFFmpegWorker.index
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Funique.Streaming.FFmpegWorker.#ctor(System.Int32,Funique.Im3u8Streaming)
  commentId: M:Funique.Streaming.FFmpegWorker.#ctor(System.Int32,Funique.Im3u8Streaming)
  id: '#ctor(System.Int32,Funique.Im3u8Streaming)'
  parent: Funique.Streaming.FFmpegWorker
  langs:
  - csharp
  - vb
  name: FFmpegWorker(Int32, Im3u8Streaming)
  nameWithType: FFmpegWorker.FFmpegWorker(Int32, Im3u8Streaming)
  fullName: Funique.Streaming.FFmpegWorker.FFmpegWorker(System.Int32, Funique.Im3u8Streaming)
  type: Constructor
  source:
    remote:
      path: FFmpegWorker.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: .ctor
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/FFmpegWorker.cs
    startLine: 88
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  syntax:
    content: public FFmpegWorker(int index, Im3u8Streaming resource)
    parameters:
    - id: index
      type: System.Int32
    - id: resource
      type: Funique.Im3u8Streaming
    content.vb: Public Sub New(index As Integer, resource As Im3u8Streaming)
  overload: Funique.Streaming.FFmpegWorker.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Streaming.FFmpegWorker.DoWork(System.Object,System.ComponentModel.DoWorkEventArgs)
  commentId: M:Funique.Streaming.FFmpegWorker.DoWork(System.Object,System.ComponentModel.DoWorkEventArgs)
  id: DoWork(System.Object,System.ComponentModel.DoWorkEventArgs)
  parent: Funique.Streaming.FFmpegWorker
  langs:
  - csharp
  - vb
  name: DoWork(Object, DoWorkEventArgs)
  nameWithType: FFmpegWorker.DoWork(Object, DoWorkEventArgs)
  fullName: Funique.Streaming.FFmpegWorker.DoWork(System.Object, System.ComponentModel.DoWorkEventArgs)
  type: Method
  source:
    remote:
      path: FFmpegWorker.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: DoWork
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/FFmpegWorker.cs
    startLine: 100
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  syntax:
    content: protected override void DoWork(object sender, DoWorkEventArgs e)
    parameters:
    - id: sender
      type: System.Object
    - id: e
      type: System.ComponentModel.DoWorkEventArgs
    content.vb: Protected Overrides Sub DoWork(sender As Object, e As DoWorkEventArgs)
  overridden: Funique.ThirdPartyApplication.DoWork(System.Object,System.ComponentModel.DoWorkEventArgs)
  overload: Funique.Streaming.FFmpegWorker.DoWork*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Funique.Streaming.FFmpegWorker.Completed(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)
  commentId: M:Funique.Streaming.FFmpegWorker.Completed(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)
  id: Completed(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)
  parent: Funique.Streaming.FFmpegWorker
  langs:
  - csharp
  - vb
  name: Completed(Object, RunWorkerCompletedEventArgs)
  nameWithType: FFmpegWorker.Completed(Object, RunWorkerCompletedEventArgs)
  fullName: Funique.Streaming.FFmpegWorker.Completed(System.Object, System.ComponentModel.RunWorkerCompletedEventArgs)
  type: Method
  source:
    remote:
      path: FFmpegWorker.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: Completed
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/FFmpegWorker.cs
    startLine: 107
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  syntax:
    content: protected override void Completed(object sender, RunWorkerCompletedEventArgs e)
    parameters:
    - id: sender
      type: System.Object
    - id: e
      type: System.ComponentModel.RunWorkerCompletedEventArgs
    content.vb: Protected Overrides Sub Completed(sender As Object, e As RunWorkerCompletedEventArgs)
  overridden: Funique.ThirdPartyApplication.Completed(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)
  overload: Funique.Streaming.FFmpegWorker.Completed*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Funique.Streaming.FFmpegWorker.Close
  commentId: M:Funique.Streaming.FFmpegWorker.Close
  id: Close
  parent: Funique.Streaming.FFmpegWorker
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: FFmpegWorker.Close()
  fullName: Funique.Streaming.FFmpegWorker.Close()
  type: Method
  source:
    remote:
      path: FFmpegWorker.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: Close
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/FFmpegWorker.cs
    startLine: 121
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  syntax:
    content: public override void Close()
    content.vb: Public Overrides Sub Close
  overridden: Funique.ThirdPartyApplication.Close
  overload: Funique.Streaming.FFmpegWorker.Close*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Funique.Streaming.FFmpegWorker.Open(System.ComponentModel.BackgroundWorker)
  commentId: M:Funique.Streaming.FFmpegWorker.Open(System.ComponentModel.BackgroundWorker)
  id: Open(System.ComponentModel.BackgroundWorker)
  parent: Funique.Streaming.FFmpegWorker
  langs:
  - csharp
  - vb
  name: Open(BackgroundWorker)
  nameWithType: FFmpegWorker.Open(BackgroundWorker)
  fullName: Funique.Streaming.FFmpegWorker.Open(System.ComponentModel.BackgroundWorker)
  type: Method
  source:
    remote:
      path: FFmpegWorker.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: Open
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/FFmpegWorker.cs
    startLine: 129
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  syntax:
    content: protected override void Open(BackgroundWorker bw)
    parameters:
    - id: bw
      type: System.ComponentModel.BackgroundWorker
    content.vb: Protected Overrides Sub Open(bw As BackgroundWorker)
  overridden: Funique.ThirdPartyApplication.Open(System.ComponentModel.BackgroundWorker)
  overload: Funique.Streaming.FFmpegWorker.Open*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Funique.Streaming.FFmpegWorker.ProgressChanged(System.Object,System.ComponentModel.ProgressChangedEventArgs)
  commentId: M:Funique.Streaming.FFmpegWorker.ProgressChanged(System.Object,System.ComponentModel.ProgressChangedEventArgs)
  id: ProgressChanged(System.Object,System.ComponentModel.ProgressChangedEventArgs)
  parent: Funique.Streaming.FFmpegWorker
  langs:
  - csharp
  - vb
  name: ProgressChanged(Object, ProgressChangedEventArgs)
  nameWithType: FFmpegWorker.ProgressChanged(Object, ProgressChangedEventArgs)
  fullName: Funique.Streaming.FFmpegWorker.ProgressChanged(System.Object, System.ComponentModel.ProgressChangedEventArgs)
  type: Method
  source:
    remote:
      path: FFmpegWorker.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: ProgressChanged
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/FFmpegWorker.cs
    startLine: 134
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  syntax:
    content: protected override void ProgressChanged(object sender, ProgressChangedEventArgs e)
    parameters:
    - id: sender
      type: System.Object
    - id: e
      type: System.ComponentModel.ProgressChangedEventArgs
    content.vb: Protected Overrides Sub ProgressChanged(sender As Object, e As ProgressChangedEventArgs)
  overridden: Funique.ThirdPartyApplication.ProgressChanged(System.Object,System.ComponentModel.ProgressChangedEventArgs)
  overload: Funique.Streaming.FFmpegWorker.ProgressChanged*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Funique.Streaming.FFmpegWorker.SetffmpegArg(Funique.PlayListMode)
  commentId: M:Funique.Streaming.FFmpegWorker.SetffmpegArg(Funique.PlayListMode)
  id: SetffmpegArg(Funique.PlayListMode)
  parent: Funique.Streaming.FFmpegWorker
  langs:
  - csharp
  - vb
  name: SetffmpegArg(PlayListMode)
  nameWithType: FFmpegWorker.SetffmpegArg(PlayListMode)
  fullName: Funique.Streaming.FFmpegWorker.SetffmpegArg(Funique.PlayListMode)
  type: Method
  source:
    remote:
      path: FFmpegWorker.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_streaming.git
    id: SetffmpegArg
    path: ../../../project_unity_development/Assets/FuniquePlugin/Streaming/FFmpegWorker.cs
    startLine: 152
  assemblies:
  - Funique.Streaming
  namespace: Funique.Streaming
  summary: "\nSetting the argument of ffmpeg for generate streaming file <br />\nPrepare for call <br />\n------------------------------------------------ <br />\n設定 ffmpeg 的參數 <br />\n呼叫前的準備\n"
  example: []
  syntax:
    content: public void SetffmpegArg(PlayListMode playListMode)
    parameters:
    - id: playListMode
      type: Funique.PlayListMode
      description: ''
    content.vb: Public Sub SetffmpegArg(playListMode As PlayListMode)
  overload: Funique.Streaming.FFmpegWorker.SetffmpegArg*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Funique.Streaming
  commentId: N:Funique.Streaming
  name: Funique.Streaming
  nameWithType: Funique.Streaming
  fullName: Funique.Streaming
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Funique.ThirdPartyApplication
  commentId: T:Funique.ThirdPartyApplication
  parent: Funique
  name: ThirdPartyApplication
  nameWithType: ThirdPartyApplication
  fullName: Funique.ThirdPartyApplication
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Funique.Streaming.IFFmpegWorker
  commentId: T:Funique.Streaming.IFFmpegWorker
  parent: Funique.Streaming
  name: IFFmpegWorker
  nameWithType: IFFmpegWorker
  fullName: Funique.Streaming.IFFmpegWorker
- uid: Funique.ThirdPartyApplication.MainProcess
  commentId: F:Funique.ThirdPartyApplication.MainProcess
  parent: Funique.ThirdPartyApplication
  name: MainProcess
  nameWithType: ThirdPartyApplication.MainProcess
  fullName: Funique.ThirdPartyApplication.MainProcess
- uid: Funique.ThirdPartyApplication.BackgroundWorker
  commentId: F:Funique.ThirdPartyApplication.BackgroundWorker
  parent: Funique.ThirdPartyApplication
  name: BackgroundWorker
  nameWithType: ThirdPartyApplication.BackgroundWorker
  fullName: Funique.ThirdPartyApplication.BackgroundWorker
- uid: Funique.ThirdPartyApplication.progress
  commentId: F:Funique.ThirdPartyApplication.progress
  parent: Funique.ThirdPartyApplication
  name: progress
  nameWithType: ThirdPartyApplication.progress
  fullName: Funique.ThirdPartyApplication.progress
- uid: Funique.ThirdPartyApplication.Run
  commentId: M:Funique.ThirdPartyApplication.Run
  parent: Funique.ThirdPartyApplication
  name: Run()
  nameWithType: ThirdPartyApplication.Run()
  fullName: Funique.ThirdPartyApplication.Run()
  spec.csharp:
  - uid: Funique.ThirdPartyApplication.Run
    name: Run
    nameWithType: ThirdPartyApplication.Run
    fullName: Funique.ThirdPartyApplication.Run
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.ThirdPartyApplication.Run
    name: Run
    nameWithType: ThirdPartyApplication.Run
    fullName: Funique.ThirdPartyApplication.Run
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.ThirdPartyApplication.Dispose
  commentId: M:Funique.ThirdPartyApplication.Dispose
  parent: Funique.ThirdPartyApplication
  name: Dispose()
  nameWithType: ThirdPartyApplication.Dispose()
  fullName: Funique.ThirdPartyApplication.Dispose()
  spec.csharp:
  - uid: Funique.ThirdPartyApplication.Dispose
    name: Dispose
    nameWithType: ThirdPartyApplication.Dispose
    fullName: Funique.ThirdPartyApplication.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.ThirdPartyApplication.Dispose
    name: Dispose
    nameWithType: ThirdPartyApplication.Dispose
    fullName: Funique.ThirdPartyApplication.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Funique
  commentId: N:Funique
  name: Funique
  nameWithType: Funique
  fullName: Funique
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Funique.Streaming.FFmpegWorker.Init_OK*
  commentId: Overload:Funique.Streaming.FFmpegWorker.Init_OK
  name: Init_OK
  nameWithType: FFmpegWorker.Init_OK
  fullName: Funique.Streaming.FFmpegWorker.Init_OK
- uid: Funique.Streaming.IFFmpegWorker.Init_OK
  commentId: P:Funique.Streaming.IFFmpegWorker.Init_OK
  parent: Funique.Streaming.IFFmpegWorker
  name: Init_OK
  nameWithType: IFFmpegWorker.Init_OK
  fullName: Funique.Streaming.IFFmpegWorker.Init_OK
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.EventHandler{System.String}
  commentId: T:System.EventHandler{System.String}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<String>
  nameWithType: EventHandler<String>
  fullName: System.EventHandler<System.String>
  nameWithType.vb: EventHandler(Of String)
  fullName.vb: System.EventHandler(Of System.String)
  name.vb: EventHandler(Of String)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.ThirdPartyApplication.WorkerName
  commentId: P:Funique.ThirdPartyApplication.WorkerName
  parent: Funique.ThirdPartyApplication
  name: WorkerName
  nameWithType: ThirdPartyApplication.WorkerName
  fullName: Funique.ThirdPartyApplication.WorkerName
- uid: Funique.Streaming.FFmpegWorker.WorkerName*
  commentId: Overload:Funique.Streaming.FFmpegWorker.WorkerName
  name: WorkerName
  nameWithType: FFmpegWorker.WorkerName
  fullName: Funique.Streaming.FFmpegWorker.WorkerName
- uid: Funique.Streaming.FFmpegWorker.ffmpegPath*
  commentId: Overload:Funique.Streaming.FFmpegWorker.ffmpegPath
  name: ffmpegPath
  nameWithType: FFmpegWorker.ffmpegPath
  fullName: Funique.Streaming.FFmpegWorker.ffmpegPath
- uid: Funique.Streaming.FFmpegWorker.url*
  commentId: Overload:Funique.Streaming.FFmpegWorker.url
  name: url
  nameWithType: FFmpegWorker.url
  fullName: Funique.Streaming.FFmpegWorker.url
- uid: Funique.Streaming.IFFmpegWorker.url
  commentId: P:Funique.Streaming.IFFmpegWorker.url
  parent: Funique.Streaming.IFFmpegWorker
  name: url
  nameWithType: IFFmpegWorker.url
  fullName: Funique.Streaming.IFFmpegWorker.url
- uid: Funique.Streaming.FFmpegWorker.mode*
  commentId: Overload:Funique.Streaming.FFmpegWorker.mode
  name: mode
  nameWithType: FFmpegWorker.mode
  fullName: Funique.Streaming.FFmpegWorker.mode
- uid: Funique.Streaming.IFFmpegWorker.mode
  commentId: P:Funique.Streaming.IFFmpegWorker.mode
  parent: Funique.Streaming.IFFmpegWorker
  name: mode
  nameWithType: IFFmpegWorker.mode
  fullName: Funique.Streaming.IFFmpegWorker.mode
- uid: Funique.StreamingMode
  commentId: T:Funique.StreamingMode
  parent: Funique
  name: StreamingMode
  nameWithType: StreamingMode
  fullName: Funique.StreamingMode
- uid: Funique.Streaming.FFmpegWorker.index*
  commentId: Overload:Funique.Streaming.FFmpegWorker.index
  name: index
  nameWithType: FFmpegWorker.index
  fullName: Funique.Streaming.FFmpegWorker.index
- uid: Funique.Streaming.IFFmpegWorker.index
  commentId: P:Funique.Streaming.IFFmpegWorker.index
  parent: Funique.Streaming.IFFmpegWorker
  name: index
  nameWithType: IFFmpegWorker.index
  fullName: Funique.Streaming.IFFmpegWorker.index
- uid: Funique.Streaming.FFmpegWorker.#ctor*
  commentId: Overload:Funique.Streaming.FFmpegWorker.#ctor
  name: FFmpegWorker
  nameWithType: FFmpegWorker.FFmpegWorker
  fullName: Funique.Streaming.FFmpegWorker.FFmpegWorker
- uid: Funique.Im3u8Streaming
  commentId: T:Funique.Im3u8Streaming
  parent: Funique
  name: Im3u8Streaming
  nameWithType: Im3u8Streaming
  fullName: Funique.Im3u8Streaming
- uid: Funique.ThirdPartyApplication.DoWork(System.Object,System.ComponentModel.DoWorkEventArgs)
  commentId: M:Funique.ThirdPartyApplication.DoWork(System.Object,System.ComponentModel.DoWorkEventArgs)
  parent: Funique.ThirdPartyApplication
  isExternal: true
  name: DoWork(Object, DoWorkEventArgs)
  nameWithType: ThirdPartyApplication.DoWork(Object, DoWorkEventArgs)
  fullName: Funique.ThirdPartyApplication.DoWork(System.Object, System.ComponentModel.DoWorkEventArgs)
  spec.csharp:
  - uid: Funique.ThirdPartyApplication.DoWork(System.Object,System.ComponentModel.DoWorkEventArgs)
    name: DoWork
    nameWithType: ThirdPartyApplication.DoWork
    fullName: Funique.ThirdPartyApplication.DoWork
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ComponentModel.DoWorkEventArgs
    name: DoWorkEventArgs
    nameWithType: DoWorkEventArgs
    fullName: System.ComponentModel.DoWorkEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.ThirdPartyApplication.DoWork(System.Object,System.ComponentModel.DoWorkEventArgs)
    name: DoWork
    nameWithType: ThirdPartyApplication.DoWork
    fullName: Funique.ThirdPartyApplication.DoWork
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ComponentModel.DoWorkEventArgs
    name: DoWorkEventArgs
    nameWithType: DoWorkEventArgs
    fullName: System.ComponentModel.DoWorkEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Streaming.FFmpegWorker.DoWork*
  commentId: Overload:Funique.Streaming.FFmpegWorker.DoWork
  name: DoWork
  nameWithType: FFmpegWorker.DoWork
  fullName: Funique.Streaming.FFmpegWorker.DoWork
- uid: System.ComponentModel.DoWorkEventArgs
  commentId: T:System.ComponentModel.DoWorkEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: DoWorkEventArgs
  nameWithType: DoWorkEventArgs
  fullName: System.ComponentModel.DoWorkEventArgs
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: Funique.ThirdPartyApplication.Completed(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)
  commentId: M:Funique.ThirdPartyApplication.Completed(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)
  parent: Funique.ThirdPartyApplication
  isExternal: true
  name: Completed(Object, RunWorkerCompletedEventArgs)
  nameWithType: ThirdPartyApplication.Completed(Object, RunWorkerCompletedEventArgs)
  fullName: Funique.ThirdPartyApplication.Completed(System.Object, System.ComponentModel.RunWorkerCompletedEventArgs)
  spec.csharp:
  - uid: Funique.ThirdPartyApplication.Completed(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)
    name: Completed
    nameWithType: ThirdPartyApplication.Completed
    fullName: Funique.ThirdPartyApplication.Completed
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ComponentModel.RunWorkerCompletedEventArgs
    name: RunWorkerCompletedEventArgs
    nameWithType: RunWorkerCompletedEventArgs
    fullName: System.ComponentModel.RunWorkerCompletedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.ThirdPartyApplication.Completed(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)
    name: Completed
    nameWithType: ThirdPartyApplication.Completed
    fullName: Funique.ThirdPartyApplication.Completed
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ComponentModel.RunWorkerCompletedEventArgs
    name: RunWorkerCompletedEventArgs
    nameWithType: RunWorkerCompletedEventArgs
    fullName: System.ComponentModel.RunWorkerCompletedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Streaming.FFmpegWorker.Completed*
  commentId: Overload:Funique.Streaming.FFmpegWorker.Completed
  name: Completed
  nameWithType: FFmpegWorker.Completed
  fullName: Funique.Streaming.FFmpegWorker.Completed
- uid: System.ComponentModel.RunWorkerCompletedEventArgs
  commentId: T:System.ComponentModel.RunWorkerCompletedEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: RunWorkerCompletedEventArgs
  nameWithType: RunWorkerCompletedEventArgs
  fullName: System.ComponentModel.RunWorkerCompletedEventArgs
- uid: Funique.ThirdPartyApplication.Close
  commentId: M:Funique.ThirdPartyApplication.Close
  parent: Funique.ThirdPartyApplication
  name: Close()
  nameWithType: ThirdPartyApplication.Close()
  fullName: Funique.ThirdPartyApplication.Close()
  spec.csharp:
  - uid: Funique.ThirdPartyApplication.Close
    name: Close
    nameWithType: ThirdPartyApplication.Close
    fullName: Funique.ThirdPartyApplication.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.ThirdPartyApplication.Close
    name: Close
    nameWithType: ThirdPartyApplication.Close
    fullName: Funique.ThirdPartyApplication.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Streaming.FFmpegWorker.Close*
  commentId: Overload:Funique.Streaming.FFmpegWorker.Close
  name: Close
  nameWithType: FFmpegWorker.Close
  fullName: Funique.Streaming.FFmpegWorker.Close
- uid: Funique.ThirdPartyApplication.Open(System.ComponentModel.BackgroundWorker)
  commentId: M:Funique.ThirdPartyApplication.Open(System.ComponentModel.BackgroundWorker)
  parent: Funique.ThirdPartyApplication
  isExternal: true
  name: Open(BackgroundWorker)
  nameWithType: ThirdPartyApplication.Open(BackgroundWorker)
  fullName: Funique.ThirdPartyApplication.Open(System.ComponentModel.BackgroundWorker)
  spec.csharp:
  - uid: Funique.ThirdPartyApplication.Open(System.ComponentModel.BackgroundWorker)
    name: Open
    nameWithType: ThirdPartyApplication.Open
    fullName: Funique.ThirdPartyApplication.Open
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.BackgroundWorker
    name: BackgroundWorker
    nameWithType: BackgroundWorker
    fullName: System.ComponentModel.BackgroundWorker
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.ThirdPartyApplication.Open(System.ComponentModel.BackgroundWorker)
    name: Open
    nameWithType: ThirdPartyApplication.Open
    fullName: Funique.ThirdPartyApplication.Open
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.BackgroundWorker
    name: BackgroundWorker
    nameWithType: BackgroundWorker
    fullName: System.ComponentModel.BackgroundWorker
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Streaming.FFmpegWorker.Open*
  commentId: Overload:Funique.Streaming.FFmpegWorker.Open
  name: Open
  nameWithType: FFmpegWorker.Open
  fullName: Funique.Streaming.FFmpegWorker.Open
- uid: System.ComponentModel.BackgroundWorker
  commentId: T:System.ComponentModel.BackgroundWorker
  parent: System.ComponentModel
  isExternal: true
  name: BackgroundWorker
  nameWithType: BackgroundWorker
  fullName: System.ComponentModel.BackgroundWorker
- uid: Funique.ThirdPartyApplication.ProgressChanged(System.Object,System.ComponentModel.ProgressChangedEventArgs)
  commentId: M:Funique.ThirdPartyApplication.ProgressChanged(System.Object,System.ComponentModel.ProgressChangedEventArgs)
  parent: Funique.ThirdPartyApplication
  isExternal: true
  name: ProgressChanged(Object, ProgressChangedEventArgs)
  nameWithType: ThirdPartyApplication.ProgressChanged(Object, ProgressChangedEventArgs)
  fullName: Funique.ThirdPartyApplication.ProgressChanged(System.Object, System.ComponentModel.ProgressChangedEventArgs)
  spec.csharp:
  - uid: Funique.ThirdPartyApplication.ProgressChanged(System.Object,System.ComponentModel.ProgressChangedEventArgs)
    name: ProgressChanged
    nameWithType: ThirdPartyApplication.ProgressChanged
    fullName: Funique.ThirdPartyApplication.ProgressChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ComponentModel.ProgressChangedEventArgs
    name: ProgressChangedEventArgs
    nameWithType: ProgressChangedEventArgs
    fullName: System.ComponentModel.ProgressChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.ThirdPartyApplication.ProgressChanged(System.Object,System.ComponentModel.ProgressChangedEventArgs)
    name: ProgressChanged
    nameWithType: ThirdPartyApplication.ProgressChanged
    fullName: Funique.ThirdPartyApplication.ProgressChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ComponentModel.ProgressChangedEventArgs
    name: ProgressChangedEventArgs
    nameWithType: ProgressChangedEventArgs
    fullName: System.ComponentModel.ProgressChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Streaming.FFmpegWorker.ProgressChanged*
  commentId: Overload:Funique.Streaming.FFmpegWorker.ProgressChanged
  name: ProgressChanged
  nameWithType: FFmpegWorker.ProgressChanged
  fullName: Funique.Streaming.FFmpegWorker.ProgressChanged
- uid: System.ComponentModel.ProgressChangedEventArgs
  commentId: T:System.ComponentModel.ProgressChangedEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: ProgressChangedEventArgs
  nameWithType: ProgressChangedEventArgs
  fullName: System.ComponentModel.ProgressChangedEventArgs
- uid: Funique.Streaming.FFmpegWorker.SetffmpegArg*
  commentId: Overload:Funique.Streaming.FFmpegWorker.SetffmpegArg
  name: SetffmpegArg
  nameWithType: FFmpegWorker.SetffmpegArg
  fullName: Funique.Streaming.FFmpegWorker.SetffmpegArg
- uid: Funique.PlayListMode
  commentId: T:Funique.PlayListMode
  parent: Funique
  name: PlayListMode
  nameWithType: PlayListMode
  fullName: Funique.PlayListMode
