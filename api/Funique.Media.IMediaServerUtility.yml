### YamlMime:ManagedReference
items:
- uid: Funique.Media.IMediaServerUtility
  commentId: T:Funique.Media.IMediaServerUtility
  id: IMediaServerUtility
  parent: Funique.Media
  children:
  - Funique.Media.IMediaServerUtility.Controller
  langs:
  - csharp
  - vb
  name: IMediaServerUtility
  nameWithType: IMediaServerUtility
  fullName: Funique.Media.IMediaServerUtility
  type: Interface
  source:
    remote:
      path: Interface/IMediaServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_media.git
    id: IMediaServerUtility
    path: ../../../project_unity_development/Assets/FuniquePlugin/Media/Interface/IMediaServerUtility.cs
    startLine: 7
  assemblies:
  - Funique.Media
  namespace: Funique.Media
  summary: "\nMedia server utility <br />\n------------------------------------------------ <br />\n伺服器 媒體 功能\n"
  example: []
  syntax:
    content: 'public interface IMediaServerUtility : IMediaControl, IMediaSend'
    content.vb: >-
      Public Interface IMediaServerUtility

          Inherits IMediaControl, IMediaSend
  inheritedMembers:
  - Funique.Media.IMediaControl.CallPlayerPlay
  - Funique.Media.IMediaControl.CallPlayerPlay(System.String)
  - Funique.Media.IMediaControl.CallPlayerPause
  - Funique.Media.IMediaControl.CallPlayerStop
  - Funique.Media.IMediaSend.MsgToClients(System.String)
  - Funique.Media.IMediaSend.SendGetVideoTime(System.Int32,System.String)
  - Funique.Media.IMediaSend.SendHeadsetReset
  - Funique.Media.IMediaSend.SendWaitRoom
  - Funique.Media.IMediaSend.SendVideoName(System.String)
  - Funique.Media.IMediaSend.SendVideoTime(System.Single)
  - Funique.Media.IMediaSend.SendReplayMode(Funique.ReplayState)
  - Funique.Media.IMediaSend.SendSubtitleMode(Funique.SubtitleMode)
  - Funique.Media.IMediaSend.SendStereoMode(System.String)
  - Funique.Media.IMediaSend.SendSchemeMode(Funique.PlayerScheme)
  - Funique.Media.IMediaSend.SendMasterSettingState
  - Funique.Media.IMediaSend.SendAllPlayerOpen
  - Funique.Media.IMediaSend.SendAllPlayerClose
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Funique.Media.IMediaServerUtility.Controller
  commentId: P:Funique.Media.IMediaServerUtility.Controller
  id: Controller
  parent: Funique.Media.IMediaServerUtility
  langs:
  - csharp
  - vb
  name: Controller
  nameWithType: IMediaServerUtility.Controller
  fullName: Funique.Media.IMediaServerUtility.Controller
  type: Property
  source:
    remote:
      path: Interface/IMediaServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_media.git
    id: Controller
    path: ../../../project_unity_development/Assets/FuniquePlugin/Media/Interface/IMediaServerUtility.cs
    startLine: 9
  assemblies:
  - Funique.Media
  namespace: Funique.Media
  syntax:
    content: MediaControllerBase Controller { get; }
    parameters: []
    return:
      type: Funique.MediaControllerBase
    content.vb: ReadOnly Property Controller As MediaControllerBase
  overload: Funique.Media.IMediaServerUtility.Controller*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Funique.Media
  commentId: N:Funique.Media
  name: Funique.Media
  nameWithType: Funique.Media
  fullName: Funique.Media
- uid: Funique.Media.IMediaControl.CallPlayerPlay
  commentId: M:Funique.Media.IMediaControl.CallPlayerPlay
  parent: Funique.Media.IMediaControl
  name: CallPlayerPlay()
  nameWithType: IMediaControl.CallPlayerPlay()
  fullName: Funique.Media.IMediaControl.CallPlayerPlay()
  spec.csharp:
  - uid: Funique.Media.IMediaControl.CallPlayerPlay
    name: CallPlayerPlay
    nameWithType: IMediaControl.CallPlayerPlay
    fullName: Funique.Media.IMediaControl.CallPlayerPlay
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Media.IMediaControl.CallPlayerPlay
    name: CallPlayerPlay
    nameWithType: IMediaControl.CallPlayerPlay
    fullName: Funique.Media.IMediaControl.CallPlayerPlay
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Media.IMediaControl.CallPlayerPlay(System.String)
  commentId: M:Funique.Media.IMediaControl.CallPlayerPlay(System.String)
  parent: Funique.Media.IMediaControl
  isExternal: true
  name: CallPlayerPlay(String)
  nameWithType: IMediaControl.CallPlayerPlay(String)
  fullName: Funique.Media.IMediaControl.CallPlayerPlay(System.String)
  spec.csharp:
  - uid: Funique.Media.IMediaControl.CallPlayerPlay(System.String)
    name: CallPlayerPlay
    nameWithType: IMediaControl.CallPlayerPlay
    fullName: Funique.Media.IMediaControl.CallPlayerPlay
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Media.IMediaControl.CallPlayerPlay(System.String)
    name: CallPlayerPlay
    nameWithType: IMediaControl.CallPlayerPlay
    fullName: Funique.Media.IMediaControl.CallPlayerPlay
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Media.IMediaControl.CallPlayerPause
  commentId: M:Funique.Media.IMediaControl.CallPlayerPause
  parent: Funique.Media.IMediaControl
  name: CallPlayerPause()
  nameWithType: IMediaControl.CallPlayerPause()
  fullName: Funique.Media.IMediaControl.CallPlayerPause()
  spec.csharp:
  - uid: Funique.Media.IMediaControl.CallPlayerPause
    name: CallPlayerPause
    nameWithType: IMediaControl.CallPlayerPause
    fullName: Funique.Media.IMediaControl.CallPlayerPause
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Media.IMediaControl.CallPlayerPause
    name: CallPlayerPause
    nameWithType: IMediaControl.CallPlayerPause
    fullName: Funique.Media.IMediaControl.CallPlayerPause
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Media.IMediaControl.CallPlayerStop
  commentId: M:Funique.Media.IMediaControl.CallPlayerStop
  parent: Funique.Media.IMediaControl
  name: CallPlayerStop()
  nameWithType: IMediaControl.CallPlayerStop()
  fullName: Funique.Media.IMediaControl.CallPlayerStop()
  spec.csharp:
  - uid: Funique.Media.IMediaControl.CallPlayerStop
    name: CallPlayerStop
    nameWithType: IMediaControl.CallPlayerStop
    fullName: Funique.Media.IMediaControl.CallPlayerStop
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Media.IMediaControl.CallPlayerStop
    name: CallPlayerStop
    nameWithType: IMediaControl.CallPlayerStop
    fullName: Funique.Media.IMediaControl.CallPlayerStop
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Media.IMediaSend.MsgToClients(System.String)
  commentId: M:Funique.Media.IMediaSend.MsgToClients(System.String)
  parent: Funique.Media.IMediaSend
  isExternal: true
  name: MsgToClients(String)
  nameWithType: IMediaSend.MsgToClients(String)
  fullName: Funique.Media.IMediaSend.MsgToClients(System.String)
  spec.csharp:
  - uid: Funique.Media.IMediaSend.MsgToClients(System.String)
    name: MsgToClients
    nameWithType: IMediaSend.MsgToClients
    fullName: Funique.Media.IMediaSend.MsgToClients
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Media.IMediaSend.MsgToClients(System.String)
    name: MsgToClients
    nameWithType: IMediaSend.MsgToClients
    fullName: Funique.Media.IMediaSend.MsgToClients
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Media.IMediaSend.SendGetVideoTime(System.Int32,System.String)
  commentId: M:Funique.Media.IMediaSend.SendGetVideoTime(System.Int32,System.String)
  parent: Funique.Media.IMediaSend
  isExternal: true
  name: SendGetVideoTime(Int32, String)
  nameWithType: IMediaSend.SendGetVideoTime(Int32, String)
  fullName: Funique.Media.IMediaSend.SendGetVideoTime(System.Int32, System.String)
  spec.csharp:
  - uid: Funique.Media.IMediaSend.SendGetVideoTime(System.Int32,System.String)
    name: SendGetVideoTime
    nameWithType: IMediaSend.SendGetVideoTime
    fullName: Funique.Media.IMediaSend.SendGetVideoTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Media.IMediaSend.SendGetVideoTime(System.Int32,System.String)
    name: SendGetVideoTime
    nameWithType: IMediaSend.SendGetVideoTime
    fullName: Funique.Media.IMediaSend.SendGetVideoTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Media.IMediaSend.SendHeadsetReset
  commentId: M:Funique.Media.IMediaSend.SendHeadsetReset
  parent: Funique.Media.IMediaSend
  name: SendHeadsetReset()
  nameWithType: IMediaSend.SendHeadsetReset()
  fullName: Funique.Media.IMediaSend.SendHeadsetReset()
  spec.csharp:
  - uid: Funique.Media.IMediaSend.SendHeadsetReset
    name: SendHeadsetReset
    nameWithType: IMediaSend.SendHeadsetReset
    fullName: Funique.Media.IMediaSend.SendHeadsetReset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Media.IMediaSend.SendHeadsetReset
    name: SendHeadsetReset
    nameWithType: IMediaSend.SendHeadsetReset
    fullName: Funique.Media.IMediaSend.SendHeadsetReset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Media.IMediaSend.SendWaitRoom
  commentId: M:Funique.Media.IMediaSend.SendWaitRoom
  parent: Funique.Media.IMediaSend
  name: SendWaitRoom()
  nameWithType: IMediaSend.SendWaitRoom()
  fullName: Funique.Media.IMediaSend.SendWaitRoom()
  spec.csharp:
  - uid: Funique.Media.IMediaSend.SendWaitRoom
    name: SendWaitRoom
    nameWithType: IMediaSend.SendWaitRoom
    fullName: Funique.Media.IMediaSend.SendWaitRoom
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Media.IMediaSend.SendWaitRoom
    name: SendWaitRoom
    nameWithType: IMediaSend.SendWaitRoom
    fullName: Funique.Media.IMediaSend.SendWaitRoom
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Media.IMediaSend.SendVideoName(System.String)
  commentId: M:Funique.Media.IMediaSend.SendVideoName(System.String)
  parent: Funique.Media.IMediaSend
  isExternal: true
  name: SendVideoName(String)
  nameWithType: IMediaSend.SendVideoName(String)
  fullName: Funique.Media.IMediaSend.SendVideoName(System.String)
  spec.csharp:
  - uid: Funique.Media.IMediaSend.SendVideoName(System.String)
    name: SendVideoName
    nameWithType: IMediaSend.SendVideoName
    fullName: Funique.Media.IMediaSend.SendVideoName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Media.IMediaSend.SendVideoName(System.String)
    name: SendVideoName
    nameWithType: IMediaSend.SendVideoName
    fullName: Funique.Media.IMediaSend.SendVideoName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Media.IMediaSend.SendVideoTime(System.Single)
  commentId: M:Funique.Media.IMediaSend.SendVideoTime(System.Single)
  parent: Funique.Media.IMediaSend
  isExternal: true
  name: SendVideoTime(Single)
  nameWithType: IMediaSend.SendVideoTime(Single)
  fullName: Funique.Media.IMediaSend.SendVideoTime(System.Single)
  spec.csharp:
  - uid: Funique.Media.IMediaSend.SendVideoTime(System.Single)
    name: SendVideoTime
    nameWithType: IMediaSend.SendVideoTime
    fullName: Funique.Media.IMediaSend.SendVideoTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Media.IMediaSend.SendVideoTime(System.Single)
    name: SendVideoTime
    nameWithType: IMediaSend.SendVideoTime
    fullName: Funique.Media.IMediaSend.SendVideoTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Media.IMediaSend.SendReplayMode(Funique.ReplayState)
  commentId: M:Funique.Media.IMediaSend.SendReplayMode(Funique.ReplayState)
  parent: Funique.Media.IMediaSend
  name: SendReplayMode(ReplayState)
  nameWithType: IMediaSend.SendReplayMode(ReplayState)
  fullName: Funique.Media.IMediaSend.SendReplayMode(Funique.ReplayState)
  spec.csharp:
  - uid: Funique.Media.IMediaSend.SendReplayMode(Funique.ReplayState)
    name: SendReplayMode
    nameWithType: IMediaSend.SendReplayMode
    fullName: Funique.Media.IMediaSend.SendReplayMode
  - name: (
    nameWithType: (
    fullName: (
  - uid: Funique.ReplayState
    name: ReplayState
    nameWithType: ReplayState
    fullName: Funique.ReplayState
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Media.IMediaSend.SendReplayMode(Funique.ReplayState)
    name: SendReplayMode
    nameWithType: IMediaSend.SendReplayMode
    fullName: Funique.Media.IMediaSend.SendReplayMode
  - name: (
    nameWithType: (
    fullName: (
  - uid: Funique.ReplayState
    name: ReplayState
    nameWithType: ReplayState
    fullName: Funique.ReplayState
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Media.IMediaSend.SendSubtitleMode(Funique.SubtitleMode)
  commentId: M:Funique.Media.IMediaSend.SendSubtitleMode(Funique.SubtitleMode)
  parent: Funique.Media.IMediaSend
  name: SendSubtitleMode(SubtitleMode)
  nameWithType: IMediaSend.SendSubtitleMode(SubtitleMode)
  fullName: Funique.Media.IMediaSend.SendSubtitleMode(Funique.SubtitleMode)
  spec.csharp:
  - uid: Funique.Media.IMediaSend.SendSubtitleMode(Funique.SubtitleMode)
    name: SendSubtitleMode
    nameWithType: IMediaSend.SendSubtitleMode
    fullName: Funique.Media.IMediaSend.SendSubtitleMode
  - name: (
    nameWithType: (
    fullName: (
  - uid: Funique.SubtitleMode
    name: SubtitleMode
    nameWithType: SubtitleMode
    fullName: Funique.SubtitleMode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Media.IMediaSend.SendSubtitleMode(Funique.SubtitleMode)
    name: SendSubtitleMode
    nameWithType: IMediaSend.SendSubtitleMode
    fullName: Funique.Media.IMediaSend.SendSubtitleMode
  - name: (
    nameWithType: (
    fullName: (
  - uid: Funique.SubtitleMode
    name: SubtitleMode
    nameWithType: SubtitleMode
    fullName: Funique.SubtitleMode
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Media.IMediaSend.SendStereoMode(System.String)
  commentId: M:Funique.Media.IMediaSend.SendStereoMode(System.String)
  parent: Funique.Media.IMediaSend
  isExternal: true
  name: SendStereoMode(String)
  nameWithType: IMediaSend.SendStereoMode(String)
  fullName: Funique.Media.IMediaSend.SendStereoMode(System.String)
  spec.csharp:
  - uid: Funique.Media.IMediaSend.SendStereoMode(System.String)
    name: SendStereoMode
    nameWithType: IMediaSend.SendStereoMode
    fullName: Funique.Media.IMediaSend.SendStereoMode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Media.IMediaSend.SendStereoMode(System.String)
    name: SendStereoMode
    nameWithType: IMediaSend.SendStereoMode
    fullName: Funique.Media.IMediaSend.SendStereoMode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Media.IMediaSend.SendSchemeMode(Funique.PlayerScheme)
  commentId: M:Funique.Media.IMediaSend.SendSchemeMode(Funique.PlayerScheme)
  parent: Funique.Media.IMediaSend
  name: SendSchemeMode(PlayerScheme)
  nameWithType: IMediaSend.SendSchemeMode(PlayerScheme)
  fullName: Funique.Media.IMediaSend.SendSchemeMode(Funique.PlayerScheme)
  spec.csharp:
  - uid: Funique.Media.IMediaSend.SendSchemeMode(Funique.PlayerScheme)
    name: SendSchemeMode
    nameWithType: IMediaSend.SendSchemeMode
    fullName: Funique.Media.IMediaSend.SendSchemeMode
  - name: (
    nameWithType: (
    fullName: (
  - uid: Funique.PlayerScheme
    name: PlayerScheme
    nameWithType: PlayerScheme
    fullName: Funique.PlayerScheme
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Media.IMediaSend.SendSchemeMode(Funique.PlayerScheme)
    name: SendSchemeMode
    nameWithType: IMediaSend.SendSchemeMode
    fullName: Funique.Media.IMediaSend.SendSchemeMode
  - name: (
    nameWithType: (
    fullName: (
  - uid: Funique.PlayerScheme
    name: PlayerScheme
    nameWithType: PlayerScheme
    fullName: Funique.PlayerScheme
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Media.IMediaSend.SendMasterSettingState
  commentId: M:Funique.Media.IMediaSend.SendMasterSettingState
  parent: Funique.Media.IMediaSend
  name: SendMasterSettingState()
  nameWithType: IMediaSend.SendMasterSettingState()
  fullName: Funique.Media.IMediaSend.SendMasterSettingState()
  spec.csharp:
  - uid: Funique.Media.IMediaSend.SendMasterSettingState
    name: SendMasterSettingState
    nameWithType: IMediaSend.SendMasterSettingState
    fullName: Funique.Media.IMediaSend.SendMasterSettingState
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Media.IMediaSend.SendMasterSettingState
    name: SendMasterSettingState
    nameWithType: IMediaSend.SendMasterSettingState
    fullName: Funique.Media.IMediaSend.SendMasterSettingState
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Media.IMediaSend.SendAllPlayerOpen
  commentId: M:Funique.Media.IMediaSend.SendAllPlayerOpen
  parent: Funique.Media.IMediaSend
  name: SendAllPlayerOpen()
  nameWithType: IMediaSend.SendAllPlayerOpen()
  fullName: Funique.Media.IMediaSend.SendAllPlayerOpen()
  spec.csharp:
  - uid: Funique.Media.IMediaSend.SendAllPlayerOpen
    name: SendAllPlayerOpen
    nameWithType: IMediaSend.SendAllPlayerOpen
    fullName: Funique.Media.IMediaSend.SendAllPlayerOpen
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Media.IMediaSend.SendAllPlayerOpen
    name: SendAllPlayerOpen
    nameWithType: IMediaSend.SendAllPlayerOpen
    fullName: Funique.Media.IMediaSend.SendAllPlayerOpen
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Media.IMediaSend.SendAllPlayerClose
  commentId: M:Funique.Media.IMediaSend.SendAllPlayerClose
  parent: Funique.Media.IMediaSend
  name: SendAllPlayerClose()
  nameWithType: IMediaSend.SendAllPlayerClose()
  fullName: Funique.Media.IMediaSend.SendAllPlayerClose()
  spec.csharp:
  - uid: Funique.Media.IMediaSend.SendAllPlayerClose
    name: SendAllPlayerClose
    nameWithType: IMediaSend.SendAllPlayerClose
    fullName: Funique.Media.IMediaSend.SendAllPlayerClose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Media.IMediaSend.SendAllPlayerClose
    name: SendAllPlayerClose
    nameWithType: IMediaSend.SendAllPlayerClose
    fullName: Funique.Media.IMediaSend.SendAllPlayerClose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Media.IMediaControl
  commentId: T:Funique.Media.IMediaControl
  parent: Funique.Media
  name: IMediaControl
  nameWithType: IMediaControl
  fullName: Funique.Media.IMediaControl
- uid: Funique.Media.IMediaSend
  commentId: T:Funique.Media.IMediaSend
  parent: Funique.Media
  name: IMediaSend
  nameWithType: IMediaSend
  fullName: Funique.Media.IMediaSend
- uid: Funique.Media.IMediaServerUtility.Controller*
  commentId: Overload:Funique.Media.IMediaServerUtility.Controller
  name: Controller
  nameWithType: IMediaServerUtility.Controller
  fullName: Funique.Media.IMediaServerUtility.Controller
- uid: Funique.MediaControllerBase
  commentId: T:Funique.MediaControllerBase
  parent: Funique
  name: MediaControllerBase
  nameWithType: MediaControllerBase
  fullName: Funique.MediaControllerBase
- uid: Funique
  commentId: N:Funique
  name: Funique
  nameWithType: Funique
  fullName: Funique
