### YamlMime:ManagedReference
items:
- uid: Funique.InputHandler
  commentId: T:Funique.InputHandler
  id: InputHandler
  parent: Funique
  children:
  - Funique.InputHandler.HandleState(UnityEngine.XR.Interaction.Toolkit.XRController)
  langs:
  - csharp
  - vb
  name: InputHandler
  nameWithType: InputHandler
  fullName: Funique.InputHandler
  type: Class
  source:
    remote:
      path: Assets/FuniquePlugin/Client/XR Controller Port/Handlers/InputHandler.cs
      branch: main
      repo: https://github.com/Funique2022/project_unity_development.git
    id: InputHandler
    path: ../../../project_unity_development/Assets/FuniquePlugin/Client/XR Controller Port/Handlers/InputHandler.cs
    startLine: 5
  assemblies:
  - Funique.Client
  namespace: Funique
  syntax:
    content: 'public class InputHandler : ScriptableObject'
    content.vb: >-
      Public Class InputHandler

          Inherits ScriptableObject
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.ScriptableObject
  derivedClasses:
  - Funique.AxisHandler
  - Funique.AxisHandler2D
  - Funique.ButtonHandler
  inheritedMembers:
  - UnityEngine.ScriptableObject.SetDirty
  - UnityEngine.ScriptableObject.CreateInstance(System.String)
  - UnityEngine.ScriptableObject.CreateInstance(System.Type)
  - UnityEngine.ScriptableObject.CreateInstance``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Funique.InputHandler.HandleState(UnityEngine.XR.Interaction.Toolkit.XRController)
  commentId: M:Funique.InputHandler.HandleState(UnityEngine.XR.Interaction.Toolkit.XRController)
  id: HandleState(UnityEngine.XR.Interaction.Toolkit.XRController)
  parent: Funique.InputHandler
  langs:
  - csharp
  - vb
  name: HandleState(XRController)
  nameWithType: InputHandler.HandleState(XRController)
  fullName: Funique.InputHandler.HandleState(UnityEngine.XR.Interaction.Toolkit.XRController)
  type: Method
  source:
    remote:
      path: Assets/FuniquePlugin/Client/XR Controller Port/Handlers/InputHandler.cs
      branch: main
      repo: https://github.com/Funique2022/project_unity_development.git
    id: HandleState
    path: ../../../project_unity_development/Assets/FuniquePlugin/Client/XR Controller Port/Handlers/InputHandler.cs
    startLine: 7
  assemblies:
  - Funique.Client
  namespace: Funique
  syntax:
    content: public virtual void HandleState(XRController controller)
    parameters:
    - id: controller
      type: UnityEngine.XR.Interaction.Toolkit.XRController
    content.vb: Public Overridable Sub HandleState(controller As XRController)
  overload: Funique.InputHandler.HandleState*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Funique
  commentId: N:Funique
  name: Funique
  nameWithType: Funique
  fullName: Funique
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.ScriptableObject
  commentId: T:UnityEngine.ScriptableObject
  parent: UnityEngine
  isExternal: true
  name: ScriptableObject
  nameWithType: ScriptableObject
  fullName: UnityEngine.ScriptableObject
- uid: UnityEngine.ScriptableObject.SetDirty
  commentId: M:UnityEngine.ScriptableObject.SetDirty
  parent: UnityEngine.ScriptableObject
  isExternal: true
  name: SetDirty()
  nameWithType: ScriptableObject.SetDirty()
  fullName: UnityEngine.ScriptableObject.SetDirty()
  spec.csharp:
  - uid: UnityEngine.ScriptableObject.SetDirty
    name: SetDirty
    nameWithType: ScriptableObject.SetDirty
    fullName: UnityEngine.ScriptableObject.SetDirty
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.ScriptableObject.SetDirty
    name: SetDirty
    nameWithType: ScriptableObject.SetDirty
    fullName: UnityEngine.ScriptableObject.SetDirty
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.ScriptableObject.CreateInstance(System.String)
  commentId: M:UnityEngine.ScriptableObject.CreateInstance(System.String)
  parent: UnityEngine.ScriptableObject
  isExternal: true
  name: CreateInstance(String)
  nameWithType: ScriptableObject.CreateInstance(String)
  fullName: UnityEngine.ScriptableObject.CreateInstance(System.String)
  spec.csharp:
  - uid: UnityEngine.ScriptableObject.CreateInstance(System.String)
    name: CreateInstance
    nameWithType: ScriptableObject.CreateInstance
    fullName: UnityEngine.ScriptableObject.CreateInstance
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.ScriptableObject.CreateInstance(System.String)
    name: CreateInstance
    nameWithType: ScriptableObject.CreateInstance
    fullName: UnityEngine.ScriptableObject.CreateInstance
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.ScriptableObject.CreateInstance(System.Type)
  commentId: M:UnityEngine.ScriptableObject.CreateInstance(System.Type)
  parent: UnityEngine.ScriptableObject
  isExternal: true
  name: CreateInstance(Type)
  nameWithType: ScriptableObject.CreateInstance(Type)
  fullName: UnityEngine.ScriptableObject.CreateInstance(System.Type)
  spec.csharp:
  - uid: UnityEngine.ScriptableObject.CreateInstance(System.Type)
    name: CreateInstance
    nameWithType: ScriptableObject.CreateInstance
    fullName: UnityEngine.ScriptableObject.CreateInstance
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.ScriptableObject.CreateInstance(System.Type)
    name: CreateInstance
    nameWithType: ScriptableObject.CreateInstance
    fullName: UnityEngine.ScriptableObject.CreateInstance
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.ScriptableObject.CreateInstance``1
  commentId: M:UnityEngine.ScriptableObject.CreateInstance``1
  parent: UnityEngine.ScriptableObject
  isExternal: true
  name: CreateInstance<T>()
  nameWithType: ScriptableObject.CreateInstance<T>()
  fullName: UnityEngine.ScriptableObject.CreateInstance<T>()
  nameWithType.vb: ScriptableObject.CreateInstance(Of T)()
  fullName.vb: UnityEngine.ScriptableObject.CreateInstance(Of T)()
  name.vb: CreateInstance(Of T)()
  spec.csharp:
  - uid: UnityEngine.ScriptableObject.CreateInstance``1
    name: CreateInstance<T>
    nameWithType: ScriptableObject.CreateInstance<T>
    fullName: UnityEngine.ScriptableObject.CreateInstance<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.ScriptableObject.CreateInstance``1
    name: CreateInstance(Of T)
    nameWithType: ScriptableObject.CreateInstance(Of T)
    fullName: UnityEngine.ScriptableObject.CreateInstance(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Funique.InputHandler.HandleState*
  commentId: Overload:Funique.InputHandler.HandleState
  name: HandleState
  nameWithType: InputHandler.HandleState
  fullName: Funique.InputHandler.HandleState
- uid: UnityEngine.XR.Interaction.Toolkit.XRController
  commentId: T:UnityEngine.XR.Interaction.Toolkit.XRController
  parent: UnityEngine.XR.Interaction.Toolkit
  isExternal: true
  name: XRController
  nameWithType: XRController
  fullName: UnityEngine.XR.Interaction.Toolkit.XRController
- uid: UnityEngine.XR.Interaction.Toolkit
  commentId: N:UnityEngine.XR.Interaction.Toolkit
  isExternal: true
  name: UnityEngine.XR.Interaction.Toolkit
  nameWithType: UnityEngine.XR.Interaction.Toolkit
  fullName: UnityEngine.XR.Interaction.Toolkit
