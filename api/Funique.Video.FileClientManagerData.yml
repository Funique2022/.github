### YamlMime:ManagedReference
items:
- uid: Funique.Video.FileClientManagerData
  commentId: T:Funique.Video.FileClientManagerData
  id: FileClientManagerData
  parent: Funique.Video
  children:
  - Funique.Video.FileClientManagerData.Image_Path
  - Funique.Video.FileClientManagerData.Image_UseRoot
  - Funique.Video.FileClientManagerData.SRT_Path
  - Funique.Video.FileClientManagerData.SRT_UseRoot
  - Funique.Video.FileClientManagerData.TBE_Path
  - Funique.Video.FileClientManagerData.TBE_UseRoot
  - Funique.Video.FileClientManagerData.Video_Path
  - Funique.Video.FileClientManagerData.Video_UseRoot
  langs:
  - csharp
  - vb
  name: FileClientManagerData
  nameWithType: FileClientManagerData
  fullName: Funique.Video.FileClientManagerData
  type: Struct
  source:
    remote:
      path: Struct/FileClientManagerData.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_video.git
    id: FileClientManagerData
    path: ../../../project_unity_development/Assets/FuniquePlugin/Video/Struct/FileClientManagerData.cs
    startLine: 10
  assemblies:
  - Funique.Video
  namespace: Funique.Video
  summary: "\nFile manager configuration <br />\n------------------------------------------------ <br />\n檔案管理配置\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public struct FileClientManagerData
    content.vb: >-
      <Serializable>

      Public Structure FileClientManagerData
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Funique.Video.FileClientManagerData.Video_UseRoot
  commentId: F:Funique.Video.FileClientManagerData.Video_UseRoot
  id: Video_UseRoot
  parent: Funique.Video.FileClientManagerData
  langs:
  - csharp
  - vb
  name: Video_UseRoot
  nameWithType: FileClientManagerData.Video_UseRoot
  fullName: Funique.Video.FileClientManagerData.Video_UseRoot
  type: Field
  source:
    remote:
      path: Struct/FileClientManagerData.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_video.git
    id: Video_UseRoot
    path: ../../../project_unity_development/Assets/FuniquePlugin/Video/Struct/FileClientManagerData.cs
    startLine: 15
  assemblies:
  - Funique.Video
  namespace: Funique.Video
  syntax:
    content: >-
      [Tooltip("Use the root of streaming folder path as reading entry point for video container")]

      [Header("Path Setting")]

      [SerializeField]

      public bool Video_UseRoot
    return:
      type: System.Boolean
    content.vb: >-
      <Tooltip("Use the root of streaming folder path as reading entry point for video container")>

      <Header("Path Setting")>

      <SerializeField>

      Public Video_UseRoot As Boolean
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use the root of streaming folder path as reading entry point for video container
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Path Setting
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Video.FileClientManagerData.Video_Path
  commentId: F:Funique.Video.FileClientManagerData.Video_Path
  id: Video_Path
  parent: Funique.Video.FileClientManagerData
  langs:
  - csharp
  - vb
  name: Video_Path
  nameWithType: FileClientManagerData.Video_Path
  fullName: Funique.Video.FileClientManagerData.Video_Path
  type: Field
  source:
    remote:
      path: Struct/FileClientManagerData.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_video.git
    id: Video_Path
    path: ../../../project_unity_development/Assets/FuniquePlugin/Video/Struct/FileClientManagerData.cs
    startLine: 17
  assemblies:
  - Funique.Video
  namespace: Funique.Video
  syntax:
    content: >-
      [HideIf("Video_UseRoot", true)]

      [SerializeField]

      public string Video_Path
    return:
      type: System.String
    content.vb: >-
      <HideIf("Video_UseRoot", True)>

      <SerializeField>

      Public Video_Path As String
  attributes:
  - type: Funique.HideIf
    ctor: Funique.HideIf.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: Video_UseRoot
    - type: System.Boolean
      value: true
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Video.FileClientManagerData.Image_UseRoot
  commentId: F:Funique.Video.FileClientManagerData.Image_UseRoot
  id: Image_UseRoot
  parent: Funique.Video.FileClientManagerData
  langs:
  - csharp
  - vb
  name: Image_UseRoot
  nameWithType: FileClientManagerData.Image_UseRoot
  fullName: Funique.Video.FileClientManagerData.Image_UseRoot
  type: Field
  source:
    remote:
      path: Struct/FileClientManagerData.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_video.git
    id: Image_UseRoot
    path: ../../../project_unity_development/Assets/FuniquePlugin/Video/Struct/FileClientManagerData.cs
    startLine: 21
  assemblies:
  - Funique.Video
  namespace: Funique.Video
  syntax:
    content: >-
      [Space]

      [Tooltip("Use the root of streaming folder path as reading entry point for image container")]

      [SerializeField]

      public bool Image_UseRoot
    return:
      type: System.Boolean
    content.vb: >-
      <Space>

      <Tooltip("Use the root of streaming folder path as reading entry point for image container")>

      <SerializeField>

      Public Image_UseRoot As Boolean
  attributes:
  - type: UnityEngine.SpaceAttribute
    ctor: UnityEngine.SpaceAttribute.#ctor
    arguments: []
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use the root of streaming folder path as reading entry point for image container
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Video.FileClientManagerData.Image_Path
  commentId: F:Funique.Video.FileClientManagerData.Image_Path
  id: Image_Path
  parent: Funique.Video.FileClientManagerData
  langs:
  - csharp
  - vb
  name: Image_Path
  nameWithType: FileClientManagerData.Image_Path
  fullName: Funique.Video.FileClientManagerData.Image_Path
  type: Field
  source:
    remote:
      path: Struct/FileClientManagerData.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_video.git
    id: Image_Path
    path: ../../../project_unity_development/Assets/FuniquePlugin/Video/Struct/FileClientManagerData.cs
    startLine: 23
  assemblies:
  - Funique.Video
  namespace: Funique.Video
  syntax:
    content: >-
      [HideIf("Image_UseRoot", true)]

      [SerializeField]

      public string Image_Path
    return:
      type: System.String
    content.vb: >-
      <HideIf("Image_UseRoot", True)>

      <SerializeField>

      Public Image_Path As String
  attributes:
  - type: Funique.HideIf
    ctor: Funique.HideIf.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: Image_UseRoot
    - type: System.Boolean
      value: true
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Video.FileClientManagerData.TBE_UseRoot
  commentId: F:Funique.Video.FileClientManagerData.TBE_UseRoot
  id: TBE_UseRoot
  parent: Funique.Video.FileClientManagerData
  langs:
  - csharp
  - vb
  name: TBE_UseRoot
  nameWithType: FileClientManagerData.TBE_UseRoot
  fullName: Funique.Video.FileClientManagerData.TBE_UseRoot
  type: Field
  source:
    remote:
      path: Struct/FileClientManagerData.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_video.git
    id: TBE_UseRoot
    path: ../../../project_unity_development/Assets/FuniquePlugin/Video/Struct/FileClientManagerData.cs
    startLine: 27
  assemblies:
  - Funique.Video
  namespace: Funique.Video
  syntax:
    content: >-
      [Space]

      [Tooltip("Use the root of streaming folder path as reading entry point for TBE audio file container")]

      [SerializeField]

      public bool TBE_UseRoot
    return:
      type: System.Boolean
    content.vb: >-
      <Space>

      <Tooltip("Use the root of streaming folder path as reading entry point for TBE audio file container")>

      <SerializeField>

      Public TBE_UseRoot As Boolean
  attributes:
  - type: UnityEngine.SpaceAttribute
    ctor: UnityEngine.SpaceAttribute.#ctor
    arguments: []
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use the root of streaming folder path as reading entry point for TBE audio file container
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Video.FileClientManagerData.TBE_Path
  commentId: F:Funique.Video.FileClientManagerData.TBE_Path
  id: TBE_Path
  parent: Funique.Video.FileClientManagerData
  langs:
  - csharp
  - vb
  name: TBE_Path
  nameWithType: FileClientManagerData.TBE_Path
  fullName: Funique.Video.FileClientManagerData.TBE_Path
  type: Field
  source:
    remote:
      path: Struct/FileClientManagerData.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_video.git
    id: TBE_Path
    path: ../../../project_unity_development/Assets/FuniquePlugin/Video/Struct/FileClientManagerData.cs
    startLine: 29
  assemblies:
  - Funique.Video
  namespace: Funique.Video
  syntax:
    content: >-
      [HideIf("TBE_UseRoot", true)]

      [SerializeField]

      public string TBE_Path
    return:
      type: System.String
    content.vb: >-
      <HideIf("TBE_UseRoot", True)>

      <SerializeField>

      Public TBE_Path As String
  attributes:
  - type: Funique.HideIf
    ctor: Funique.HideIf.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: TBE_UseRoot
    - type: System.Boolean
      value: true
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Video.FileClientManagerData.SRT_UseRoot
  commentId: F:Funique.Video.FileClientManagerData.SRT_UseRoot
  id: SRT_UseRoot
  parent: Funique.Video.FileClientManagerData
  langs:
  - csharp
  - vb
  name: SRT_UseRoot
  nameWithType: FileClientManagerData.SRT_UseRoot
  fullName: Funique.Video.FileClientManagerData.SRT_UseRoot
  type: Field
  source:
    remote:
      path: Struct/FileClientManagerData.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_video.git
    id: SRT_UseRoot
    path: ../../../project_unity_development/Assets/FuniquePlugin/Video/Struct/FileClientManagerData.cs
    startLine: 33
  assemblies:
  - Funique.Video
  namespace: Funique.Video
  syntax:
    content: >-
      [Space]

      [Tooltip("Use the root of streaming folder path as reading entry point SRT subtitle file container")]

      [SerializeField]

      public bool SRT_UseRoot
    return:
      type: System.Boolean
    content.vb: >-
      <Space>

      <Tooltip("Use the root of streaming folder path as reading entry point SRT subtitle file container")>

      <SerializeField>

      Public SRT_UseRoot As Boolean
  attributes:
  - type: UnityEngine.SpaceAttribute
    ctor: UnityEngine.SpaceAttribute.#ctor
    arguments: []
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use the root of streaming folder path as reading entry point SRT subtitle file container
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Video.FileClientManagerData.SRT_Path
  commentId: F:Funique.Video.FileClientManagerData.SRT_Path
  id: SRT_Path
  parent: Funique.Video.FileClientManagerData
  langs:
  - csharp
  - vb
  name: SRT_Path
  nameWithType: FileClientManagerData.SRT_Path
  fullName: Funique.Video.FileClientManagerData.SRT_Path
  type: Field
  source:
    remote:
      path: Struct/FileClientManagerData.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_video.git
    id: SRT_Path
    path: ../../../project_unity_development/Assets/FuniquePlugin/Video/Struct/FileClientManagerData.cs
    startLine: 35
  assemblies:
  - Funique.Video
  namespace: Funique.Video
  syntax:
    content: >-
      [HideIf("SRT_UseRoot", true)]

      [SerializeField]

      public string SRT_Path
    return:
      type: System.String
    content.vb: >-
      <HideIf("SRT_UseRoot", True)>

      <SerializeField>

      Public SRT_Path As String
  attributes:
  - type: Funique.HideIf
    ctor: Funique.HideIf.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: SRT_UseRoot
    - type: System.Boolean
      value: true
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Funique.Video
  commentId: N:Funique.Video
  name: Funique.Video
  nameWithType: Funique.Video
  fullName: Funique.Video
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
