### YamlMime:ManagedReference
items:
- uid: Funique.Manager.CinemaManagerServerUtility
  commentId: T:Funique.Manager.CinemaManagerServerUtility
  id: CinemaManagerServerUtility
  parent: Funique.Manager
  children:
  - Funique.Manager.CinemaManagerServerUtility.CinemaCount
  - Funique.Manager.CinemaManagerServerUtility.CinemaDataDict
  - Funique.Manager.CinemaManagerServerUtility.CinemaSelectionDataChanged
  - Funique.Manager.CinemaManagerServerUtility.CinemaSelectionIndexChanged
  - Funique.Manager.CinemaManagerServerUtility.CinemaViewDict
  - Funique.Manager.CinemaManagerServerUtility.CleanCinemaInstance
  - Funique.Manager.CinemaManagerServerUtility.CreateCinema(System.Int32)
  - Funique.Manager.CinemaManagerServerUtility.CreateCinemaLabel(System.Int32)
  - Funique.Manager.CinemaManagerServerUtility.GetDataCollectionByCinemaIndex(System.Int32)
  - Funique.Manager.CinemaManagerServerUtility.OnCinemaSelectionChanged(System.Int32)
  - Funique.Manager.CinemaManagerServerUtility.RefCinema
  - Funique.Manager.CinemaManagerServerUtility.RefCinemaLabel
  - Funique.Manager.CinemaManagerServerUtility.ViewDict
  langs:
  - csharp
  - vb
  name: CinemaManagerServerUtility
  nameWithType: CinemaManagerServerUtility
  fullName: Funique.Manager.CinemaManagerServerUtility
  type: Class
  source:
    remote:
      path: CinemaManagerServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: CinemaManagerServerUtility
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/CinemaManagerServerUtility.cs
    startLine: 12
  assemblies:
  - Funique.Cinema
  namespace: Funique.Manager
  summary: "\nServer cinema manager <br />\n------------------------------------------------ <br />\n伺服器劇院管理員\n"
  example: []
  syntax:
    content: 'public class CinemaManagerServerUtility : ManagerBase<CinemaManagerServerData>, IDisposable, ICinemaServerUtility, IModuleBase<CinemaManagerServerData>'
    content.vb: >-
      Public Class CinemaManagerServerUtility

          Inherits ManagerBase(Of CinemaManagerServerData)

          Implements IDisposable, ICinemaServerUtility, IModuleBase(Of CinemaManagerServerData)
  inheritance:
  - System.Object
  - Funique.Manager.ManagerBase
  - Funique.Manager.ManagerBase{Funique.Cinema.CinemaManagerServerData}
  implements:
  - System.IDisposable
  - Funique.Cinema.ICinemaServerUtility
  - Funique.IModuleBase{Funique.Cinema.CinemaManagerServerData}
  inheritedMembers:
  - Funique.Manager.ManagerBase{Funique.Cinema.CinemaManagerServerData}.config
  - Funique.Manager.ManagerBase{Funique.Cinema.CinemaManagerServerData}.RegisterConfig(Funique.Cinema.CinemaManagerServerData)
  - Funique.Manager.ManagerBase{Funique.Cinema.CinemaManagerServerData}.Loaded(Funique.Cinema.CinemaManagerServerData)
  - Funique.Manager.ManagerBase.Initialization
  - Funique.Manager.ManagerBase.FrameUpdate
  - Funique.Manager.ManagerBase.Shutdown
  - Funique.Manager.ManagerBase.Dispose
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Funique.Manager.CinemaManagerServerUtility.RefCinema
  commentId: P:Funique.Manager.CinemaManagerServerUtility.RefCinema
  id: RefCinema
  parent: Funique.Manager.CinemaManagerServerUtility
  langs:
  - csharp
  - vb
  name: RefCinema
  nameWithType: CinemaManagerServerUtility.RefCinema
  fullName: Funique.Manager.CinemaManagerServerUtility.RefCinema
  type: Property
  source:
    remote:
      path: CinemaManagerServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: RefCinema
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/CinemaManagerServerUtility.cs
    startLine: 16
  assemblies:
  - Funique.Cinema
  namespace: Funique.Manager
  syntax:
    content: public GameObject RefCinema { get; }
    parameters: []
    return:
      type: UnityEngine.GameObject
    content.vb: Public ReadOnly Property RefCinema As GameObject
  overload: Funique.Manager.CinemaManagerServerUtility.RefCinema*
  implements:
  - Funique.Cinema.ICinemaServerUtility.RefCinema
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Funique.Manager.CinemaManagerServerUtility.RefCinemaLabel
  commentId: P:Funique.Manager.CinemaManagerServerUtility.RefCinemaLabel
  id: RefCinemaLabel
  parent: Funique.Manager.CinemaManagerServerUtility
  langs:
  - csharp
  - vb
  name: RefCinemaLabel
  nameWithType: CinemaManagerServerUtility.RefCinemaLabel
  fullName: Funique.Manager.CinemaManagerServerUtility.RefCinemaLabel
  type: Property
  source:
    remote:
      path: CinemaManagerServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: RefCinemaLabel
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/CinemaManagerServerUtility.cs
    startLine: 17
  assemblies:
  - Funique.Cinema
  namespace: Funique.Manager
  syntax:
    content: public GameObject RefCinemaLabel { get; }
    parameters: []
    return:
      type: UnityEngine.GameObject
    content.vb: Public ReadOnly Property RefCinemaLabel As GameObject
  overload: Funique.Manager.CinemaManagerServerUtility.RefCinemaLabel*
  implements:
  - Funique.Cinema.ICinemaServerUtility.RefCinemaLabel
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Funique.Manager.CinemaManagerServerUtility.CinemaCount
  commentId: P:Funique.Manager.CinemaManagerServerUtility.CinemaCount
  id: CinemaCount
  parent: Funique.Manager.CinemaManagerServerUtility
  langs:
  - csharp
  - vb
  name: CinemaCount
  nameWithType: CinemaManagerServerUtility.CinemaCount
  fullName: Funique.Manager.CinemaManagerServerUtility.CinemaCount
  type: Property
  source:
    remote:
      path: CinemaManagerServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: CinemaCount
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/CinemaManagerServerUtility.cs
    startLine: 18
  assemblies:
  - Funique.Cinema
  namespace: Funique.Manager
  syntax:
    content: public int CinemaCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property CinemaCount As Integer
  overload: Funique.Manager.CinemaManagerServerUtility.CinemaCount*
  implements:
  - Funique.Cinema.ICinemaServerUtility.CinemaCount
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Funique.Manager.CinemaManagerServerUtility.ViewDict
  commentId: P:Funique.Manager.CinemaManagerServerUtility.ViewDict
  id: ViewDict
  parent: Funique.Manager.CinemaManagerServerUtility
  langs:
  - csharp
  - vb
  name: ViewDict
  nameWithType: CinemaManagerServerUtility.ViewDict
  fullName: Funique.Manager.CinemaManagerServerUtility.ViewDict
  type: Property
  source:
    remote:
      path: CinemaManagerServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: ViewDict
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/CinemaManagerServerUtility.cs
    startLine: 20
  assemblies:
  - Funique.Cinema
  namespace: Funique.Manager
  syntax:
    content: public Dictionary<int, CinemaView> ViewDict { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.Int32,Funique.Cinema.CinemaView}
    content.vb: Public Property ViewDict As Dictionary(Of Integer, CinemaView)
  overload: Funique.Manager.CinemaManagerServerUtility.ViewDict*
  implements:
  - Funique.Cinema.ICinemaServerUtility.ViewDict
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Funique.Manager.CinemaManagerServerUtility.CinemaDataDict
  commentId: P:Funique.Manager.CinemaManagerServerUtility.CinemaDataDict
  id: CinemaDataDict
  parent: Funique.Manager.CinemaManagerServerUtility
  langs:
  - csharp
  - vb
  name: CinemaDataDict
  nameWithType: CinemaManagerServerUtility.CinemaDataDict
  fullName: Funique.Manager.CinemaManagerServerUtility.CinemaDataDict
  type: Property
  source:
    remote:
      path: CinemaManagerServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: CinemaDataDict
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/CinemaManagerServerUtility.cs
    startLine: 21
  assemblies:
  - Funique.Cinema
  namespace: Funique.Manager
  syntax:
    content: public Dictionary<int, CinemaLabelData> CinemaDataDict { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.Int32,Funique.Cinema.CinemaLabelData}
    content.vb: Public Property CinemaDataDict As Dictionary(Of Integer, CinemaLabelData)
  overload: Funique.Manager.CinemaManagerServerUtility.CinemaDataDict*
  implements:
  - Funique.Cinema.ICinemaServerUtility.CinemaDataDict
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Funique.Manager.CinemaManagerServerUtility.CinemaViewDict
  commentId: P:Funique.Manager.CinemaManagerServerUtility.CinemaViewDict
  id: CinemaViewDict
  parent: Funique.Manager.CinemaManagerServerUtility
  langs:
  - csharp
  - vb
  name: CinemaViewDict
  nameWithType: CinemaManagerServerUtility.CinemaViewDict
  fullName: Funique.Manager.CinemaManagerServerUtility.CinemaViewDict
  type: Property
  source:
    remote:
      path: CinemaManagerServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: CinemaViewDict
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/CinemaManagerServerUtility.cs
    startLine: 22
  assemblies:
  - Funique.Cinema
  namespace: Funique.Manager
  syntax:
    content: public Dictionary<int, CinemaLabelViewBase> CinemaViewDict { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.Int32,Funique.Cinema.CinemaLabelViewBase}
    content.vb: Public Property CinemaViewDict As Dictionary(Of Integer, CinemaLabelViewBase)
  overload: Funique.Manager.CinemaManagerServerUtility.CinemaViewDict*
  implements:
  - Funique.Cinema.ICinemaServerUtility.CinemaViewDict
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Funique.Manager.CinemaManagerServerUtility.CinemaSelectionIndexChanged
  commentId: E:Funique.Manager.CinemaManagerServerUtility.CinemaSelectionIndexChanged
  id: CinemaSelectionIndexChanged
  parent: Funique.Manager.CinemaManagerServerUtility
  langs:
  - csharp
  - vb
  name: CinemaSelectionIndexChanged
  nameWithType: CinemaManagerServerUtility.CinemaSelectionIndexChanged
  fullName: Funique.Manager.CinemaManagerServerUtility.CinemaSelectionIndexChanged
  type: Event
  source:
    remote:
      path: CinemaManagerServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: CinemaSelectionIndexChanged
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/CinemaManagerServerUtility.cs
    startLine: 28
  assemblies:
  - Funique.Cinema
  namespace: Funique.Manager
  syntax:
    content: public event EventHandler<int> CinemaSelectionIndexChanged
    return:
      type: System.EventHandler{System.Int32}
    content.vb: Public Event CinemaSelectionIndexChanged As EventHandler(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Manager.CinemaManagerServerUtility.CinemaSelectionDataChanged
  commentId: E:Funique.Manager.CinemaManagerServerUtility.CinemaSelectionDataChanged
  id: CinemaSelectionDataChanged
  parent: Funique.Manager.CinemaManagerServerUtility
  langs:
  - csharp
  - vb
  name: CinemaSelectionDataChanged
  nameWithType: CinemaManagerServerUtility.CinemaSelectionDataChanged
  fullName: Funique.Manager.CinemaManagerServerUtility.CinemaSelectionDataChanged
  type: Event
  source:
    remote:
      path: CinemaManagerServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: CinemaSelectionDataChanged
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/CinemaManagerServerUtility.cs
    startLine: 29
  assemblies:
  - Funique.Cinema
  namespace: Funique.Manager
  syntax:
    content: public event EventHandler<CinemaDataCollection> CinemaSelectionDataChanged
    return:
      type: System.EventHandler{Funique.Cinema.CinemaDataCollection}
    content.vb: Public Event CinemaSelectionDataChanged As EventHandler(Of CinemaDataCollection)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Manager.CinemaManagerServerUtility.CleanCinemaInstance
  commentId: M:Funique.Manager.CinemaManagerServerUtility.CleanCinemaInstance
  id: CleanCinemaInstance
  parent: Funique.Manager.CinemaManagerServerUtility
  langs:
  - csharp
  - vb
  name: CleanCinemaInstance()
  nameWithType: CinemaManagerServerUtility.CleanCinemaInstance()
  fullName: Funique.Manager.CinemaManagerServerUtility.CleanCinemaInstance()
  type: Method
  source:
    remote:
      path: CinemaManagerServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: CleanCinemaInstance
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/CinemaManagerServerUtility.cs
    startLine: 35
  assemblies:
  - Funique.Cinema
  namespace: Funique.Manager
  syntax:
    content: public void CleanCinemaInstance()
    content.vb: Public Sub CleanCinemaInstance
  overload: Funique.Manager.CinemaManagerServerUtility.CleanCinemaInstance*
  implements:
  - Funique.Cinema.ICinemaServerUtility.CleanCinemaInstance
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Manager.CinemaManagerServerUtility.CreateCinema(System.Int32)
  commentId: M:Funique.Manager.CinemaManagerServerUtility.CreateCinema(System.Int32)
  id: CreateCinema(System.Int32)
  parent: Funique.Manager.CinemaManagerServerUtility
  langs:
  - csharp
  - vb
  name: CreateCinema(Int32)
  nameWithType: CinemaManagerServerUtility.CreateCinema(Int32)
  fullName: Funique.Manager.CinemaManagerServerUtility.CreateCinema(System.Int32)
  type: Method
  source:
    remote:
      path: CinemaManagerServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: CreateCinema
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/CinemaManagerServerUtility.cs
    startLine: 44
  assemblies:
  - Funique.Cinema
  namespace: Funique.Manager
  syntax:
    content: public Transform CreateCinema(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: UnityEngine.Transform
    content.vb: Public Function CreateCinema(index As Integer) As Transform
  overload: Funique.Manager.CinemaManagerServerUtility.CreateCinema*
  implements:
  - Funique.Cinema.ICinemaServerUtility.CreateCinema(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Manager.CinemaManagerServerUtility.CreateCinemaLabel(System.Int32)
  commentId: M:Funique.Manager.CinemaManagerServerUtility.CreateCinemaLabel(System.Int32)
  id: CreateCinemaLabel(System.Int32)
  parent: Funique.Manager.CinemaManagerServerUtility
  langs:
  - csharp
  - vb
  name: CreateCinemaLabel(Int32)
  nameWithType: CinemaManagerServerUtility.CreateCinemaLabel(Int32)
  fullName: Funique.Manager.CinemaManagerServerUtility.CreateCinemaLabel(System.Int32)
  type: Method
  source:
    remote:
      path: CinemaManagerServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: CreateCinemaLabel
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/CinemaManagerServerUtility.cs
    startLine: 51
  assemblies:
  - Funique.Cinema
  namespace: Funique.Manager
  syntax:
    content: public Transform CreateCinemaLabel(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: UnityEngine.Transform
    content.vb: Public Function CreateCinemaLabel(index As Integer) As Transform
  overload: Funique.Manager.CinemaManagerServerUtility.CreateCinemaLabel*
  implements:
  - Funique.Cinema.ICinemaServerUtility.CreateCinemaLabel(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Funique.Manager.CinemaManagerServerUtility.OnCinemaSelectionChanged(System.Int32)
  commentId: M:Funique.Manager.CinemaManagerServerUtility.OnCinemaSelectionChanged(System.Int32)
  id: OnCinemaSelectionChanged(System.Int32)
  parent: Funique.Manager.CinemaManagerServerUtility
  langs:
  - csharp
  - vb
  name: OnCinemaSelectionChanged(Int32)
  nameWithType: CinemaManagerServerUtility.OnCinemaSelectionChanged(Int32)
  fullName: Funique.Manager.CinemaManagerServerUtility.OnCinemaSelectionChanged(System.Int32)
  type: Method
  source:
    remote:
      path: CinemaManagerServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: OnCinemaSelectionChanged
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/CinemaManagerServerUtility.cs
    startLine: 66
  assemblies:
  - Funique.Cinema
  namespace: Funique.Manager
  syntax:
    content: protected void OnCinemaSelectionChanged(int index)
    parameters:
    - id: index
      type: System.Int32
    content.vb: Protected Sub OnCinemaSelectionChanged(index As Integer)
  overload: Funique.Manager.CinemaManagerServerUtility.OnCinemaSelectionChanged*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Funique.Manager.CinemaManagerServerUtility.GetDataCollectionByCinemaIndex(System.Int32)
  commentId: M:Funique.Manager.CinemaManagerServerUtility.GetDataCollectionByCinemaIndex(System.Int32)
  id: GetDataCollectionByCinemaIndex(System.Int32)
  parent: Funique.Manager.CinemaManagerServerUtility
  langs:
  - csharp
  - vb
  name: GetDataCollectionByCinemaIndex(Int32)
  nameWithType: CinemaManagerServerUtility.GetDataCollectionByCinemaIndex(Int32)
  fullName: Funique.Manager.CinemaManagerServerUtility.GetDataCollectionByCinemaIndex(System.Int32)
  type: Method
  source:
    remote:
      path: CinemaManagerServerUtility.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_cinema.git
    id: GetDataCollectionByCinemaIndex
    path: ../../../project_unity_development/Assets/FuniquePlugin/Cinema/CinemaManagerServerUtility.cs
    startLine: 76
  assemblies:
  - Funique.Cinema
  namespace: Funique.Manager
  syntax:
    content: public CinemaDataCollection GetDataCollectionByCinemaIndex(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: Funique.Cinema.CinemaDataCollection
    content.vb: Public Function GetDataCollectionByCinemaIndex(index As Integer) As CinemaDataCollection
  overload: Funique.Manager.CinemaManagerServerUtility.GetDataCollectionByCinemaIndex*
  implements:
  - Funique.Cinema.ICinemaServerUtility.GetDataCollectionByCinemaIndex(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Funique.Manager
  commentId: N:Funique.Manager
  name: Funique.Manager
  nameWithType: Funique.Manager
  fullName: Funique.Manager
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Funique.Manager.ManagerBase
  commentId: T:Funique.Manager.ManagerBase
  parent: Funique.Manager
  name: ManagerBase
  nameWithType: ManagerBase
  fullName: Funique.Manager.ManagerBase
- uid: Funique.Manager.ManagerBase{Funique.Cinema.CinemaManagerServerData}
  commentId: T:Funique.Manager.ManagerBase{Funique.Cinema.CinemaManagerServerData}
  parent: Funique.Manager
  definition: Funique.Manager.ManagerBase`1
  name: ManagerBase<CinemaManagerServerData>
  nameWithType: ManagerBase<CinemaManagerServerData>
  fullName: Funique.Manager.ManagerBase<Funique.Cinema.CinemaManagerServerData>
  nameWithType.vb: ManagerBase(Of CinemaManagerServerData)
  fullName.vb: Funique.Manager.ManagerBase(Of Funique.Cinema.CinemaManagerServerData)
  name.vb: ManagerBase(Of CinemaManagerServerData)
  spec.csharp:
  - uid: Funique.Manager.ManagerBase`1
    name: ManagerBase
    nameWithType: ManagerBase
    fullName: Funique.Manager.ManagerBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Funique.Cinema.CinemaManagerServerData
    name: CinemaManagerServerData
    nameWithType: CinemaManagerServerData
    fullName: Funique.Cinema.CinemaManagerServerData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Funique.Manager.ManagerBase`1
    name: ManagerBase
    nameWithType: ManagerBase
    fullName: Funique.Manager.ManagerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Funique.Cinema.CinemaManagerServerData
    name: CinemaManagerServerData
    nameWithType: CinemaManagerServerData
    fullName: Funique.Cinema.CinemaManagerServerData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Funique.Cinema.ICinemaServerUtility
  commentId: T:Funique.Cinema.ICinemaServerUtility
  parent: Funique.Cinema
  name: ICinemaServerUtility
  nameWithType: ICinemaServerUtility
  fullName: Funique.Cinema.ICinemaServerUtility
- uid: Funique.IModuleBase{Funique.Cinema.CinemaManagerServerData}
  commentId: T:Funique.IModuleBase{Funique.Cinema.CinemaManagerServerData}
  parent: Funique
  definition: Funique.IModuleBase`1
  name: IModuleBase<CinemaManagerServerData>
  nameWithType: IModuleBase<CinemaManagerServerData>
  fullName: Funique.IModuleBase<Funique.Cinema.CinemaManagerServerData>
  nameWithType.vb: IModuleBase(Of CinemaManagerServerData)
  fullName.vb: Funique.IModuleBase(Of Funique.Cinema.CinemaManagerServerData)
  name.vb: IModuleBase(Of CinemaManagerServerData)
  spec.csharp:
  - uid: Funique.IModuleBase`1
    name: IModuleBase
    nameWithType: IModuleBase
    fullName: Funique.IModuleBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Funique.Cinema.CinemaManagerServerData
    name: CinemaManagerServerData
    nameWithType: CinemaManagerServerData
    fullName: Funique.Cinema.CinemaManagerServerData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Funique.IModuleBase`1
    name: IModuleBase
    nameWithType: IModuleBase
    fullName: Funique.IModuleBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Funique.Cinema.CinemaManagerServerData
    name: CinemaManagerServerData
    nameWithType: CinemaManagerServerData
    fullName: Funique.Cinema.CinemaManagerServerData
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.ManagerBase{Funique.Cinema.CinemaManagerServerData}.config
  commentId: P:Funique.Manager.ManagerBase{Funique.Cinema.CinemaManagerServerData}.config
  parent: Funique.Manager.ManagerBase{Funique.Cinema.CinemaManagerServerData}
  definition: Funique.Manager.ManagerBase`1.config
  name: config
  nameWithType: ManagerBase<CinemaManagerServerData>.config
  fullName: Funique.Manager.ManagerBase<Funique.Cinema.CinemaManagerServerData>.config
  nameWithType.vb: ManagerBase(Of CinemaManagerServerData).config
  fullName.vb: Funique.Manager.ManagerBase(Of Funique.Cinema.CinemaManagerServerData).config
- uid: Funique.Manager.ManagerBase{Funique.Cinema.CinemaManagerServerData}.RegisterConfig(Funique.Cinema.CinemaManagerServerData)
  commentId: M:Funique.Manager.ManagerBase{Funique.Cinema.CinemaManagerServerData}.RegisterConfig(Funique.Cinema.CinemaManagerServerData)
  parent: Funique.Manager.ManagerBase{Funique.Cinema.CinemaManagerServerData}
  definition: Funique.Manager.ManagerBase`1.RegisterConfig(`0)
  name: RegisterConfig(CinemaManagerServerData)
  nameWithType: ManagerBase<CinemaManagerServerData>.RegisterConfig(CinemaManagerServerData)
  fullName: Funique.Manager.ManagerBase<Funique.Cinema.CinemaManagerServerData>.RegisterConfig(Funique.Cinema.CinemaManagerServerData)
  nameWithType.vb: ManagerBase(Of CinemaManagerServerData).RegisterConfig(CinemaManagerServerData)
  fullName.vb: Funique.Manager.ManagerBase(Of Funique.Cinema.CinemaManagerServerData).RegisterConfig(Funique.Cinema.CinemaManagerServerData)
  spec.csharp:
  - uid: Funique.Manager.ManagerBase`1.RegisterConfig(`0)
    name: RegisterConfig
    nameWithType: ManagerBase<CinemaManagerServerData>.RegisterConfig
    fullName: Funique.Manager.ManagerBase<Funique.Cinema.CinemaManagerServerData>.RegisterConfig
  - name: (
    nameWithType: (
    fullName: (
  - uid: Funique.Cinema.CinemaManagerServerData
    name: CinemaManagerServerData
    nameWithType: CinemaManagerServerData
    fullName: Funique.Cinema.CinemaManagerServerData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase`1.RegisterConfig(`0)
    name: RegisterConfig
    nameWithType: ManagerBase(Of CinemaManagerServerData).RegisterConfig
    fullName: Funique.Manager.ManagerBase(Of Funique.Cinema.CinemaManagerServerData).RegisterConfig
  - name: (
    nameWithType: (
    fullName: (
  - uid: Funique.Cinema.CinemaManagerServerData
    name: CinemaManagerServerData
    nameWithType: CinemaManagerServerData
    fullName: Funique.Cinema.CinemaManagerServerData
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.ManagerBase{Funique.Cinema.CinemaManagerServerData}.Loaded(Funique.Cinema.CinemaManagerServerData)
  commentId: M:Funique.Manager.ManagerBase{Funique.Cinema.CinemaManagerServerData}.Loaded(Funique.Cinema.CinemaManagerServerData)
  parent: Funique.Manager.ManagerBase{Funique.Cinema.CinemaManagerServerData}
  definition: Funique.Manager.ManagerBase`1.Loaded(`0)
  name: Loaded(CinemaManagerServerData)
  nameWithType: ManagerBase<CinemaManagerServerData>.Loaded(CinemaManagerServerData)
  fullName: Funique.Manager.ManagerBase<Funique.Cinema.CinemaManagerServerData>.Loaded(Funique.Cinema.CinemaManagerServerData)
  nameWithType.vb: ManagerBase(Of CinemaManagerServerData).Loaded(CinemaManagerServerData)
  fullName.vb: Funique.Manager.ManagerBase(Of Funique.Cinema.CinemaManagerServerData).Loaded(Funique.Cinema.CinemaManagerServerData)
  spec.csharp:
  - uid: Funique.Manager.ManagerBase`1.Loaded(`0)
    name: Loaded
    nameWithType: ManagerBase<CinemaManagerServerData>.Loaded
    fullName: Funique.Manager.ManagerBase<Funique.Cinema.CinemaManagerServerData>.Loaded
  - name: (
    nameWithType: (
    fullName: (
  - uid: Funique.Cinema.CinemaManagerServerData
    name: CinemaManagerServerData
    nameWithType: CinemaManagerServerData
    fullName: Funique.Cinema.CinemaManagerServerData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase`1.Loaded(`0)
    name: Loaded
    nameWithType: ManagerBase(Of CinemaManagerServerData).Loaded
    fullName: Funique.Manager.ManagerBase(Of Funique.Cinema.CinemaManagerServerData).Loaded
  - name: (
    nameWithType: (
    fullName: (
  - uid: Funique.Cinema.CinemaManagerServerData
    name: CinemaManagerServerData
    nameWithType: CinemaManagerServerData
    fullName: Funique.Cinema.CinemaManagerServerData
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.ManagerBase.Initialization
  commentId: M:Funique.Manager.ManagerBase.Initialization
  parent: Funique.Manager.ManagerBase
  name: Initialization()
  nameWithType: ManagerBase.Initialization()
  fullName: Funique.Manager.ManagerBase.Initialization()
  spec.csharp:
  - uid: Funique.Manager.ManagerBase.Initialization
    name: Initialization
    nameWithType: ManagerBase.Initialization
    fullName: Funique.Manager.ManagerBase.Initialization
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase.Initialization
    name: Initialization
    nameWithType: ManagerBase.Initialization
    fullName: Funique.Manager.ManagerBase.Initialization
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.ManagerBase.FrameUpdate
  commentId: M:Funique.Manager.ManagerBase.FrameUpdate
  parent: Funique.Manager.ManagerBase
  name: FrameUpdate()
  nameWithType: ManagerBase.FrameUpdate()
  fullName: Funique.Manager.ManagerBase.FrameUpdate()
  spec.csharp:
  - uid: Funique.Manager.ManagerBase.FrameUpdate
    name: FrameUpdate
    nameWithType: ManagerBase.FrameUpdate
    fullName: Funique.Manager.ManagerBase.FrameUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase.FrameUpdate
    name: FrameUpdate
    nameWithType: ManagerBase.FrameUpdate
    fullName: Funique.Manager.ManagerBase.FrameUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.ManagerBase.Shutdown
  commentId: M:Funique.Manager.ManagerBase.Shutdown
  parent: Funique.Manager.ManagerBase
  name: Shutdown()
  nameWithType: ManagerBase.Shutdown()
  fullName: Funique.Manager.ManagerBase.Shutdown()
  spec.csharp:
  - uid: Funique.Manager.ManagerBase.Shutdown
    name: Shutdown
    nameWithType: ManagerBase.Shutdown
    fullName: Funique.Manager.ManagerBase.Shutdown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase.Shutdown
    name: Shutdown
    nameWithType: ManagerBase.Shutdown
    fullName: Funique.Manager.ManagerBase.Shutdown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.ManagerBase.Dispose
  commentId: M:Funique.Manager.ManagerBase.Dispose
  parent: Funique.Manager.ManagerBase
  name: Dispose()
  nameWithType: ManagerBase.Dispose()
  fullName: Funique.Manager.ManagerBase.Dispose()
  spec.csharp:
  - uid: Funique.Manager.ManagerBase.Dispose
    name: Dispose
    nameWithType: ManagerBase.Dispose
    fullName: Funique.Manager.ManagerBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase.Dispose
    name: Dispose
    nameWithType: ManagerBase.Dispose
    fullName: Funique.Manager.ManagerBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Funique.Manager.ManagerBase`1
  commentId: T:Funique.Manager.ManagerBase`1
  name: ManagerBase<T>
  nameWithType: ManagerBase<T>
  fullName: Funique.Manager.ManagerBase<T>
  nameWithType.vb: ManagerBase(Of T)
  fullName.vb: Funique.Manager.ManagerBase(Of T)
  name.vb: ManagerBase(Of T)
  spec.csharp:
  - uid: Funique.Manager.ManagerBase`1
    name: ManagerBase
    nameWithType: ManagerBase
    fullName: Funique.Manager.ManagerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Funique.Manager.ManagerBase`1
    name: ManagerBase
    nameWithType: ManagerBase
    fullName: Funique.Manager.ManagerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Cinema
  commentId: N:Funique.Cinema
  name: Funique.Cinema
  nameWithType: Funique.Cinema
  fullName: Funique.Cinema
- uid: Funique.IModuleBase`1
  commentId: T:Funique.IModuleBase`1
  name: IModuleBase<T>
  nameWithType: IModuleBase<T>
  fullName: Funique.IModuleBase<T>
  nameWithType.vb: IModuleBase(Of T)
  fullName.vb: Funique.IModuleBase(Of T)
  name.vb: IModuleBase(Of T)
  spec.csharp:
  - uid: Funique.IModuleBase`1
    name: IModuleBase
    nameWithType: IModuleBase
    fullName: Funique.IModuleBase
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Funique.IModuleBase`1
    name: IModuleBase
    nameWithType: IModuleBase
    fullName: Funique.IModuleBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique
  commentId: N:Funique
  name: Funique
  nameWithType: Funique
  fullName: Funique
- uid: Funique.Manager.ManagerBase`1.config
  commentId: P:Funique.Manager.ManagerBase`1.config
  name: config
  nameWithType: ManagerBase<T>.config
  fullName: Funique.Manager.ManagerBase<T>.config
  nameWithType.vb: ManagerBase(Of T).config
  fullName.vb: Funique.Manager.ManagerBase(Of T).config
- uid: Funique.Manager.ManagerBase`1.RegisterConfig(`0)
  commentId: M:Funique.Manager.ManagerBase`1.RegisterConfig(`0)
  name: RegisterConfig(T)
  nameWithType: ManagerBase<T>.RegisterConfig(T)
  fullName: Funique.Manager.ManagerBase<T>.RegisterConfig(T)
  nameWithType.vb: ManagerBase(Of T).RegisterConfig(T)
  fullName.vb: Funique.Manager.ManagerBase(Of T).RegisterConfig(T)
  spec.csharp:
  - uid: Funique.Manager.ManagerBase`1.RegisterConfig(`0)
    name: RegisterConfig
    nameWithType: ManagerBase<T>.RegisterConfig
    fullName: Funique.Manager.ManagerBase<T>.RegisterConfig
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase`1.RegisterConfig(`0)
    name: RegisterConfig
    nameWithType: ManagerBase(Of T).RegisterConfig
    fullName: Funique.Manager.ManagerBase(Of T).RegisterConfig
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.ManagerBase`1.Loaded(`0)
  commentId: M:Funique.Manager.ManagerBase`1.Loaded(`0)
  name: Loaded(T)
  nameWithType: ManagerBase<T>.Loaded(T)
  fullName: Funique.Manager.ManagerBase<T>.Loaded(T)
  nameWithType.vb: ManagerBase(Of T).Loaded(T)
  fullName.vb: Funique.Manager.ManagerBase(Of T).Loaded(T)
  spec.csharp:
  - uid: Funique.Manager.ManagerBase`1.Loaded(`0)
    name: Loaded
    nameWithType: ManagerBase<T>.Loaded
    fullName: Funique.Manager.ManagerBase<T>.Loaded
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Manager.ManagerBase`1.Loaded(`0)
    name: Loaded
    nameWithType: ManagerBase(Of T).Loaded
    fullName: Funique.Manager.ManagerBase(Of T).Loaded
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.CinemaManagerServerUtility.RefCinema*
  commentId: Overload:Funique.Manager.CinemaManagerServerUtility.RefCinema
  name: RefCinema
  nameWithType: CinemaManagerServerUtility.RefCinema
  fullName: Funique.Manager.CinemaManagerServerUtility.RefCinema
- uid: Funique.Cinema.ICinemaServerUtility.RefCinema
  commentId: P:Funique.Cinema.ICinemaServerUtility.RefCinema
  parent: Funique.Cinema.ICinemaServerUtility
  name: RefCinema
  nameWithType: ICinemaServerUtility.RefCinema
  fullName: Funique.Cinema.ICinemaServerUtility.RefCinema
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Funique.Manager.CinemaManagerServerUtility.RefCinemaLabel*
  commentId: Overload:Funique.Manager.CinemaManagerServerUtility.RefCinemaLabel
  name: RefCinemaLabel
  nameWithType: CinemaManagerServerUtility.RefCinemaLabel
  fullName: Funique.Manager.CinemaManagerServerUtility.RefCinemaLabel
- uid: Funique.Cinema.ICinemaServerUtility.RefCinemaLabel
  commentId: P:Funique.Cinema.ICinemaServerUtility.RefCinemaLabel
  parent: Funique.Cinema.ICinemaServerUtility
  name: RefCinemaLabel
  nameWithType: ICinemaServerUtility.RefCinemaLabel
  fullName: Funique.Cinema.ICinemaServerUtility.RefCinemaLabel
- uid: Funique.Manager.CinemaManagerServerUtility.CinemaCount*
  commentId: Overload:Funique.Manager.CinemaManagerServerUtility.CinemaCount
  name: CinemaCount
  nameWithType: CinemaManagerServerUtility.CinemaCount
  fullName: Funique.Manager.CinemaManagerServerUtility.CinemaCount
- uid: Funique.Cinema.ICinemaServerUtility.CinemaCount
  commentId: P:Funique.Cinema.ICinemaServerUtility.CinemaCount
  parent: Funique.Cinema.ICinemaServerUtility
  name: CinemaCount
  nameWithType: ICinemaServerUtility.CinemaCount
  fullName: Funique.Cinema.ICinemaServerUtility.CinemaCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Funique.Manager.CinemaManagerServerUtility.ViewDict*
  commentId: Overload:Funique.Manager.CinemaManagerServerUtility.ViewDict
  name: ViewDict
  nameWithType: CinemaManagerServerUtility.ViewDict
  fullName: Funique.Manager.CinemaManagerServerUtility.ViewDict
- uid: Funique.Cinema.ICinemaServerUtility.ViewDict
  commentId: P:Funique.Cinema.ICinemaServerUtility.ViewDict
  parent: Funique.Cinema.ICinemaServerUtility
  name: ViewDict
  nameWithType: ICinemaServerUtility.ViewDict
  fullName: Funique.Cinema.ICinemaServerUtility.ViewDict
- uid: System.Collections.Generic.Dictionary{System.Int32,Funique.Cinema.CinemaView}
  commentId: T:System.Collections.Generic.Dictionary{System.Int32,Funique.Cinema.CinemaView}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<Int32, CinemaView>
  nameWithType: Dictionary<Int32, CinemaView>
  fullName: System.Collections.Generic.Dictionary<System.Int32, Funique.Cinema.CinemaView>
  nameWithType.vb: Dictionary(Of Int32, CinemaView)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Int32, Funique.Cinema.CinemaView)
  name.vb: Dictionary(Of Int32, CinemaView)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Funique.Cinema.CinemaView
    name: CinemaView
    nameWithType: CinemaView
    fullName: Funique.Cinema.CinemaView
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Funique.Cinema.CinemaView
    name: CinemaView
    nameWithType: CinemaView
    fullName: Funique.Cinema.CinemaView
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Funique.Manager.CinemaManagerServerUtility.CinemaDataDict*
  commentId: Overload:Funique.Manager.CinemaManagerServerUtility.CinemaDataDict
  name: CinemaDataDict
  nameWithType: CinemaManagerServerUtility.CinemaDataDict
  fullName: Funique.Manager.CinemaManagerServerUtility.CinemaDataDict
- uid: Funique.Cinema.ICinemaServerUtility.CinemaDataDict
  commentId: P:Funique.Cinema.ICinemaServerUtility.CinemaDataDict
  parent: Funique.Cinema.ICinemaServerUtility
  name: CinemaDataDict
  nameWithType: ICinemaServerUtility.CinemaDataDict
  fullName: Funique.Cinema.ICinemaServerUtility.CinemaDataDict
- uid: System.Collections.Generic.Dictionary{System.Int32,Funique.Cinema.CinemaLabelData}
  commentId: T:System.Collections.Generic.Dictionary{System.Int32,Funique.Cinema.CinemaLabelData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<Int32, CinemaLabelData>
  nameWithType: Dictionary<Int32, CinemaLabelData>
  fullName: System.Collections.Generic.Dictionary<System.Int32, Funique.Cinema.CinemaLabelData>
  nameWithType.vb: Dictionary(Of Int32, CinemaLabelData)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Int32, Funique.Cinema.CinemaLabelData)
  name.vb: Dictionary(Of Int32, CinemaLabelData)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Funique.Cinema.CinemaLabelData
    name: CinemaLabelData
    nameWithType: CinemaLabelData
    fullName: Funique.Cinema.CinemaLabelData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Funique.Cinema.CinemaLabelData
    name: CinemaLabelData
    nameWithType: CinemaLabelData
    fullName: Funique.Cinema.CinemaLabelData
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.CinemaManagerServerUtility.CinemaViewDict*
  commentId: Overload:Funique.Manager.CinemaManagerServerUtility.CinemaViewDict
  name: CinemaViewDict
  nameWithType: CinemaManagerServerUtility.CinemaViewDict
  fullName: Funique.Manager.CinemaManagerServerUtility.CinemaViewDict
- uid: Funique.Cinema.ICinemaServerUtility.CinemaViewDict
  commentId: P:Funique.Cinema.ICinemaServerUtility.CinemaViewDict
  parent: Funique.Cinema.ICinemaServerUtility
  name: CinemaViewDict
  nameWithType: ICinemaServerUtility.CinemaViewDict
  fullName: Funique.Cinema.ICinemaServerUtility.CinemaViewDict
- uid: System.Collections.Generic.Dictionary{System.Int32,Funique.Cinema.CinemaLabelViewBase}
  commentId: T:System.Collections.Generic.Dictionary{System.Int32,Funique.Cinema.CinemaLabelViewBase}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<Int32, CinemaLabelViewBase>
  nameWithType: Dictionary<Int32, CinemaLabelViewBase>
  fullName: System.Collections.Generic.Dictionary<System.Int32, Funique.Cinema.CinemaLabelViewBase>
  nameWithType.vb: Dictionary(Of Int32, CinemaLabelViewBase)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Int32, Funique.Cinema.CinemaLabelViewBase)
  name.vb: Dictionary(Of Int32, CinemaLabelViewBase)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Funique.Cinema.CinemaLabelViewBase
    name: CinemaLabelViewBase
    nameWithType: CinemaLabelViewBase
    fullName: Funique.Cinema.CinemaLabelViewBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Funique.Cinema.CinemaLabelViewBase
    name: CinemaLabelViewBase
    nameWithType: CinemaLabelViewBase
    fullName: Funique.Cinema.CinemaLabelViewBase
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{System.Int32}
  commentId: T:System.EventHandler{System.Int32}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<Int32>
  nameWithType: EventHandler<Int32>
  fullName: System.EventHandler<System.Int32>
  nameWithType.vb: EventHandler(Of Int32)
  fullName.vb: System.EventHandler(Of System.Int32)
  name.vb: EventHandler(Of Int32)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{Funique.Cinema.CinemaDataCollection}
  commentId: T:System.EventHandler{Funique.Cinema.CinemaDataCollection}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<CinemaDataCollection>
  nameWithType: EventHandler<CinemaDataCollection>
  fullName: System.EventHandler<Funique.Cinema.CinemaDataCollection>
  nameWithType.vb: EventHandler(Of CinemaDataCollection)
  fullName.vb: System.EventHandler(Of Funique.Cinema.CinemaDataCollection)
  name.vb: EventHandler(Of CinemaDataCollection)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Funique.Cinema.CinemaDataCollection
    name: CinemaDataCollection
    nameWithType: CinemaDataCollection
    fullName: Funique.Cinema.CinemaDataCollection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Funique.Cinema.CinemaDataCollection
    name: CinemaDataCollection
    nameWithType: CinemaDataCollection
    fullName: Funique.Cinema.CinemaDataCollection
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.CinemaManagerServerUtility.CleanCinemaInstance*
  commentId: Overload:Funique.Manager.CinemaManagerServerUtility.CleanCinemaInstance
  name: CleanCinemaInstance
  nameWithType: CinemaManagerServerUtility.CleanCinemaInstance
  fullName: Funique.Manager.CinemaManagerServerUtility.CleanCinemaInstance
- uid: Funique.Cinema.ICinemaServerUtility.CleanCinemaInstance
  commentId: M:Funique.Cinema.ICinemaServerUtility.CleanCinemaInstance
  parent: Funique.Cinema.ICinemaServerUtility
  name: CleanCinemaInstance()
  nameWithType: ICinemaServerUtility.CleanCinemaInstance()
  fullName: Funique.Cinema.ICinemaServerUtility.CleanCinemaInstance()
  spec.csharp:
  - uid: Funique.Cinema.ICinemaServerUtility.CleanCinemaInstance
    name: CleanCinemaInstance
    nameWithType: ICinemaServerUtility.CleanCinemaInstance
    fullName: Funique.Cinema.ICinemaServerUtility.CleanCinemaInstance
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Cinema.ICinemaServerUtility.CleanCinemaInstance
    name: CleanCinemaInstance
    nameWithType: ICinemaServerUtility.CleanCinemaInstance
    fullName: Funique.Cinema.ICinemaServerUtility.CleanCinemaInstance
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.CinemaManagerServerUtility.CreateCinema*
  commentId: Overload:Funique.Manager.CinemaManagerServerUtility.CreateCinema
  name: CreateCinema
  nameWithType: CinemaManagerServerUtility.CreateCinema
  fullName: Funique.Manager.CinemaManagerServerUtility.CreateCinema
- uid: Funique.Cinema.ICinemaServerUtility.CreateCinema(System.Int32)
  commentId: M:Funique.Cinema.ICinemaServerUtility.CreateCinema(System.Int32)
  parent: Funique.Cinema.ICinemaServerUtility
  isExternal: true
  name: CreateCinema(Int32)
  nameWithType: ICinemaServerUtility.CreateCinema(Int32)
  fullName: Funique.Cinema.ICinemaServerUtility.CreateCinema(System.Int32)
  spec.csharp:
  - uid: Funique.Cinema.ICinemaServerUtility.CreateCinema(System.Int32)
    name: CreateCinema
    nameWithType: ICinemaServerUtility.CreateCinema
    fullName: Funique.Cinema.ICinemaServerUtility.CreateCinema
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Cinema.ICinemaServerUtility.CreateCinema(System.Int32)
    name: CreateCinema
    nameWithType: ICinemaServerUtility.CreateCinema
    fullName: Funique.Cinema.ICinemaServerUtility.CreateCinema
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Transform
  commentId: T:UnityEngine.Transform
  parent: UnityEngine
  isExternal: true
  name: Transform
  nameWithType: Transform
  fullName: UnityEngine.Transform
- uid: Funique.Manager.CinemaManagerServerUtility.CreateCinemaLabel*
  commentId: Overload:Funique.Manager.CinemaManagerServerUtility.CreateCinemaLabel
  name: CreateCinemaLabel
  nameWithType: CinemaManagerServerUtility.CreateCinemaLabel
  fullName: Funique.Manager.CinemaManagerServerUtility.CreateCinemaLabel
- uid: Funique.Cinema.ICinemaServerUtility.CreateCinemaLabel(System.Int32)
  commentId: M:Funique.Cinema.ICinemaServerUtility.CreateCinemaLabel(System.Int32)
  parent: Funique.Cinema.ICinemaServerUtility
  isExternal: true
  name: CreateCinemaLabel(Int32)
  nameWithType: ICinemaServerUtility.CreateCinemaLabel(Int32)
  fullName: Funique.Cinema.ICinemaServerUtility.CreateCinemaLabel(System.Int32)
  spec.csharp:
  - uid: Funique.Cinema.ICinemaServerUtility.CreateCinemaLabel(System.Int32)
    name: CreateCinemaLabel
    nameWithType: ICinemaServerUtility.CreateCinemaLabel
    fullName: Funique.Cinema.ICinemaServerUtility.CreateCinemaLabel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Cinema.ICinemaServerUtility.CreateCinemaLabel(System.Int32)
    name: CreateCinemaLabel
    nameWithType: ICinemaServerUtility.CreateCinemaLabel
    fullName: Funique.Cinema.ICinemaServerUtility.CreateCinemaLabel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Manager.CinemaManagerServerUtility.OnCinemaSelectionChanged*
  commentId: Overload:Funique.Manager.CinemaManagerServerUtility.OnCinemaSelectionChanged
  name: OnCinemaSelectionChanged
  nameWithType: CinemaManagerServerUtility.OnCinemaSelectionChanged
  fullName: Funique.Manager.CinemaManagerServerUtility.OnCinemaSelectionChanged
- uid: Funique.Manager.CinemaManagerServerUtility.GetDataCollectionByCinemaIndex*
  commentId: Overload:Funique.Manager.CinemaManagerServerUtility.GetDataCollectionByCinemaIndex
  name: GetDataCollectionByCinemaIndex
  nameWithType: CinemaManagerServerUtility.GetDataCollectionByCinemaIndex
  fullName: Funique.Manager.CinemaManagerServerUtility.GetDataCollectionByCinemaIndex
- uid: Funique.Cinema.ICinemaServerUtility.GetDataCollectionByCinemaIndex(System.Int32)
  commentId: M:Funique.Cinema.ICinemaServerUtility.GetDataCollectionByCinemaIndex(System.Int32)
  parent: Funique.Cinema.ICinemaServerUtility
  isExternal: true
  name: GetDataCollectionByCinemaIndex(Int32)
  nameWithType: ICinemaServerUtility.GetDataCollectionByCinemaIndex(Int32)
  fullName: Funique.Cinema.ICinemaServerUtility.GetDataCollectionByCinemaIndex(System.Int32)
  spec.csharp:
  - uid: Funique.Cinema.ICinemaServerUtility.GetDataCollectionByCinemaIndex(System.Int32)
    name: GetDataCollectionByCinemaIndex
    nameWithType: ICinemaServerUtility.GetDataCollectionByCinemaIndex
    fullName: Funique.Cinema.ICinemaServerUtility.GetDataCollectionByCinemaIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Funique.Cinema.ICinemaServerUtility.GetDataCollectionByCinemaIndex(System.Int32)
    name: GetDataCollectionByCinemaIndex
    nameWithType: ICinemaServerUtility.GetDataCollectionByCinemaIndex
    fullName: Funique.Cinema.ICinemaServerUtility.GetDataCollectionByCinemaIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Funique.Cinema.CinemaDataCollection
  commentId: T:Funique.Cinema.CinemaDataCollection
  parent: Funique.Cinema
  name: CinemaDataCollection
  nameWithType: CinemaDataCollection
  fullName: Funique.Cinema.CinemaDataCollection
