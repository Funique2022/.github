### YamlMime:ManagedReference
items:
- uid: Funique.IToolVideoInfoExtension
  commentId: T:Funique.IToolVideoInfoExtension
  id: IToolVideoInfoExtension
  parent: Funique
  children:
  - Funique.IToolVideoInfoExtension.CheckSameVideoName(Funique.VideoInfo[],System.String)
  - Funique.IToolVideoInfoExtension.CheckSameVideoName(System.Collections.Generic.List{Funique.VideoInfo},System.String)
  langs:
  - csharp
  - vb
  name: IToolVideoInfoExtension
  nameWithType: IToolVideoInfoExtension
  fullName: Funique.IToolVideoInfoExtension
  type: Interface
  source:
    remote:
      path: Interface/Utility/IToolVideoInfoExtension.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: IToolVideoInfoExtension
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Interface/Utility/IToolVideoInfoExtension.cs
    startLine: 9
  assemblies:
  - Funique.Core
  namespace: Funique
  summary: "\nVideo information related utility methods <br />\n------------------------------------------------ <br />\n影片資訊相關幫助函式\n"
  example: []
  syntax:
    content: public interface IToolVideoInfoExtension
    content.vb: Public Interface IToolVideoInfoExtension
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Funique.IToolVideoInfoExtension.CheckSameVideoName(Funique.VideoInfo[],System.String)
  commentId: M:Funique.IToolVideoInfoExtension.CheckSameVideoName(Funique.VideoInfo[],System.String)
  id: CheckSameVideoName(Funique.VideoInfo[],System.String)
  parent: Funique.IToolVideoInfoExtension
  langs:
  - csharp
  - vb
  name: CheckSameVideoName(VideoInfo[], String)
  nameWithType: IToolVideoInfoExtension.CheckSameVideoName(VideoInfo[], String)
  fullName: Funique.IToolVideoInfoExtension.CheckSameVideoName(Funique.VideoInfo[], System.String)
  type: Method
  source:
    remote:
      path: Interface/Utility/IToolVideoInfoExtension.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: CheckSameVideoName
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Interface/Utility/IToolVideoInfoExtension.cs
    startLine: 19
  assemblies:
  - Funique.Core
  namespace: Funique
  summary: "\nCheck if there is a match video name in the list <br />\n------------------------------------------------ <br />\n查看影片資料陣列中是否有重複的影片名稱\n"
  example: []
  syntax:
    content: bool CheckSameVideoName(VideoInfo[] videoList, string videoName)
    parameters:
    - id: videoList
      type: Funique.VideoInfo[]
      description: Video list
    - id: videoName
      type: System.String
      description: Test target name
    return:
      type: System.Boolean
      description: Has match
    content.vb: Function CheckSameVideoName(videoList As VideoInfo(), videoName As String) As Boolean
  overload: Funique.IToolVideoInfoExtension.CheckSameVideoName*
  nameWithType.vb: IToolVideoInfoExtension.CheckSameVideoName(VideoInfo(), String)
  fullName.vb: Funique.IToolVideoInfoExtension.CheckSameVideoName(Funique.VideoInfo(), System.String)
  name.vb: CheckSameVideoName(VideoInfo(), String)
- uid: Funique.IToolVideoInfoExtension.CheckSameVideoName(System.Collections.Generic.List{Funique.VideoInfo},System.String)
  commentId: M:Funique.IToolVideoInfoExtension.CheckSameVideoName(System.Collections.Generic.List{Funique.VideoInfo},System.String)
  id: CheckSameVideoName(System.Collections.Generic.List{Funique.VideoInfo},System.String)
  parent: Funique.IToolVideoInfoExtension
  langs:
  - csharp
  - vb
  name: CheckSameVideoName(List<VideoInfo>, String)
  nameWithType: IToolVideoInfoExtension.CheckSameVideoName(List<VideoInfo>, String)
  fullName: Funique.IToolVideoInfoExtension.CheckSameVideoName(System.Collections.Generic.List<Funique.VideoInfo>, System.String)
  type: Method
  source:
    remote:
      path: Interface/Utility/IToolVideoInfoExtension.cs
      branch: v1.0
      repo: https://github.com/Funique2022/funique_core.git
    id: CheckSameVideoName
    path: ../../../project_unity_development/Assets/FuniquePlugin/Core/Interface/Utility/IToolVideoInfoExtension.cs
    startLine: 26
  assemblies:
  - Funique.Core
  namespace: Funique
  summary: "\n<inheritdoc cref=\"M:Funique.IToolVideoInfoExtension.CheckSameVideoName(Funique.VideoInfo[],System.String)\"></inheritdoc>\n"
  example: []
  syntax:
    content: bool CheckSameVideoName(List<VideoInfo> videoList, string videoName)
    parameters:
    - id: videoList
      type: System.Collections.Generic.List{Funique.VideoInfo}
      description: Video list
    - id: videoName
      type: System.String
      description: Test target name
    return:
      type: System.Boolean
      description: Has match
    content.vb: Function CheckSameVideoName(videoList As List(Of VideoInfo), videoName As String) As Boolean
  overload: Funique.IToolVideoInfoExtension.CheckSameVideoName*
  nameWithType.vb: IToolVideoInfoExtension.CheckSameVideoName(List(Of VideoInfo), String)
  fullName.vb: Funique.IToolVideoInfoExtension.CheckSameVideoName(System.Collections.Generic.List(Of Funique.VideoInfo), System.String)
  name.vb: CheckSameVideoName(List(Of VideoInfo), String)
references:
- uid: Funique
  commentId: N:Funique
  name: Funique
  nameWithType: Funique
  fullName: Funique
- uid: Funique.IToolVideoInfoExtension.CheckSameVideoName*
  commentId: Overload:Funique.IToolVideoInfoExtension.CheckSameVideoName
  name: CheckSameVideoName
  nameWithType: IToolVideoInfoExtension.CheckSameVideoName
  fullName: Funique.IToolVideoInfoExtension.CheckSameVideoName
- uid: Funique.VideoInfo[]
  isExternal: true
  name: VideoInfo[]
  nameWithType: VideoInfo[]
  fullName: Funique.VideoInfo[]
  nameWithType.vb: VideoInfo()
  fullName.vb: Funique.VideoInfo()
  name.vb: VideoInfo()
  spec.csharp:
  - uid: Funique.VideoInfo
    name: VideoInfo
    nameWithType: VideoInfo
    fullName: Funique.VideoInfo
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Funique.VideoInfo
    name: VideoInfo
    nameWithType: VideoInfo
    fullName: Funique.VideoInfo
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{Funique.VideoInfo}
  commentId: T:System.Collections.Generic.List{Funique.VideoInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<VideoInfo>
  nameWithType: List<VideoInfo>
  fullName: System.Collections.Generic.List<Funique.VideoInfo>
  nameWithType.vb: List(Of VideoInfo)
  fullName.vb: System.Collections.Generic.List(Of Funique.VideoInfo)
  name.vb: List(Of VideoInfo)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Funique.VideoInfo
    name: VideoInfo
    nameWithType: VideoInfo
    fullName: Funique.VideoInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Funique.VideoInfo
    name: VideoInfo
    nameWithType: VideoInfo
    fullName: Funique.VideoInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
